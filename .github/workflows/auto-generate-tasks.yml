name: 自動生成客戶服務任務

on:
  schedule:
    # 每天凌晨 00:00 台北時間執行 (UTC+8 = UTC 16:00前一天)
    - cron: '0 16 * * *'
  
  workflow_dispatch:
    inputs:
      target_date:
        description: '目標日期 (YYYY-MM-DD，選填)'
        required: false
        type: string
      service_type:
        description: '服務類型篩選 (選填)'
        required: false
        type: choice
        options:
          - ''
          - accounting
          - vat
          - income_tax
          - withholding
          - prepayment
      dry_run:
        description: '測試模式（僅預覽不實際生成）'
        required: false
        type: boolean
        default: false

jobs:
  generate-tasks:
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout 程式碼
        uses: actions/checkout@v4
      
      - name: 🔧 設置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: timesheet-api/package-lock.json
      
      - name: 📦 安裝依賴
        run: |
          cd timesheet-api
          npm ci
      
      - name: 🔍 預覽將生成的任務
        if: ${{ github.event.inputs.dry_run == 'true' || github.event_name == 'workflow_dispatch' }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          cd timesheet-api
          echo "📋 預覽模式：查看將要生成的任務"
          node scripts/generate-tasks.js --preview --date "${{ github.event.inputs.target_date }}" --service-type "${{ github.event.inputs.service_type }}"
      
      - name: 🚀 執行任務生成
        if: ${{ github.event.inputs.dry_run != 'true' }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          cd timesheet-api
          echo "🎯 開始生成任務..."
          node scripts/generate-tasks.js --date "${{ github.event.inputs.target_date }}" --service-type "${{ github.event.inputs.service_type }}"
      
      - name: 📊 顯示執行結果
        if: always()
        run: |
          echo "✅ 任務生成流程執行完成"
          echo "📅 執行時間: $(date)"
      
      - name: 💬 發送通知 (失敗時)
        if: failure()
        run: |
          echo "❌ 任務生成失敗，請檢查日誌"
          # 這裡可以整合 Slack, Discord, Email 等通知服務
      
      - name: 📈 上傳執行報告
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: task-generation-report-${{ github.run_number }}
          path: timesheet-api/logs/
          retention-days: 30

# 額外的安全性檢查
concurrency:
  group: task-generation
  cancel-in-progress: false  # 不取消正在執行的任務

# 權限設定
permissions:
  contents: read
  actions: write
