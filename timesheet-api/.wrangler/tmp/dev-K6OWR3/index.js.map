{
  "version": 3,
  "sources": ["../../../src/utils.js", "../../../src/config/constants.js", "../../../src/routes/router.js", "../../../src/auth.js", "../../../src/middleware/auth.middleware.js", "../../../src/middleware/error.middleware.js", "../../../src/routes/auth.routes.js", "../../../src/repositories/BaseRepository.js", "../../../src/repositories/EmployeeRepository.js", "../../../src/services/EmployeeService.js", "../../../src/utils/response.util.js", "../../../src/handlers/employees.handler.js", "../../../src/routes/employees.routes.js", "../../../src/repositories/ClientRepository.js", "../../../src/services/ClientService.js", "../../../src/repositories/ClientServiceRepository.js", "../../../src/handlers/clients.handler.js", "../../../src/routes/clients.routes.js", "../../../src/repositories/TaskRepository.js", "../../../src/services/TaskService.js", "../../../src/handlers/tasks.handler.js", "../../../src/routes/tasks.routes.js", "../../../src/repositories/TimesheetRepository.js", "../../../src/services/TimesheetService.js", "../../../src/repositories/SystemRepository.js", "../../../src/services/SystemService.js", "../../../src/handlers/timesheets.handler.js", "../../../src/routes/timesheets.routes.js", "../../../src/repositories/ReminderRepository.js", "../../../src/services/ReminderService.js", "../../../src/handlers/reminders.handler.js", "../../../src/routes/reminders.routes.js", "../../../src/repositories/SopRepository.js", "../../../src/services/SopService.js", "../../../src/handlers/sops.handler.js", "../../../src/routes/sops.routes.js", "../../../src/handlers/system.handler.js", "../../../src/routes/system.routes.js", "../../../src/handlers/reports.handler.js", "../../../src/routes/reports.routes.js", "../../../src/index.js", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-1xFnd6/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-1xFnd6/middleware-loader.entry.ts"],
  "sourceRoot": "C:\\Users\\miama\\Desktop\\horgoscpa\\timesheet-api\\.wrangler\\tmp\\dev-K6OWR3",
  "sourcesContent": ["// ================================================================\r\n// \u5171\u7528\u5DE5\u5177\u51FD\u6578\r\n// ================================================================\r\n\r\n// CORS Headers\r\nexport const corsHeaders = {\r\n  \"Access-Control-Allow-Origin\": \"*\",\r\n  \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, OPTIONS\",\r\n  \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\",\r\n};\r\n\r\n// \u7D71\u4E00\u7684 JSON \u56DE\u61C9\u51FD\u6578\r\nexport function jsonResponse(data, status = 200) {\r\n  return new Response(JSON.stringify(data), {\r\n    status,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      ...corsHeaders,\r\n    },\r\n  });\r\n}\r\n", "/**\r\n * \u5F8C\u7AEF\u5E38\u91CF\u5B9A\u7FA9\r\n * \u96C6\u4E2D\u7BA1\u7406\u6240\u6709\u5E38\u91CF\uFF0C\u78BA\u4FDD\u524D\u5F8C\u7AEF\u4E00\u81F4\r\n */\r\n\r\n// \u7528\u6236\u89D2\u8272\r\nexport const USER_ROLES = {\r\n  ADMIN: 'admin',\r\n  EMPLOYEE: 'employee'\r\n};\r\n\r\n// \u4EFB\u52D9\u72C0\u614B\r\nexport const TASK_STATUS = {\r\n  PENDING: 'pending',\r\n  IN_PROGRESS: 'in_progress',\r\n  ON_HOLD: 'on_hold',\r\n  COMPLETED: 'completed',\r\n  CANCELLED: 'cancelled'\r\n};\r\n\r\n// \u4EFB\u52D9\u985E\u578B\r\nexport const TASK_TYPE = {\r\n  TASK: 'task',\r\n  PROJECT: 'project',\r\n  RECURRING: 'recurring'\r\n};\r\n\r\n// \u4EFB\u52D9\u5206\u985E\r\nexport const TASK_CATEGORY = {\r\n  RECURRING: 'recurring',\r\n  BUSINESS: 'business',\r\n  FINANCE: 'finance',\r\n  CLIENT_SERVICE: 'client_service',\r\n  GENERAL: 'general'\r\n};\r\n\r\n// \u4EFB\u52D9\u512A\u5148\u7D1A\r\nexport const TASK_PRIORITY = {\r\n  LOW: 'low',\r\n  MEDIUM: 'medium',\r\n  HIGH: 'high'\r\n};\r\n\r\n// \u670D\u52D9\u985E\u578B\r\nexport const SERVICE_TYPE = {\r\n  ACCOUNTING: 'accounting',\r\n  VAT: 'vat',\r\n  INCOME_TAX: 'income_tax',\r\n  WITHHOLDING: 'withholding',\r\n  PREPAYMENT: 'prepayment',\r\n  DIVIDEND: 'dividend',\r\n  NHI: 'nhi',\r\n  SHAREHOLDER_TAX: 'shareholder_tax',\r\n  AUDIT: 'audit',\r\n  COMPANY_SETUP: 'company_setup'\r\n};\r\n\r\n// \u670D\u52D9\u983B\u7387\r\nexport const SERVICE_FREQUENCY = {\r\n  MONTHLY: 'monthly',\r\n  BIMONTHLY: 'bimonthly',\r\n  QUARTERLY: 'quarterly',\r\n  BIANNUAL: 'biannual',\r\n  ANNUAL: 'annual'\r\n};\r\n\r\n// \u5BA2\u6236\u72C0\u614B\r\nexport const CLIENT_STATUS = {\r\n  ACTIVE: 'active',\r\n  INACTIVE: 'inactive',\r\n  POTENTIAL: 'potential'\r\n};\r\n\r\n// \u5340\u57DF\r\nexport const REGIONS = {\r\n  TAICHUNG: '\u53F0\u4E2D',\r\n  TAIPEI: '\u53F0\u5317',\r\n  OTHER: '\u5176\u4ED6'\r\n};\r\n\r\n// \u7BC4\u672C\u985E\u578B\r\nexport const TEMPLATE_TYPE = {\r\n  GENERAL: 'general',\r\n  SERVICE_CHECKLIST: 'service_checklist'\r\n};\r\n\r\n// \u6587\u6A94\u985E\u578B\r\nexport const DOCUMENT_TYPE = {\r\n  SOP: 'sop',\r\n  DOCUMENT: 'document',\r\n  FAQ: 'faq'\r\n};\r\n\r\n// \u63D0\u9192\u985E\u578B\r\nexport const REMINDER_TYPE = {\r\n  DUE_SOON: 'due_soon',\r\n  OVERDUE: 'overdue',\r\n  ASSIGNED: 'assigned',\r\n  COMPLETED: 'completed',\r\n  CUSTOM: 'custom'\r\n};\r\n\r\n// HTTP \u72C0\u614B\u78BC\r\nexport const HTTP_STATUS = {\r\n  OK: 200,\r\n  CREATED: 201,\r\n  NO_CONTENT: 204,\r\n  BAD_REQUEST: 400,\r\n  UNAUTHORIZED: 401,\r\n  FORBIDDEN: 403,\r\n  NOT_FOUND: 404,\r\n  CONFLICT: 409,\r\n  INTERNAL_ERROR: 500\r\n};\r\n\r\n// \u932F\u8AA4\u4EE3\u78BC\r\nexport const ERROR_CODES = {\r\n  // \u8A8D\u8B49\u932F\u8AA4\r\n  UNAUTHORIZED: 'UNAUTHORIZED',\r\n  FORBIDDEN: 'FORBIDDEN',\r\n  TOKEN_EXPIRED: 'TOKEN_EXPIRED',\r\n  INVALID_CREDENTIALS: 'INVALID_CREDENTIALS',\r\n  \r\n  // \u9A57\u8B49\u932F\u8AA4\r\n  VALIDATION_ERROR: 'VALIDATION_ERROR',\r\n  REQUIRED_FIELD: 'REQUIRED_FIELD',\r\n  INVALID_FORMAT: 'INVALID_FORMAT',\r\n  INVALID_TYPE: 'INVALID_TYPE',\r\n  \r\n  // \u696D\u52D9\u932F\u8AA4\r\n  NOT_FOUND: 'NOT_FOUND',\r\n  ALREADY_EXISTS: 'ALREADY_EXISTS',\r\n  CONFLICT: 'CONFLICT',\r\n  PERMISSION_DENIED: 'PERMISSION_DENIED',\r\n  \r\n  // \u7CFB\u7D71\u932F\u8AA4\r\n  INTERNAL_ERROR: 'INTERNAL_ERROR',\r\n  DATABASE_ERROR: 'DATABASE_ERROR',\r\n  NETWORK_ERROR: 'NETWORK_ERROR'\r\n};\r\n\r\n// \u8CC7\u6599\u5EAB\u8868\u540D\uFF08\u96C6\u4E2D\u5B9A\u7FA9\uFF0C\u907F\u514D\u5B57\u7B26\u4E32\u786C\u7DE8\u78BC\uFF09\r\nexport const TABLES = {\r\n  USERS: 'users',\r\n  EMPLOYEES: 'employees',\r\n  SESSIONS: 'sessions',\r\n  CLIENTS: 'clients',\r\n  CLIENT_SERVICES: 'client_services',\r\n  CLIENT_INTERACTIONS: 'client_interactions',\r\n  TASKS: 'tasks',\r\n  MULTI_STAGE_TASKS: 'multi_stage_tasks',\r\n  TASK_STAGES: 'task_stages',\r\n  TASK_TEMPLATES: 'task_templates',\r\n  TASK_TEMPLATE_STAGES: 'task_template_stages',\r\n  TASK_GENERATION_LOG: 'task_generation_log',\r\n  TASK_EXECUTION_LOG: 'task_execution_log',\r\n  TIMESHEETS: 'timesheets',\r\n  LEAVE_TYPES: 'leave_types',\r\n  LEAVE_EVENTS: 'leave_events',\r\n  ANNUAL_LEAVE_RULES: 'annual_leave_rules',\r\n  ANNUAL_LEAVE_CARRYOVER: 'annual_leave_carryover',\r\n  OVERTIME_RATES: 'overtime_rates',\r\n  HOLIDAYS: 'holidays',\r\n  BUSINESS_TYPES: 'business_types',\r\n  SOPS: 'sops',\r\n  SOP_CATEGORIES: 'sop_categories',\r\n  SOP_VERSIONS: 'sop_versions',\r\n  POSTS: 'posts',\r\n  MEDIA_LIBRARY: 'media_library',\r\n  FAQS: 'faqs',\r\n  FAQ_CATEGORIES: 'faq_categories',\r\n  SYSTEM_PARAMETERS: 'system_parameters',\r\n  TASK_REMINDERS: 'task_reminders',\r\n  USER_WORKLOAD_STATS: 'user_workload_stats',\r\n  REPORT_CACHE: 'report_cache'\r\n};\r\n\r\n// \u6A19\u6E96\u6B04\u4F4D\u540D\uFF08\u96C6\u4E2D\u5B9A\u7FA9\uFF0C\u907F\u514D\u62FC\u5BEB\u932F\u8AA4\uFF09\r\nexport const FIELDS = {\r\n  // \u901A\u7528\u6B04\u4F4D\r\n  ID: 'id',\r\n  CREATED_AT: 'created_at',\r\n  UPDATED_AT: 'updated_at',\r\n  DELETED_AT: 'deleted_at',\r\n  \r\n  // \u7528\u6236\u76F8\u95DC\r\n  USER_ID: 'user_id',\r\n  EMPLOYEE_ID: 'employee_id',\r\n  ASSIGNED_USER_ID: 'assigned_user_id',\r\n  CREATED_BY_USER_ID: 'created_by_user_id',\r\n  APPROVED_BY_USER_ID: 'approved_by_user_id',\r\n  COMPLETED_BY_USER_ID: 'completed_by_user_id',\r\n  MODIFIED_BY_USER_ID: 'modified_by_user_id',\r\n  \r\n  // \u5176\u4ED6\u95DC\u806F\r\n  CLIENT_ID: 'client_id',\r\n  TASK_ID: 'task_id',\r\n  TEMPLATE_ID: 'template_id',\r\n  CATEGORY_ID: 'category_id',\r\n  \r\n  // \u72C0\u614B\u6B04\u4F4D\r\n  IS_ACTIVE: 'is_active',\r\n  IS_DELETED: 'is_deleted',\r\n  IS_APPROVED: 'is_approved',\r\n  IS_DEFAULT: 'is_default',\r\n  IS_LOCKED: 'is_locked'\r\n};\r\n\r\n// \u51CD\u7D50\u6240\u6709\u5E38\u91CF\r\nObject.freeze(USER_ROLES);\r\nObject.freeze(TASK_STATUS);\r\nObject.freeze(TASK_TYPE);\r\nObject.freeze(TASK_CATEGORY);\r\nObject.freeze(TASK_PRIORITY);\r\nObject.freeze(SERVICE_TYPE);\r\nObject.freeze(SERVICE_FREQUENCY);\r\nObject.freeze(CLIENT_STATUS);\r\nObject.freeze(REGIONS);\r\nObject.freeze(TEMPLATE_TYPE);\r\nObject.freeze(DOCUMENT_TYPE);\r\nObject.freeze(REMINDER_TYPE);\r\nObject.freeze(HTTP_STATUS);\r\nObject.freeze(ERROR_CODES);\r\nObject.freeze(TABLES);\r\nObject.freeze(FIELDS);\r\n\r\nexport default {\r\n  USER_ROLES,\r\n  TASK_STATUS,\r\n  TASK_TYPE,\r\n  TASK_CATEGORY,\r\n  TASK_PRIORITY,\r\n  SERVICE_TYPE,\r\n  SERVICE_FREQUENCY,\r\n  CLIENT_STATUS,\r\n  REGIONS,\r\n  TEMPLATE_TYPE,\r\n  DOCUMENT_TYPE,\r\n  REMINDER_TYPE,\r\n  HTTP_STATUS,\r\n  ERROR_CODES,\r\n  TABLES,\r\n  FIELDS\r\n};\r\n\r\n", "/**\r\n * \u8DEF\u7531\u7BA1\u7406\u5668\r\n * \u7D71\u4E00\u7BA1\u7406\u6240\u6709 API \u8DEF\u7531\r\n */\r\n\r\nimport { jsonResponse } from '../utils.js';\r\nimport { HTTP_STATUS, ERROR_CODES } from '../config/constants.js';\r\n\r\n/**\r\n * \u8DEF\u7531\u5668\u985E\r\n */\r\nexport class Router {\r\n  constructor() {\r\n    this.routes = {\r\n      GET: new Map(),\r\n      POST: new Map(),\r\n      PUT: new Map(),\r\n      DELETE: new Map(),\r\n      PATCH: new Map(),\r\n      OPTIONS: new Map()\r\n    };\r\n  }\r\n\r\n  /**\r\n   * \u8A3B\u518A GET \u8DEF\u7531\r\n   * @param {string} path - \u8DEF\u5F91\r\n   * @param {Function} handler - \u8655\u7406\u51FD\u6578\r\n   */\r\n  get(path, handler) {\r\n    this.routes.GET.set(path, handler);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * \u8A3B\u518A POST \u8DEF\u7531\r\n   * @param {string} path - \u8DEF\u5F91\r\n   * @param {Function} handler - \u8655\u7406\u51FD\u6578\r\n   */\r\n  post(path, handler) {\r\n    this.routes.POST.set(path, handler);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * \u8A3B\u518A PUT \u8DEF\u7531\r\n   * @param {string} path - \u8DEF\u5F91\r\n   * @param {Function} handler - \u8655\u7406\u51FD\u6578\r\n   */\r\n  put(path, handler) {\r\n    this.routes.PUT.set(path, handler);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * \u8A3B\u518A DELETE \u8DEF\u7531\r\n   * @param {string} path - \u8DEF\u5F91\r\n   * @param {Function} handler - \u8655\u7406\u51FD\u6578\r\n   */\r\n  delete(path, handler) {\r\n    this.routes.DELETE.set(path, handler);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * \u8A3B\u518A PATCH \u8DEF\u7531\r\n   * @param {string} path - \u8DEF\u5F91\r\n   * @param {Function} handler - \u8655\u7406\u51FD\u6578\r\n   */\r\n  patch(path, handler) {\r\n    this.routes.PATCH.set(path, handler);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * \u8A3B\u518A OPTIONS \u8DEF\u7531\r\n   * @param {string} path - \u8DEF\u5F91\r\n   * @param {Function} handler - \u8655\u7406\u51FD\u6578\r\n   */\r\n  options(path, handler) {\r\n    this.routes.OPTIONS.set(path, handler);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * \u8655\u7406\u8ACB\u6C42\r\n   * @param {Request} request - HTTP \u8ACB\u6C42\r\n   * @param {Object} env - \u74B0\u5883\u8B8A\u6578\r\n   * @returns {Promise<Response>}\r\n   */\r\n  async handle(request, env) {\r\n    const url = new URL(request.url);\r\n    const method = request.method;\r\n    const pathname = url.pathname;\r\n\r\n    // \u5617\u8A66\u7CBE\u78BA\u5339\u914D\r\n    const handler = this.routes[method]?.get(pathname);\r\n    if (handler) {\r\n      return handler(env, request);\r\n    }\r\n\r\n    // \u5617\u8A66\u53C3\u6578\u5339\u914D\uFF08\u5982 /api/clients/123\uFF09\r\n    const paramHandler = this._findParameterizedRoute(method, pathname);\r\n    if (paramHandler) {\r\n      const { handler, params } = paramHandler;\r\n      request.params = params;\r\n      return handler(env, request);\r\n    }\r\n\r\n    // \u8DEF\u7531\u4E0D\u5B58\u5728\r\n    return jsonResponse({\r\n      success: false,\r\n      error: {\r\n        code: ERROR_CODES.NOT_FOUND,\r\n        message: `\u8DEF\u7531\u4E0D\u5B58\u5728: ${method} ${pathname}`\r\n      }\r\n    }, HTTP_STATUS.NOT_FOUND);\r\n  }\r\n\r\n  /**\r\n   * \u67E5\u627E\u53C3\u6578\u5316\u8DEF\u7531\r\n   * @private\r\n   */\r\n  _findParameterizedRoute(method, pathname) {\r\n    const routes = this.routes[method];\r\n    if (!routes) return null;\r\n\r\n    for (const [pattern, handler] of routes.entries()) {\r\n      // \u6AA2\u67E5\u662F\u5426\u5305\u542B\u53C3\u6578\uFF08:id\uFF09\r\n      if (!pattern.includes(':')) continue;\r\n\r\n      const params = this._matchRoute(pattern, pathname);\r\n      if (params) {\r\n        return { handler, params };\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * \u5339\u914D\u8DEF\u7531\u4E26\u63D0\u53D6\u53C3\u6578\r\n   * @private\r\n   */\r\n  _matchRoute(pattern, pathname) {\r\n    const patternParts = pattern.split('/');\r\n    const pathnameParts = pathname.split('/');\r\n\r\n    if (patternParts.length !== pathnameParts.length) {\r\n      return null;\r\n    }\r\n\r\n    const params = {};\r\n\r\n    for (let i = 0; i < patternParts.length; i++) {\r\n      const patternPart = patternParts[i];\r\n      const pathnamePart = pathnameParts[i];\r\n\r\n      if (patternPart.startsWith(':')) {\r\n        // \u53C3\u6578\u90E8\u5206\r\n        const paramName = patternPart.slice(1);\r\n        params[paramName] = pathnamePart;\r\n      } else if (patternPart !== pathnamePart) {\r\n        // \u4E0D\u5339\u914D\r\n        return null;\r\n      }\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  /**\r\n   * \u6279\u91CF\u8A3B\u518A\u8DEF\u7531\r\n   * @param {Array} routes - \u8DEF\u7531\u914D\u7F6E\u6578\u7D44\r\n   */\r\n  registerRoutes(routes) {\r\n    routes.forEach(({ method, path, handler }) => {\r\n      this[method.toLowerCase()](path, handler);\r\n    });\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * \u5217\u51FA\u6240\u6709\u5DF2\u8A3B\u518A\u7684\u8DEF\u7531\r\n   */\r\n  listRoutes() {\r\n    const routes = [];\r\n    \r\n    for (const [method, routeMap] of Object.entries(this.routes)) {\r\n      for (const path of routeMap.keys()) {\r\n        routes.push({ method, path });\r\n      }\r\n    }\r\n    \r\n    return routes.sort((a, b) => {\r\n      if (a.path < b.path) return -1;\r\n      if (a.path > b.path) return 1;\r\n      return 0;\r\n    });\r\n  }\r\n}\r\n\r\nexport default Router;\r\n\r\n", "// =================================================================\r\n// \u8A8D\u8B49\u76F8\u95DC\u51FD\u6578\r\n// =================================================================\r\n\r\nimport { jsonResponse, corsHeaders } from './utils.js';\r\n\r\n// \u4F7F\u7528 Web Crypto API \u9032\u884C\u5BC6\u78BC\u96DC\u6E4A\r\nasync function hashPassword(password) {\r\n  const encoder = new TextEncoder();\r\n  const data = encoder.encode(password);\r\n  const hash = await crypto.subtle.digest('SHA-256', data);\r\n  return Array.from(new Uint8Array(hash))\r\n    .map(b => b.toString(16).padStart(2, '0'))\r\n    .join('');\r\n}\r\n\r\n// \u9A57\u8B49\u5BC6\u78BC\r\nasync function verifyPassword(password, hash) {\r\n  const passwordHash = await hashPassword(password);\r\n  return passwordHash === hash;\r\n}\r\n\r\n// \u751F\u6210\u96A8\u6A5F session token\r\nfunction generateSessionToken() {\r\n  const array = new Uint8Array(32);\r\n  crypto.getRandomValues(array);\r\n  return Array.from(array, byte => byte.toString(16).padStart(2, '0')).join('');\r\n}\r\n\r\n// \u5F9E\u8ACB\u6C42\u53D6\u5F97 session token\r\nfunction getSessionToken(request) {\r\n  const authHeader = request.headers.get('Authorization');\r\n  if (authHeader && authHeader.startsWith('Bearer ')) {\r\n    return authHeader.substring(7);\r\n  }\r\n  \r\n  // \u4E5F\u652F\u63F4\u5F9E cookie \u8B80\u53D6\r\n  const cookieHeader = request.headers.get('Cookie');\r\n  if (cookieHeader) {\r\n    const match = cookieHeader.match(/session_token=([^;]+)/);\r\n    if (match) {\r\n      return match[1];\r\n    }\r\n  }\r\n  \r\n  return null;\r\n}\r\n\r\n// \u9A57\u8B49 session \u4E26\u53D6\u5F97\u4F7F\u7528\u8005\u8CC7\u8A0A\r\nasync function verifySession(db, sessionToken) {\r\n  if (!sessionToken) {\r\n    return null;\r\n  }\r\n  \r\n  const result = await db.prepare(`\r\n    SELECT \r\n      u.id, \r\n      u.username, \r\n      u.role, \r\n      u.is_active,\r\n      u.employee_id,\r\n      e.name as employee_name\r\n    FROM sessions s\r\n    JOIN users u ON s.user_id = u.id\r\n    LEFT JOIN employees e ON u.employee_id = e.id\r\n    WHERE s.session_token = ? AND s.expires_at > datetime('now') AND u.is_active = 1\r\n  `).bind(sessionToken).first();\r\n  \r\n  return result;\r\n}\r\n\r\n// \u5275\u5EFA\u65B0 session\r\nasync function createSession(db, userId) {\r\n  const sessionToken = generateSessionToken();\r\n  const expiresAt = new Date(Date.now() + 7 * 24 * 60 * 60 * 1000); // 7 \u5929\u5F8C\u904E\u671F\r\n  \r\n  await db.prepare(`\r\n    INSERT INTO sessions (session_token, user_id, expires_at)\r\n    VALUES (?, ?, ?)\r\n  `).bind(sessionToken, userId, expiresAt.toISOString()).run();\r\n  \r\n  return sessionToken;\r\n}\r\n\r\n// \u522A\u9664 session (\u767B\u51FA)\r\nasync function deleteSession(db, sessionToken) {\r\n  await db.prepare(`\r\n    DELETE FROM sessions WHERE session_token = ?\r\n  `).bind(sessionToken).run();\r\n}\r\n\r\n// \u6E05\u7406\u904E\u671F sessions\r\nasync function cleanupExpiredSessions(db) {\r\n  await db.prepare(`\r\n    DELETE FROM sessions WHERE expires_at < datetime('now')\r\n  `).run();\r\n}\r\n\r\n// \u6AA2\u67E5\u4F7F\u7528\u8005\u662F\u5426\u6709\u6B0A\u9650\u5B58\u53D6\u7279\u5B9A\u54E1\u5DE5\u7684\u8CC7\u6599\r\nfunction canAccessEmployee(user, employeeName) {\r\n  if (!user) return false;\r\n  if (user.role === 'admin') return true;\r\n  return user.employee_name === employeeName;\r\n}\r\n\r\n// \u9700\u8981\u767B\u5165\u7684\u4E2D\u4ECB\u51FD\u6578\r\nasync function requireAuth(db, request) {\r\n  const sessionToken = getSessionToken(request);\r\n  const user = await verifySession(db, sessionToken);\r\n  \r\n  if (!user) {\r\n    return { authorized: false, user: null, error: '\u672A\u6388\u6B0A\uFF0C\u8ACB\u5148\u767B\u5165' };\r\n  }\r\n  \r\n  return { authorized: true, user, error: null };\r\n}\r\n\r\n// \u9700\u8981\u7BA1\u7406\u54E1\u6B0A\u9650\u7684\u4E2D\u4ECB\u51FD\u6578\r\nasync function requireAdmin(db, request) {\r\n  const auth = await requireAuth(db, request);\r\n  \r\n  if (!auth.authorized) {\r\n    return auth;\r\n  }\r\n  \r\n  if (auth.user.role !== 'admin') {\r\n    return { authorized: false, user: auth.user, error: '\u9700\u8981\u7BA1\u7406\u54E1\u6B0A\u9650' };\r\n  }\r\n  \r\n  return auth;\r\n}\r\n\r\n// ================================================================\r\n// Handler functions (moved from index.js)\r\n// ================================================================\r\n\r\nasync function handleLogin(db, request) {\r\n  try {\r\n    const { username, password } = await request.json();\r\n    if (!username || !password) {\r\n      return jsonResponse({ error: '\u8ACB\u63D0\u4F9B\u4F7F\u7528\u8005\u540D\u7A31\u548C\u5BC6\u78BC' }, 400);\r\n    }\r\n    // \u66F4\u65B0\u67E5\u8A62\u4EE5\u7B26\u5408\u65B0\u7684\u6578\u64DA\u5EAB\u7D50\u69CB\uFF08\u4F7F\u7528 JOIN \u7372\u53D6\u54E1\u5DE5\u540D\u7A31\uFF09\r\n    const user = await db.prepare(`\r\n      SELECT \r\n        u.id, \r\n        u.username, \r\n        u.password_hash, \r\n        u.role, \r\n        u.is_active,\r\n        u.employee_id,\r\n        e.name as employee_name\r\n      FROM users u\r\n      LEFT JOIN employees e ON u.employee_id = e.id\r\n      WHERE u.username = ? AND u.is_active = 1\r\n    `).bind(username).first();\r\n    if (!user) {\r\n      return jsonResponse({ error: '\u4F7F\u7528\u8005\u540D\u7A31\u6216\u5BC6\u78BC\u932F\u8AA4' }, 401);\r\n    }\r\n    const isValid = await verifyPassword(password, user.password_hash);\r\n    if (!isValid) {\r\n      return jsonResponse({ error: '\u4F7F\u7528\u8005\u540D\u7A31\u6216\u5BC6\u78BC\u932F\u8AA4' }, 401);\r\n    }\r\n    const sessionToken = await createSession(db, user.id);\r\n    return jsonResponse({\r\n      success: true,\r\n      session_token: sessionToken,\r\n      user: {\r\n        id: user.id,\r\n        username: user.username,\r\n        role: user.role,\r\n        employee_name: user.employee_name || user.username\r\n      }\r\n    });\r\n  } catch (err) {\r\n    return jsonResponse({ error: err.message }, 500);\r\n  }\r\n}\r\n\r\nasync function handleLogout(db, request) {\r\n  try {\r\n    const sessionToken = getSessionToken(request);\r\n    if (sessionToken) {\r\n      await deleteSession(db, sessionToken);\r\n    }\r\n    return jsonResponse({ success: true });\r\n  } catch (err) {\r\n    return jsonResponse({ error: err.message }, 500);\r\n  }\r\n}\r\n\r\nasync function handleVerifySession(db, request) {\r\n  try {\r\n    const sessionToken = getSessionToken(request);\r\n    const user = await verifySession(db, sessionToken);\r\n    if (!user) {\r\n      return jsonResponse({ error: '\u7528\u6236\u4E0D\u5B58\u5728' }, 401);\r\n    }\r\n    return jsonResponse({\r\n      user: {\r\n        id: user.id,\r\n        username: user.username,\r\n        role: user.role,\r\n        employee_name: user.employee_name\r\n      }\r\n    });\r\n  } catch (err) {\r\n    return jsonResponse({ error: err.message }, 500);\r\n  }\r\n}\r\n\r\nasync function handleChangePassword(db, request) {\r\n  try {\r\n    const auth = await requireAuth(db, request);\r\n    if (!auth.authorized) {\r\n      return jsonResponse({ error: auth.error }, 401);\r\n    }\r\n    const body = await request.json();\r\n    const oldPassword = body.old_password || body.currentPassword;\r\n    const newPassword = body.new_password || body.newPassword;\r\n    if (!oldPassword || !newPassword) {\r\n      return jsonResponse({ error: '\u8ACB\u63D0\u4F9B\u76EE\u524D\u5BC6\u78BC\u548C\u65B0\u5BC6\u78BC' }, 400);\r\n    }\r\n    if (newPassword.length < 6) {\r\n      return jsonResponse({ error: '\u65B0\u5BC6\u78BC\u81F3\u5C11\u9700\u89816\u500B\u5B57\u5143' }, 400);\r\n    }\r\n    const user = await db.prepare(`\r\n      SELECT password_hash FROM users WHERE id = ?\r\n    `).bind(auth.user.id).first();\r\n    if (!user) {\r\n      return jsonResponse({ error: '\u4F7F\u7528\u8005\u4E0D\u5B58\u5728' }, 404);\r\n    }\r\n    const isValid = await verifyPassword(oldPassword, user.password_hash);\r\n    if (!isValid) {\r\n      return jsonResponse({ error: '\u820A\u5BC6\u78BC\u932F\u8AA4' }, 401);\r\n    }\r\n    const newHash = await hashPassword(newPassword);\r\n    await db.prepare(`\r\n      UPDATE users SET password_hash = ?, updated_at = CURRENT_TIMESTAMP WHERE id = ?\r\n    `).bind(newHash, auth.user.id).run();\r\n    return jsonResponse({ success: true, message: '\u5BC6\u78BC\u5DF2\u6210\u529F\u66F4\u65B0' });\r\n  } catch (err) {\r\n    return jsonResponse({ error: err.message || '\u5BC6\u78BC\u66F4\u65B0\u5931\u6557' }, 500);\r\n  }\r\n}\r\n\r\nasync function handleAdminResetPassword(db, request, username) {\r\n  try {\r\n    const auth = await requireAdmin(db, request);\r\n    if (!auth.authorized) {\r\n      return jsonResponse({ error: auth.error }, 403);\r\n    }\r\n    const body = await request.json();\r\n    const newPassword = body.new_password || body.newPassword;\r\n    if (!newPassword) {\r\n      return jsonResponse({ error: '\u8ACB\u63D0\u4F9B\u65B0\u5BC6\u78BC' }, 400);\r\n    }\r\n    if (newPassword.length < 6) {\r\n      return jsonResponse({ error: '\u65B0\u5BC6\u78BC\u81F3\u5C11\u9700\u89816\u500B\u5B57\u5143' }, 400);\r\n    }\r\n    const user = await db.prepare(`\r\n      SELECT id FROM users WHERE username = ?\r\n    `).bind(username).first();\r\n    if (!user) {\r\n      return jsonResponse({ error: '\u4F7F\u7528\u8005\u4E0D\u5B58\u5728' }, 404);\r\n    }\r\n    const newHash = await hashPassword(newPassword);\r\n    await db.prepare(`\r\n      UPDATE users SET password_hash = ?, updated_at = CURRENT_TIMESTAMP WHERE username = ?\r\n    `).bind(newHash, username).run();\r\n    return jsonResponse({ success: true, message: `\u5DF2\u91CD\u8A2D ${username} \u7684\u5BC6\u78BC` });\r\n  } catch (err) {\r\n    return jsonResponse({ error: err.message || '\u5BC6\u78BC\u91CD\u8A2D\u5931\u6557' }, 500);\r\n  }\r\n}\r\n\r\nexport {\r\n  hashPassword,\r\n  verifyPassword,\r\n  generateSessionToken,\r\n  getSessionToken,\r\n  verifySession,\r\n  createSession,\r\n  deleteSession,\r\n  cleanupExpiredSessions,\r\n  canAccessEmployee,\r\n  requireAuth,\r\n  requireAdmin,\r\n  handleLogin,\r\n  handleLogout,\r\n  handleVerifySession,\r\n  handleChangePassword,\r\n  handleAdminResetPassword\r\n};\r\n\r\n", "/**\r\n * \u8A8D\u8B49\u4E2D\u9593\u4EF6\r\n * \u63D0\u4F9B\u7D71\u4E00\u7684\u8A8D\u8B49\u548C\u6388\u6B0A\u6AA2\u67E5\r\n */\r\n\r\nimport { verifySession } from '../auth.js';\r\nimport { jsonResponse } from '../utils.js';\r\nimport { HTTP_STATUS, ERROR_CODES } from '../config/constants.js';\r\n\r\n/**\r\n * \u8A8D\u8B49\u4E2D\u9593\u4EF6 - \u8981\u6C42\u7528\u6236\u5DF2\u767B\u5165\r\n * @param {Function} handler - API \u8655\u7406\u51FD\u6578\r\n * @returns {Function} \u5305\u88DD\u5F8C\u7684\u8655\u7406\u51FD\u6578\r\n */\r\nexport function withAuth(handler) {\r\n  return async (env, request) => {\r\n    // \u9A57\u8B49 session\r\n    const auth = await verifySession(env.DB, request);\r\n    \r\n    if (!auth || !auth.user) {\r\n      return jsonResponse({\r\n        success: false,\r\n        error: {\r\n          code: ERROR_CODES.UNAUTHORIZED,\r\n          message: '\u672A\u6388\u6B0A\uFF0C\u8ACB\u5148\u767B\u5165'\r\n        }\r\n      }, HTTP_STATUS.UNAUTHORIZED);\r\n    }\r\n    \r\n    // \u6CE8\u5165\u8A8D\u8B49\u4FE1\u606F\u5230\u8ACB\u6C42\u5C0D\u8C61\r\n    request.auth = auth;\r\n    request.user = auth.user;\r\n    \r\n    // \u7E7C\u7E8C\u57F7\u884C handler\r\n    return handler(env, request);\r\n  };\r\n}\r\n\r\n/**\r\n * \u7BA1\u7406\u54E1\u4E2D\u9593\u4EF6 - \u8981\u6C42\u7528\u6236\u70BA\u7BA1\u7406\u54E1\r\n * @param {Function} handler - API \u8655\u7406\u51FD\u6578\r\n * @returns {Function} \u5305\u88DD\u5F8C\u7684\u8655\u7406\u51FD\u6578\r\n */\r\nexport function withAdmin(handler) {\r\n  return withAuth(async (env, request) => {\r\n    // \u6AA2\u67E5\u7528\u6236\u89D2\u8272\r\n    if (request.user.role !== 'admin') {\r\n      return jsonResponse({\r\n        success: false,\r\n        error: {\r\n          code: ERROR_CODES.FORBIDDEN,\r\n          message: '\u6B0A\u9650\u4E0D\u8DB3\uFF0C\u9700\u8981\u7BA1\u7406\u54E1\u6B0A\u9650'\r\n        }\r\n      }, HTTP_STATUS.FORBIDDEN);\r\n    }\r\n    \r\n    return handler(env, request);\r\n  });\r\n}\r\n\r\n/**\r\n * \u53EF\u9078\u8A8D\u8B49\u4E2D\u9593\u4EF6 - \u5982\u679C\u6709 token \u5247\u9A57\u8B49\uFF0C\u6C92\u6709\u5247\u8DF3\u904E\r\n * @param {Function} handler - API \u8655\u7406\u51FD\u6578\r\n * @returns {Function} \u5305\u88DD\u5F8C\u7684\u8655\u7406\u51FD\u6578\r\n */\r\nexport function withOptionalAuth(handler) {\r\n  return async (env, request) => {\r\n    // \u5617\u8A66\u9A57\u8B49\r\n    const auth = await verifySession(env.DB, request);\r\n    \r\n    // \u7121\u8AD6\u662F\u5426\u6210\u529F\u90FD\u7E7C\u7E8C\uFF0C\u4F46\u6CE8\u5165\u8A8D\u8B49\u4FE1\u606F\r\n    request.auth = auth || null;\r\n    request.user = auth?.user || null;\r\n    \r\n    return handler(env, request);\r\n  };\r\n}\r\n\r\n/**\r\n * \u8CC7\u6E90\u64C1\u6709\u6B0A\u6AA2\u67E5 - \u78BA\u4FDD\u7528\u6236\u6709\u6B0A\u8A2A\u554F\u8CC7\u6E90\r\n * @param {Function} getResource - \u7372\u53D6\u8CC7\u6E90\u7684\u51FD\u6578\r\n * @param {string} ownerField - \u64C1\u6709\u8005\u6B04\u4F4D\u540D\r\n * @returns {Function} \u4E2D\u9593\u4EF6\u51FD\u6578\r\n */\r\nexport function withOwnership(getResource, ownerField = 'created_by_user_id') {\r\n  return (handler) => withAuth(async (env, request) => {\r\n    const user = request.user;\r\n    \r\n    // \u7BA1\u7406\u54E1\u53EF\u4EE5\u8A2A\u554F\u6240\u6709\u8CC7\u6E90\r\n    if (user.role === 'admin') {\r\n      return handler(env, request);\r\n    }\r\n    \r\n    // \u7372\u53D6\u8CC7\u6E90\r\n    const resource = await getResource(env, request);\r\n    \r\n    if (!resource) {\r\n      return jsonResponse({\r\n        success: false,\r\n        error: {\r\n          code: ERROR_CODES.NOT_FOUND,\r\n          message: '\u8CC7\u6E90\u4E0D\u5B58\u5728'\r\n        }\r\n      }, HTTP_STATUS.NOT_FOUND);\r\n    }\r\n    \r\n    // \u6AA2\u67E5\u64C1\u6709\u6B0A\r\n    if (resource[ownerField] !== user.id) {\r\n      return jsonResponse({\r\n        success: false,\r\n        error: {\r\n          code: ERROR_CODES.PERMISSION_DENIED,\r\n          message: '\u6B0A\u9650\u4E0D\u8DB3\uFF0C\u60A8\u53EA\u80FD\u8A2A\u554F\u81EA\u5DF1\u7684\u8CC7\u6E90'\r\n        }\r\n      }, HTTP_STATUS.FORBIDDEN);\r\n    }\r\n    \r\n    // \u6CE8\u5165\u8CC7\u6E90\u5230\u8ACB\u6C42\u5C0D\u8C61\r\n    request.resource = resource;\r\n    \r\n    return handler(env, request);\r\n  });\r\n}\r\n\r\nexport default {\r\n  withAuth,\r\n  withAdmin,\r\n  withOptionalAuth,\r\n  withOwnership\r\n};\r\n\r\n", "/**\r\n * \u932F\u8AA4\u8655\u7406\u4E2D\u9593\u4EF6\r\n * \u7D71\u4E00\u6355\u7372\u548C\u8655\u7406\u6240\u6709\u932F\u8AA4\r\n */\r\n\r\nimport { jsonResponse } from '../utils.js';\r\nimport { HTTP_STATUS, ERROR_CODES } from '../config/constants.js';\r\n\r\n/**\r\n * \u932F\u8AA4\u8655\u7406\u4E2D\u9593\u4EF6\r\n * @param {Function} handler - API \u8655\u7406\u51FD\u6578\r\n * @returns {Function} \u5305\u88DD\u5F8C\u7684\u8655\u7406\u51FD\u6578\r\n */\r\nexport function withErrorHandler(handler) {\r\n  return async (env, request) => {\r\n    try {\r\n      return await handler(env, request);\r\n    } catch (error) {\r\n      return handleError(error, request);\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * \u8655\u7406\u932F\u8AA4\r\n * @param {Error} error - \u932F\u8AA4\u5C0D\u8C61\r\n * @param {Request} request - \u8ACB\u6C42\u5C0D\u8C61\r\n * @returns {Response} \u932F\u8AA4\u97FF\u61C9\r\n */\r\nfunction handleError(error, request) {\r\n  // \u8A18\u9304\u932F\u8AA4\uFF08\u79FB\u9664\u654F\u611F\u4FE1\u606F\uFF09\r\n  console.error('[Error]', {\r\n    message: error.message,\r\n    stack: error.stack,\r\n    url: request.url,\r\n    method: request.method,\r\n    timestamp: new Date().toISOString()\r\n  });\r\n\r\n  // \u6839\u64DA\u932F\u8AA4\u985E\u578B\u8FD4\u56DE\u4E0D\u540C\u97FF\u61C9\r\n  if (error instanceof ValidationError) {\r\n    return jsonResponse({\r\n      success: false,\r\n      error: {\r\n        code: ERROR_CODES.VALIDATION_ERROR,\r\n        message: error.message,\r\n        details: error.errors\r\n      }\r\n    }, HTTP_STATUS.BAD_REQUEST);\r\n  }\r\n\r\n  if (error instanceof AuthenticationError) {\r\n    return jsonResponse({\r\n      success: false,\r\n      error: {\r\n        code: ERROR_CODES.UNAUTHORIZED,\r\n        message: error.message\r\n      }\r\n    }, HTTP_STATUS.UNAUTHORIZED);\r\n  }\r\n\r\n  if (error instanceof ForbiddenError) {\r\n    return jsonResponse({\r\n      success: false,\r\n      error: {\r\n        code: ERROR_CODES.FORBIDDEN,\r\n        message: error.message\r\n      }\r\n    }, HTTP_STATUS.FORBIDDEN);\r\n  }\r\n\r\n  if (error instanceof NotFoundError) {\r\n    return jsonResponse({\r\n      success: false,\r\n      error: {\r\n        code: ERROR_CODES.NOT_FOUND,\r\n        message: error.message\r\n      }\r\n    }, HTTP_STATUS.NOT_FOUND);\r\n  }\r\n\r\n  if (error instanceof ConflictError) {\r\n    return jsonResponse({\r\n      success: false,\r\n      error: {\r\n        code: ERROR_CODES.CONFLICT,\r\n        message: error.message\r\n      }\r\n    }, HTTP_STATUS.CONFLICT);\r\n  }\r\n\r\n  if (error instanceof BusinessError) {\r\n    return jsonResponse({\r\n      success: false,\r\n      error: {\r\n        code: error.code || ERROR_CODES.INTERNAL_ERROR,\r\n        message: error.message\r\n      }\r\n    }, HTTP_STATUS.BAD_REQUEST);\r\n  }\r\n\r\n  // \u9ED8\u8A8D\u932F\u8AA4\uFF08\u4E0D\u66B4\u9732\u5167\u90E8\u932F\u8AA4\u7D30\u7BC0\uFF09\r\n  return jsonResponse({\r\n    success: false,\r\n    error: {\r\n      code: ERROR_CODES.INTERNAL_ERROR,\r\n      message: '\u670D\u52D9\u5668\u5167\u90E8\u932F\u8AA4\uFF0C\u8ACB\u7A0D\u5F8C\u518D\u8A66'\r\n    }\r\n  }, HTTP_STATUS.INTERNAL_ERROR);\r\n}\r\n\r\n/**\r\n * \u81EA\u5B9A\u7FA9\u932F\u8AA4\u985E\r\n */\r\nexport class ValidationError extends Error {\r\n  constructor(message, errors = {}) {\r\n    super(message);\r\n    this.name = 'ValidationError';\r\n    this.errors = errors;\r\n  }\r\n}\r\n\r\nexport class AuthenticationError extends Error {\r\n  constructor(message = '\u8A8D\u8B49\u5931\u6557') {\r\n    super(message);\r\n    this.name = 'AuthenticationError';\r\n  }\r\n}\r\n\r\nexport class ForbiddenError extends Error {\r\n  constructor(message = '\u6B0A\u9650\u4E0D\u8DB3') {\r\n    super(message);\r\n    this.name = 'ForbiddenError';\r\n  }\r\n}\r\n\r\nexport class NotFoundError extends Error {\r\n  constructor(message = '\u8CC7\u6E90\u4E0D\u5B58\u5728') {\r\n    super(message);\r\n    this.name = 'NotFoundError';\r\n  }\r\n}\r\n\r\nexport class ConflictError extends Error {\r\n  constructor(message = '\u8CC7\u6E90\u885D\u7A81') {\r\n    super(message);\r\n    this.name = 'ConflictError';\r\n  }\r\n}\r\n\r\nexport class BusinessError extends Error {\r\n  constructor(message, code = ERROR_CODES.INTERNAL_ERROR) {\r\n    super(message);\r\n    this.name = 'BusinessError';\r\n    this.code = code;\r\n  }\r\n}\r\n\r\nexport default {\r\n  withErrorHandler,\r\n  ValidationError,\r\n  AuthenticationError,\r\n  ForbiddenError,\r\n  NotFoundError,\r\n  ConflictError,\r\n  BusinessError\r\n};\r\n\r\n", "/**\r\n * Auth Routes\r\n */\r\nimport { handleLogin, handleLogout, handleVerifySession, handleChangePassword } from '../auth.js';\r\nimport { withAuth } from '../middleware/auth.middleware.js';\r\nimport { withErrorHandler } from '../middleware/error.middleware.js';\r\n\r\nfunction adapt(handler) {\r\n  return async (env, request) => handler(env.DB, request);\r\n}\r\n\r\nexport function registerAuthRoutes(router) {\r\n  router.post('/api/login', withErrorHandler(adapt(handleLogin)));\r\n  router.post('/api/logout', withErrorHandler(withAuth(adapt(handleLogout))));\r\n  router.get('/api/verify', withErrorHandler(withAuth(adapt(handleVerifySession))));\r\n  router.post('/api/change-password', withErrorHandler(withAuth(adapt(handleChangePassword))));\r\n}\r\n\r\nexport default registerAuthRoutes;\r\n", "/**\r\n * Base Repository\r\n * \u6240\u6709 Repository \u7684\u57FA\u790E\u985E\uFF0C\u63D0\u4F9B\u6A19\u6E96\u7684 CRUD \u64CD\u4F5C\r\n * \r\n * \u8077\u8CAC\uFF1A\r\n * - \u63D0\u4F9B\u57FA\u790E\u7684\u8CC7\u6599\u5EAB\u64CD\u4F5C\u65B9\u6CD5\r\n * - \u6A19\u6E96\u5316\u67E5\u8A62\u65B9\u5F0F\r\n * - \u7D71\u4E00\u932F\u8AA4\u8655\u7406\r\n * \r\n * \u4E0D\u8CA0\u8CAC\uFF1A\r\n * - \u696D\u52D9\u908F\u8F2F\uFF08\u61C9\u5728 Service \u5C64\uFF09\r\n * - HTTP \u8655\u7406\uFF08\u61C9\u5728 Handler \u5C64\uFF09\r\n */\r\n\r\nexport class BaseRepository {\r\n  /**\r\n   * \u69CB\u9020\u51FD\u6578\r\n   * @param {Object} db - D1 Database \u5BE6\u4F8B\r\n   * @param {string} tableName - \u8868\u540D\r\n   */\r\n  constructor(db, tableName) {\r\n    if (!db) {\r\n      throw new Error('Database instance is required');\r\n    }\r\n    if (!tableName) {\r\n      throw new Error('Table name is required');\r\n    }\r\n    \r\n    this.db = db;\r\n    this.tableName = tableName;\r\n  }\r\n\r\n  /**\r\n   * \u67E5\u8A62\u6240\u6709\u8A18\u9304\r\n   * @param {Object} filters - \u904E\u6FFE\u689D\u4EF6\r\n   * @param {Object} options - \u67E5\u8A62\u9078\u9805\uFF08\u6392\u5E8F\u3001\u5206\u9801\u7B49\uFF09\r\n   * @returns {Promise<Array>}\r\n   */\r\n  async findAll(filters = {}, options = {}) {\r\n    const { orderBy = 'created_at', order = 'DESC', limit, offset } = options;\r\n    \r\n    let query = `SELECT * FROM ${this.tableName}`;\r\n    const params = [];\r\n\r\n    // \u69CB\u5EFA WHERE \u689D\u4EF6\r\n    const conditions = [];\r\n    for (const [key, value] of Object.entries(filters)) {\r\n      if (value !== undefined && value !== null) {\r\n        conditions.push(`${key} = ?`);\r\n        params.push(value);\r\n      }\r\n    }\r\n\r\n    if (conditions.length > 0) {\r\n      query += ` WHERE ${conditions.join(' AND ')}`;\r\n    }\r\n\r\n    // \u6DFB\u52A0\u6392\u5E8F\r\n    query += ` ORDER BY ${orderBy} ${order}`;\r\n\r\n    // \u6DFB\u52A0\u5206\u9801\r\n    if (limit) {\r\n      query += ` LIMIT ?`;\r\n      params.push(limit);\r\n      \r\n      if (offset) {\r\n        query += ` OFFSET ?`;\r\n        params.push(offset);\r\n      }\r\n    }\r\n\r\n    const result = await this.db.prepare(query).bind(...params).all();\r\n    return result.results || [];\r\n  }\r\n\r\n  /**\r\n   * \u6839\u64DA ID \u67E5\u8A62\u55AE\u500B\u8A18\u9304\r\n   * @param {number} id - \u8A18\u9304 ID\r\n   * @returns {Promise<Object|null>}\r\n   */\r\n  async findById(id) {\r\n    const result = await this.db\r\n      .prepare(`SELECT * FROM ${this.tableName} WHERE id = ?`)\r\n      .bind(id)\r\n      .first();\r\n    \r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * \u6839\u64DA\u689D\u4EF6\u67E5\u8A62\u55AE\u500B\u8A18\u9304\r\n   * @param {Object} filters - \u904E\u6FFE\u689D\u4EF6\r\n   * @returns {Promise<Object|null>}\r\n   */\r\n  async findOne(filters = {}) {\r\n    const conditions = [];\r\n    const params = [];\r\n\r\n    for (const [key, value] of Object.entries(filters)) {\r\n      if (value !== undefined && value !== null) {\r\n        conditions.push(`${key} = ?`);\r\n        params.push(value);\r\n      }\r\n    }\r\n\r\n    if (conditions.length === 0) {\r\n      throw new Error('At least one filter condition is required');\r\n    }\r\n\r\n    const query = `SELECT * FROM ${this.tableName} WHERE ${conditions.join(' AND ')} LIMIT 1`;\r\n    const result = await this.db.prepare(query).bind(...params).first();\r\n    \r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * \u5275\u5EFA\u8A18\u9304\r\n   * @param {Object} data - \u8A18\u9304\u6578\u64DA\r\n   * @returns {Promise<number>} \u65B0\u8A18\u9304\u7684 ID\r\n   */\r\n  async create(data) {\r\n    if (!data || Object.keys(data).length === 0) {\r\n      throw new Error('Data is required for create operation');\r\n    }\r\n\r\n    const keys = Object.keys(data);\r\n    const values = Object.values(data);\r\n    const placeholders = keys.map(() => '?').join(', ');\r\n\r\n    const query = `\r\n      INSERT INTO ${this.tableName} (${keys.join(', ')})\r\n      VALUES (${placeholders})\r\n    `;\r\n\r\n    const result = await this.db.prepare(query).bind(...values).run();\r\n    \r\n    if (!result.success) {\r\n      throw new Error('Failed to create record');\r\n    }\r\n\r\n    return result.meta.last_row_id;\r\n  }\r\n\r\n  /**\r\n   * \u66F4\u65B0\u8A18\u9304\r\n   * @param {number} id - \u8A18\u9304 ID\r\n   * @param {Object} data - \u66F4\u65B0\u6578\u64DA\r\n   * @returns {Promise<Object>} \u66F4\u65B0\u5F8C\u7684\u8A18\u9304\r\n   */\r\n  async update(id, data) {\r\n    if (!data || Object.keys(data).length === 0) {\r\n      throw new Error('Data is required for update operation');\r\n    }\r\n\r\n    // \u6DFB\u52A0 updated_at\r\n    data.updated_at = new Date().toISOString();\r\n\r\n    const sets = Object.keys(data).map(key => `${key} = ?`).join(', ');\r\n    const values = [...Object.values(data), id];\r\n\r\n    const query = `\r\n      UPDATE ${this.tableName}\r\n      SET ${sets}\r\n      WHERE id = ?\r\n    `;\r\n\r\n    const result = await this.db.prepare(query).bind(...values).run();\r\n    \r\n    if (!result.success) {\r\n      throw new Error('Failed to update record');\r\n    }\r\n\r\n    return this.findById(id);\r\n  }\r\n\r\n  /**\r\n   * \u522A\u9664\u8A18\u9304\uFF08\u786C\u522A\u9664\uFF09\r\n   * @param {number} id - \u8A18\u9304 ID\r\n   * @returns {Promise<boolean>}\r\n   */\r\n  async delete(id) {\r\n    const query = `DELETE FROM ${this.tableName} WHERE id = ?`;\r\n    const result = await this.db.prepare(query).bind(id).run();\r\n    \r\n    return result.success;\r\n  }\r\n\r\n  /**\r\n   * \u8EDF\u522A\u9664\uFF08\u63A8\u85A6\u4F7F\u7528\uFF09\r\n   * @param {number} id - \u8A18\u9304 ID\r\n   * @returns {Promise<boolean>}\r\n   */\r\n  async softDelete(id) {\r\n    return this.update(id, {\r\n      is_deleted: true,\r\n      deleted_at: new Date().toISOString()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * \u7D71\u8A08\u8A18\u9304\u6578\u91CF\r\n   * @param {Object} filters - \u904E\u6FFE\u689D\u4EF6\r\n   * @returns {Promise<number>}\r\n   */\r\n  async count(filters = {}) {\r\n    let query = `SELECT COUNT(*) as count FROM ${this.tableName}`;\r\n    const params = [];\r\n\r\n    const conditions = [];\r\n    for (const [key, value] of Object.entries(filters)) {\r\n      if (value !== undefined && value !== null) {\r\n        conditions.push(`${key} = ?`);\r\n        params.push(value);\r\n      }\r\n    }\r\n\r\n    if (conditions.length > 0) {\r\n      query += ` WHERE ${conditions.join(' AND ')}`;\r\n    }\r\n\r\n    const result = await this.db.prepare(query).bind(...params).first();\r\n    return result?.count || 0;\r\n  }\r\n\r\n  /**\r\n   * \u6AA2\u67E5\u8A18\u9304\u662F\u5426\u5B58\u5728\r\n   * @param {number} id - \u8A18\u9304 ID\r\n   * @returns {Promise<boolean>}\r\n   */\r\n  async exists(id) {\r\n    const result = await this.db\r\n      .prepare(`SELECT 1 FROM ${this.tableName} WHERE id = ? LIMIT 1`)\r\n      .bind(id)\r\n      .first();\r\n    \r\n    return !!result;\r\n  }\r\n\r\n  /**\r\n   * \u6279\u91CF\u5275\u5EFA\r\n   * @param {Array<Object>} records - \u8A18\u9304\u6578\u7D44\r\n   * @returns {Promise<Array<number>>} \u65B0\u8A18\u9304\u7684 ID \u6578\u7D44\r\n   */\r\n  async batchCreate(records) {\r\n    if (!Array.isArray(records) || records.length === 0) {\r\n      throw new Error('Records array is required');\r\n    }\r\n\r\n    const ids = [];\r\n    \r\n    // \u4F7F\u7528\u4E8B\u52D9\r\n    for (const record of records) {\r\n      const id = await this.create(record);\r\n      ids.push(id);\r\n    }\r\n\r\n    return ids;\r\n  }\r\n\r\n  /**\r\n   * \u57F7\u884C\u539F\u59CB SQL \u67E5\u8A62\r\n   * @param {string} query - SQL \u67E5\u8A62\u8A9E\u53E5\r\n   * @param {Array} params - \u53C3\u6578\r\n   * @returns {Promise<Object>}\r\n   */\r\n  async raw(query, params = []) {\r\n    const result = await this.db.prepare(query).bind(...params).all();\r\n    return result.results || [];\r\n  }\r\n\r\n  /**\r\n   * \u57F7\u884C\u539F\u59CB SQL\uFF08\u55AE\u689D\u8A18\u9304\uFF09\r\n   * @param {string} query - SQL \u67E5\u8A62\u8A9E\u53E5\r\n   * @param {Array} params - \u53C3\u6578\r\n   * @returns {Promise<Object|null>}\r\n   */\r\n  async rawFirst(query, params = []) {\r\n    const result = await this.db.prepare(query).bind(...params).first();\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * \u9A57\u8B49\u5FC5\u586B\u6B04\u4F4D\r\n   * @protected\r\n   */\r\n  _validateRequired(data, requiredFields) {\r\n    for (const field of requiredFields) {\r\n      if (data[field] === undefined || data[field] === null || data[field] === '') {\r\n        throw new Error(`\u6B04\u4F4D ${field} \u70BA\u5FC5\u586B`);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u9A57\u8B49\u6B04\u4F4D\u985E\u578B\r\n   * @protected\r\n   */\r\n  _validateTypes(data, typeMap) {\r\n    for (const [field, expectedType] of Object.entries(typeMap)) {\r\n      if (data[field] !== undefined) {\r\n        const actualType = typeof data[field];\r\n        if (actualType !== expectedType) {\r\n          throw new Error(`\u6B04\u4F4D ${field} \u985E\u578B\u932F\u8AA4\uFF0C\u671F\u671B ${expectedType}\uFF0C\u5BE6\u969B ${actualType}`);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default BaseRepository;\r\n\r\n", "/**\r\n * Employee Repository\r\n */\r\nimport { BaseRepository } from './BaseRepository.js';\r\nimport { TABLES } from '../config/constants.js';\r\n\r\nexport class EmployeeRepository extends BaseRepository {\r\n  constructor(db) {\r\n    super(db, TABLES.EMPLOYEES);\r\n  }\r\n\r\n  async findByName(name) {\r\n    return this.findOne({ name });\r\n  }\r\n\r\n  async findActive() {\r\n    return this.findAll({ is_active: 1 }, { orderBy: 'name', order: 'ASC' });\r\n  }\r\n}\r\n\r\nexport default EmployeeRepository;\r\n\r\n", "/**\r\n * Employee Service\r\n */\r\nimport { EmployeeRepository } from '../repositories/EmployeeRepository.js';\r\n\r\nexport class EmployeeService {\r\n  constructor(db) {\r\n    this.repo = new EmployeeRepository(db);\r\n  }\r\n\r\n  async getAll() {\r\n    return this.repo.findActive();\r\n  }\r\n\r\n  async getById(id) {\r\n    return this.repo.findById(id);\r\n  }\r\n\r\n  async create(data) {\r\n    return this.repo.create(data);\r\n  }\r\n\r\n  async update(id, data) {\r\n    return this.repo.update(id, data);\r\n  }\r\n}\r\n\r\nexport default EmployeeService;\r\n\r\n", "/**\r\n * \u97FF\u61C9\u5DE5\u5177\u51FD\u6578\r\n * \u63D0\u4F9B\u7D71\u4E00\u7684 HTTP \u97FF\u61C9\u683C\u5F0F\r\n */\r\n\r\nimport { corsHeaders } from '../utils.js';\r\nimport { HTTP_STATUS } from '../config/constants.js';\r\n\r\n/**\r\n * \u6210\u529F\u97FF\u61C9\uFF08\u5E36\u6578\u64DA\uFF09\r\n * @param {any} data - \u97FF\u61C9\u6578\u64DA\r\n * @param {Object} meta - \u5143\u6578\u64DA\uFF08\u5206\u9801\u7B49\uFF09\r\n * @param {number} status - HTTP \u72C0\u614B\u78BC\r\n * @returns {Response}\r\n */\r\nexport function success(data, meta = null, status = HTTP_STATUS.OK) {\r\n  const response = {\r\n    success: true,\r\n    data\r\n  };\r\n\r\n  if (meta) {\r\n    response.meta = meta;\r\n  }\r\n\r\n  return new Response(JSON.stringify(response), {\r\n    status,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      ...corsHeaders\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * \u5275\u5EFA\u97FF\u61C9\uFF08201\uFF09\r\n * @param {any} data - \u5275\u5EFA\u7684\u8CC7\u6E90\r\n * @param {string} message - \u6210\u529F\u8A0A\u606F\r\n * @returns {Response}\r\n */\r\nexport function created(data, message = '\u5275\u5EFA\u6210\u529F') {\r\n  return success(data, { message }, HTTP_STATUS.CREATED);\r\n}\r\n\r\n/**\r\n * \u7121\u5167\u5BB9\u97FF\u61C9\uFF08204\uFF09\r\n * @returns {Response}\r\n */\r\nexport function noContent() {\r\n  return new Response(null, {\r\n    status: HTTP_STATUS.NO_CONTENT,\r\n    headers: corsHeaders\r\n  });\r\n}\r\n\r\n/**\r\n * \u932F\u8AA4\u97FF\u61C9\r\n * @param {string} message - \u932F\u8AA4\u8A0A\u606F\r\n * @param {string} code - \u932F\u8AA4\u4EE3\u78BC\r\n * @param {number} status - HTTP \u72C0\u614B\u78BC\r\n * @param {Object} details - \u932F\u8AA4\u8A73\u60C5\r\n * @returns {Response}\r\n */\r\nexport function error(message, code = 'ERROR', status = HTTP_STATUS.INTERNAL_ERROR, details = null) {\r\n  const response = {\r\n    success: false,\r\n    error: {\r\n      code,\r\n      message\r\n    }\r\n  };\r\n\r\n  if (details) {\r\n    response.error.details = details;\r\n  }\r\n\r\n  return new Response(JSON.stringify(response), {\r\n    status,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      ...corsHeaders\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * \u5206\u9801\u97FF\u61C9\r\n * @param {Array} data - \u6578\u64DA\u6578\u7D44\r\n * @param {number} total - \u7E3D\u8A18\u9304\u6578\r\n * @param {number} page - \u7576\u524D\u9801\u78BC\r\n * @param {number} pageSize - \u6BCF\u9801\u6578\u91CF\r\n * @returns {Response}\r\n */\r\nexport function paginated(data, total, page, pageSize) {\r\n  return success(data, {\r\n    total,\r\n    page,\r\n    pageSize,\r\n    totalPages: Math.ceil(total / pageSize)\r\n  });\r\n}\r\n\r\n/**\r\n * \u5217\u8868\u97FF\u61C9\uFF08\u4E0D\u5206\u9801\uFF09\r\n * @param {Array} data - \u6578\u64DA\u6578\u7D44\r\n * @returns {Response}\r\n */\r\nexport function list(data) {\r\n  return success(data, {\r\n    total: data.length\r\n  });\r\n}\r\n\r\nexport default {\r\n  success,\r\n  created,\r\n  noContent,\r\n  error,\r\n  paginated,\r\n  list\r\n};\r\n\r\n", "/**\r\n * Employees Handler\r\n */\r\nimport { EmployeeService } from '../services/EmployeeService.js';\r\nimport { success, list } from '../utils/response.util.js';\r\n\r\nexport async function getEmployees(env, request) {\r\n  const service = new EmployeeService(env.DB);\r\n  const employees = await service.getAll();\r\n  return list(employees);\r\n}\r\n\r\nexport default { getEmployees };\r\n\r\n", "/**\r\n * Employees Routes\r\n */\r\nimport { getEmployees } from '../handlers/employees.handler.js';\r\nimport { withAuth } from '../middleware/auth.middleware.js';\r\nimport { withErrorHandler } from '../middleware/error.middleware.js';\r\n\r\nexport function registerEmployeeRoutes(router) {\r\n  router.get('/api/employees', withErrorHandler(withAuth(getEmployees)));\r\n}\r\n\r\nexport default registerEmployeeRoutes;\r\n\r\n", "/**\r\n * Client Repository\r\n */\r\nimport { BaseRepository } from './BaseRepository.js';\r\nimport { TABLES, FIELDS } from '../config/constants.js';\r\n\r\nexport class ClientRepository extends BaseRepository {\r\n  constructor(db) {\r\n    super(db, TABLES.CLIENTS);\r\n  }\r\n\r\n  async findWithServices(id) {\r\n    const client = await this.findById(id);\r\n    if (!client) return null;\r\n\r\n    const services = await this.db.prepare(`\r\n      SELECT * FROM ${TABLES.CLIENT_SERVICES}\r\n      WHERE client_id = ?\r\n      ORDER BY service_type\r\n    `).bind(id).all();\r\n\r\n    return {\r\n      ...client,\r\n      services: services.results || []\r\n    };\r\n  }\r\n}\r\n\r\nexport default ClientRepository;\r\n", "/**\r\n * Client Service\r\n */\r\nimport { ClientRepository } from '../repositories/ClientRepository.js';\r\n\r\nexport class ClientService {\r\n  constructor(db) {\r\n    this.repo = new ClientRepository(db);\r\n  }\r\n\r\n  async getAll() {\r\n    return this.repo.findAll({}, { orderBy: 'name', order: 'ASC' });\r\n  }\r\n\r\n  async getById(id) {\r\n    return this.repo.findWithServices(id);\r\n  }\r\n\r\n  async create(data) {\r\n    return this.repo.create(data);\r\n  }\r\n\r\n  async update(id, data) {\r\n    return this.repo.update(id, data);\r\n  }\r\n\r\n  async delete(id) {\r\n    return this.repo.delete(id);\r\n  }\r\n}\r\n\r\nexport default ClientService;\r\n", "/**\r\n * Client Service Repository\r\n */\r\nimport { BaseRepository } from './BaseRepository.js';\r\nimport { TABLES } from '../config/constants.js';\r\n\r\nexport class ClientServiceRepository extends BaseRepository {\r\n  constructor(db) {\r\n    super(db, TABLES.CLIENT_SERVICES);\r\n  }\r\n\r\n  async findByClient(clientId) {\r\n    return this.findAll({ client_id: clientId });\r\n  }\r\n\r\n  async findAllWithClient() {\r\n    const query = `\r\n      SELECT \r\n        cs.*,\r\n        c.name as client_name\r\n      FROM ${TABLES.CLIENT_SERVICES} cs\r\n      JOIN ${TABLES.CLIENTS} c ON cs.client_id = c.id\r\n      ORDER BY c.name, cs.service_type\r\n    `;\r\n    return this.raw(query);\r\n  }\r\n}\r\n\r\nexport default ClientServiceRepository;\r\n\r\n", "/**\r\n * Clients Handler\r\n */\r\nimport { ClientService } from '../services/ClientService.js';\r\nimport { ClientServiceRepository } from '../repositories/ClientServiceRepository.js';\r\nimport { BaseRepository } from '../repositories/BaseRepository.js';\r\nimport { success, list, created, noContent } from '../utils/response.util.js';\r\nimport { TABLES } from '../config/constants.js';\r\n\r\nexport async function getClients(env, request) {\r\n  const service = new ClientService(env.DB);\r\n  const clients = await service.getAll();\r\n  return list(clients);\r\n}\r\n\r\nexport async function getClient(env, request) {\r\n  const id = parseInt(request.params.id);\r\n  const service = new ClientService(env.DB);\r\n  const client = await service.getById(id);\r\n  return success(client);\r\n}\r\n\r\nexport async function createClient(env, request) {\r\n  const data = await request.json();\r\n  const service = new ClientService(env.DB);\r\n  const client = await service.create(data);\r\n  return created(client);\r\n}\r\n\r\nexport async function updateClient(env, request) {\r\n  const id = parseInt(request.params.id);\r\n  const data = await request.json();\r\n  const service = new ClientService(env.DB);\r\n  const client = await service.update(id, data);\r\n  return success(client);\r\n}\r\n\r\nexport async function deleteClient(env, request) {\r\n  const id = parseInt(request.params.id);\r\n  const service = new ClientService(env.DB);\r\n  await service.delete(id);\r\n  return noContent();\r\n}\r\n\r\nexport async function getClientServices(env, request) {\r\n  const url = new URL(request.url);\r\n  const clientId = url.searchParams.get('client_id');\r\n  \r\n  const repo = new ClientServiceRepository(env.DB);\r\n  const services = clientId \r\n    ? await repo.findByClient(parseInt(clientId))\r\n    : await repo.findAllWithClient();\r\n  \r\n  return success(services);\r\n}\r\n\r\nexport async function getClientInteractions(env, request) {\r\n  const url = new URL(request.url);\r\n  const clientId = url.searchParams.get('client_id');\r\n  \r\n  const repo = new BaseRepository(env.DB, TABLES.CLIENT_INTERACTIONS);\r\n  const filters = clientId ? { client_id: parseInt(clientId) } : {};\r\n  const interactions = await repo.findAll(filters, { orderBy: 'interaction_date', order: 'DESC' });\r\n  \r\n  return success(interactions);\r\n}\r\n\r\nexport default {\r\n  getClients,\r\n  getClient,\r\n  createClient,\r\n  updateClient,\r\n  deleteClient,\r\n  getClientServices,\r\n  getClientInteractions\r\n};\r\n", "/**\r\n * Clients Routes\r\n */\r\nimport {\r\n  getClients,\r\n  getClient,\r\n  createClient,\r\n  updateClient,\r\n  deleteClient,\r\n  getClientServices,\r\n  getClientInteractions\r\n} from '../handlers/clients.handler.js';\r\nimport { withAuth, withAdmin } from '../middleware/auth.middleware.js';\r\nimport { withErrorHandler } from '../middleware/error.middleware.js';\r\n\r\nexport function registerClientRoutes(router) {\r\n  const auth = (h) => withErrorHandler(withAuth(h));\r\n  const admin = (h) => withErrorHandler(withAdmin(h));\r\n\r\n  router.get('/api/clients', auth(getClients));\r\n  router.get('/api/clients/:id', auth(getClient));\r\n  router.post('/api/clients', admin(createClient));\r\n  router.put('/api/clients/:id', admin(updateClient));\r\n  router.delete('/api/clients/:id', admin(deleteClient));\r\n  \r\n  router.get('/api/client-services', auth(getClientServices));\r\n  router.get('/api/client-interactions', auth(getClientInteractions));\r\n}\r\n\r\nexport default registerClientRoutes;\r\n", "/**\r\n * Task Repository\r\n */\r\nimport { BaseRepository } from './BaseRepository.js';\r\nimport { TABLES } from '../config/constants.js';\r\n\r\nexport class TaskRepository extends BaseRepository {\r\n  constructor(db) {\r\n    super(db, TABLES.TASKS);\r\n  }\r\n\r\n  async findAllWithRelations(filters = {}) {\r\n    let query = `\r\n      SELECT \r\n        t.*,\r\n        c.name as client_name\r\n      FROM ${TABLES.TASKS} t\r\n      LEFT JOIN ${TABLES.CLIENTS} c ON t.client_id = c.id\r\n      WHERE 1=1\r\n    `;\r\n    const params = [];\r\n\r\n    if (filters.status) {\r\n      query += ` AND t.status = ?`;\r\n      params.push(filters.status);\r\n    }\r\n\r\n    if (filters.assigned_user_id) {\r\n      query += ` AND t.assigned_user_id = ?`;\r\n      params.push(filters.assigned_user_id);\r\n    }\r\n\r\n    if (filters.category) {\r\n      query += ` AND t.category = ?`;\r\n      params.push(filters.category);\r\n    }\r\n\r\n    query += ` ORDER BY t.created_at DESC`;\r\n\r\n    return this.raw(query, params);\r\n  }\r\n}\r\n\r\nexport default TaskRepository;\r\n", "/**\r\n * Task Service\r\n */\r\nimport { TaskRepository } from '../repositories/TaskRepository.js';\r\n\r\nexport class TaskService {\r\n  constructor(db) {\r\n    this.repo = new TaskRepository(db);\r\n  }\r\n\r\n  async getAll(filters = {}) {\r\n    return this.repo.findAllWithRelations(filters);\r\n  }\r\n\r\n  async getById(id) {\r\n    return this.repo.findById(id);\r\n  }\r\n\r\n  async create(data) {\r\n    if (!data.status) data.status = 'pending';\r\n    if (!data.priority) data.priority = 'medium';\r\n    return this.repo.create(data);\r\n  }\r\n\r\n  async update(id, data) {\r\n    return this.repo.update(id, data);\r\n  }\r\n\r\n  async delete(id) {\r\n    return this.repo.delete(id);\r\n  }\r\n}\r\n\r\nexport default TaskService;\r\n", "/**\r\n * Tasks Handler\r\n */\r\nimport { TaskService } from '../services/TaskService.js';\r\nimport { success, list, created } from '../utils/response.util.js';\r\n\r\nexport async function getTasks(env, request) {\r\n  const url = new URL(request.url);\r\n  const filters = {\r\n    status: url.searchParams.get('status'),\r\n    assigned_user_id: url.searchParams.get('assigned_user_id') ? parseInt(url.searchParams.get('assigned_user_id')) : null,\r\n    category: url.searchParams.get('category')\r\n  };\r\n  \r\n  // \u79FB\u9664 null \u503C\r\n  Object.keys(filters).forEach(key => {\r\n    if (filters[key] === null || filters[key] === undefined) delete filters[key];\r\n  });\r\n\r\n  const service = new TaskService(env.DB);\r\n  const tasks = await service.getAll(filters);\r\n  \r\n  return success({ tasks });\r\n}\r\n\r\nexport async function getMultiStageTasks(env, request) {\r\n  const service = new TaskService(env.DB);\r\n  const tasks = await service.getAll({ category: 'client_service' });\r\n  return success({ tasks });\r\n}\r\n\r\nexport async function getRecurringTasks(env, request) {\r\n  const service = new TaskService(env.DB);\r\n  const tasks = await service.getAll({ category: 'recurring' });\r\n  return list(tasks);\r\n}\r\n\r\nexport async function createTask(env, request) {\r\n  const data = await request.json();\r\n  const service = new TaskService(env.DB);\r\n  const task = await service.create(data);\r\n  return created(task);\r\n}\r\n\r\nexport async function updateTask(env, request) {\r\n  const id = parseInt(request.params.id);\r\n  const data = await request.json();\r\n  const service = new TaskService(env.DB);\r\n  const task = await service.update(id, data);\r\n  return success(task);\r\n}\r\n\r\nexport default {\r\n  getTasks,\r\n  getMultiStageTasks,\r\n  getRecurringTasks,\r\n  createTask,\r\n  updateTask\r\n};\r\n", "/**\r\n * Tasks Routes\r\n */\r\nimport {\r\n  getTasks,\r\n  getMultiStageTasks,\r\n  getRecurringTasks,\r\n  createTask,\r\n  updateTask\r\n} from '../handlers/tasks.handler.js';\r\nimport { withAuth } from '../middleware/auth.middleware.js';\r\nimport { withErrorHandler } from '../middleware/error.middleware.js';\r\n\r\nexport function registerTaskRoutes(router) {\r\n  const auth = (h) => withErrorHandler(withAuth(h));\r\n\r\n  router.get('/api/tasks', auth(getTasks));\r\n  router.get('/api/tasks/multi-stage', auth(getMultiStageTasks));\r\n  router.get('/api/tasks/recurring', auth(getRecurringTasks));\r\n  router.post('/api/tasks', auth(createTask));\r\n  router.put('/api/tasks/multi-stage/:id', auth(updateTask));\r\n}\r\n\r\nexport default registerTaskRoutes;\r\n", "/**\r\n * Timesheet Repository\r\n */\r\nimport { BaseRepository } from './BaseRepository.js';\r\nimport { TABLES } from '../config/constants.js';\r\n\r\nexport class TimesheetRepository extends BaseRepository {\r\n  constructor(db) {\r\n    super(db, TABLES.TIMESHEETS);\r\n  }\r\n\r\n  async findByEmployeeAndPeriod(employeeId, year, month = null) {\r\n    let query = `\r\n      SELECT t.*, c.name as client_name\r\n      FROM ${TABLES.TIMESHEETS} t\r\n      LEFT JOIN ${TABLES.CLIENTS} c ON t.client_id = c.id\r\n      WHERE t.employee_id = ?\r\n        AND strftime('%Y', t.date) = ?\r\n    `;\r\n    const params = [employeeId, year.toString()];\r\n\r\n    if (month) {\r\n      query += ` AND strftime('%m', t.date) = ?`;\r\n      params.push(month.toString().padStart(2, '0'));\r\n    }\r\n\r\n    query += ` ORDER BY t.date DESC`;\r\n\r\n    return this.raw(query, params);\r\n  }\r\n}\r\n\r\nexport default TimesheetRepository;\r\n\r\n", "/**\r\n * Timesheet Service\r\n */\r\nimport { TimesheetRepository } from '../repositories/TimesheetRepository.js';\r\nimport { EmployeeRepository } from '../repositories/EmployeeRepository.js';\r\n\r\nexport class TimesheetService {\r\n  constructor(db) {\r\n    this.repo = new TimesheetRepository(db);\r\n    this.empRepo = new EmployeeRepository(db);\r\n  }\r\n\r\n  async getByEmployee(employeeName, year, month = null) {\r\n    const employee = await this.empRepo.findByName(employeeName);\r\n    if (!employee) return { workEntries: [], leaveEntries: [] };\r\n\r\n    const timesheets = await this.repo.findByEmployeeAndPeriod(employee.id, year, month);\r\n    \r\n    return {\r\n      workEntries: timesheets.filter(t => t.regular_hours > 0 || t.overtime_hours > 0),\r\n      leaveEntries: []\r\n    };\r\n  }\r\n\r\n  async create(data) {\r\n    return this.repo.create(data);\r\n  }\r\n}\r\n\r\nexport default TimesheetService;\r\n\r\n", "/**\r\n * System Repository\r\n * \u5904\u7406\u7CFB\u7EDF\u57FA\u7840\u6570\u636E\r\n */\r\nimport { TABLES } from '../config/constants.js';\r\n\r\nexport class SystemRepository {\r\n  constructor(db) {\r\n    this.db = db;\r\n  }\r\n\r\n  async getBusinessTypes() {\r\n    const result = await this.db.prepare(`\r\n      SELECT * FROM ${TABLES.BUSINESS_TYPES} WHERE is_active = 1 ORDER BY type_name\r\n    `).all();\r\n    return result.results || [];\r\n  }\r\n\r\n  async getLeaveTypes() {\r\n    const result = await this.db.prepare(`\r\n      SELECT * FROM ${TABLES.LEAVE_TYPES} WHERE is_active = 1 ORDER BY type_name\r\n    `).all();\r\n    return result.results || [];\r\n  }\r\n\r\n  async getHolidays(year) {\r\n    const result = await this.db.prepare(`\r\n      SELECT * FROM ${TABLES.HOLIDAYS}\r\n      WHERE strftime('%Y', holiday_date) = ?\r\n      ORDER BY holiday_date\r\n    `).bind(year.toString()).all();\r\n    return result.results || [];\r\n  }\r\n\r\n  async getSystemParameter(category, key) {\r\n    const result = await this.db.prepare(`\r\n      SELECT param_value FROM ${TABLES.SYSTEM_PARAMETERS}\r\n      WHERE param_category = ? AND param_key = ?\r\n    `).bind(category, key).first();\r\n    return result?.param_value || null;\r\n  }\r\n}\r\n\r\nexport default SystemRepository;\r\n\r\n", "/**\r\n * System Service\r\n */\r\nimport { SystemRepository } from '../repositories/SystemRepository.js';\r\n\r\nexport class SystemService {\r\n  constructor(db) {\r\n    this.repo = new SystemRepository(db);\r\n  }\r\n\r\n  async getBusinessTypes() {\r\n    return this.repo.getBusinessTypes();\r\n  }\r\n\r\n  async getLeaveTypes() {\r\n    return this.repo.getLeaveTypes();\r\n  }\r\n\r\n  async getHolidays(year) {\r\n    return this.repo.getHolidays(year);\r\n  }\r\n\r\n  async getWorkTypes() {\r\n    return [\r\n      { id: 1, name: '\u6B63\u5E38\u5DE5\u6642', rate: 1.00 },\r\n      { id: 2, name: '\u5E73\u65E5\u52A0\u73ED(1.34)', rate: 1.34 },\r\n      { id: 3, name: '\u5E73\u65E5\u52A0\u73ED(1.67)', rate: 1.67 },\r\n      { id: 4, name: '\u4F11\u606F\u65E5\u52A0\u73ED(1.34)', rate: 1.34 },\r\n      { id: 5, name: '\u4F11\u606F\u65E5\u52A0\u73ED(1.67)', rate: 1.67 },\r\n      { id: 6, name: '\u4F11\u606F\u65E5\u52A0\u73ED(2.67)', rate: 2.67 },\r\n      { id: 7, name: '\u570B\u5B9A\u5047\u65E5\u52A0\u73ED', rate: 2.00 }\r\n    ];\r\n  }\r\n\r\n  async getLeaveQuota(employeeName, year) {\r\n    // \u7B80\u5316\u7248\uFF1A\u8FD4\u56DE\u57FA\u672C\u914D\u989D\r\n    return {\r\n      quota: [\r\n        { type: '\u7279\u4F11', quota_hours: 56, used_hours: 0, remaining_hours: 56 },\r\n        { type: '\u75C5\u5047', quota_hours: 240, used_hours: 0, remaining_hours: 240 }\r\n      ],\r\n      employee: employeeName,\r\n      year\r\n    };\r\n  }\r\n}\r\n\r\nexport default SystemService;\r\n\r\n", "/**\r\n * Timesheets Handler\r\n */\r\nimport { TimesheetService } from '../services/TimesheetService.js';\r\nimport { SystemService } from '../services/SystemService.js';\r\nimport { success } from '../utils/response.util.js';\r\n\r\nexport async function getTimesheetData(env, request) {\r\n  const url = new URL(request.url);\r\n  const employee = url.searchParams.get('employee');\r\n  const year = parseInt(url.searchParams.get('year')) || new Date().getFullYear();\r\n  const month = url.searchParams.get('month') ? parseInt(url.searchParams.get('month')) : null;\r\n\r\n  const service = new TimesheetService(env.DB);\r\n  const data = await service.getByEmployee(employee, year, month);\r\n  \r\n  return success(data);\r\n}\r\n\r\nexport async function getLeaveQuota(env, request) {\r\n  const url = new URL(request.url);\r\n  const employee = url.searchParams.get('employee');\r\n  const year = parseInt(url.searchParams.get('year')) || new Date().getFullYear();\r\n\r\n  const service = new SystemService(env.DB);\r\n  const quota = await service.getLeaveQuota(employee, year);\r\n  \r\n  return success(quota);\r\n}\r\n\r\nexport default {\r\n  getTimesheetData,\r\n  getLeaveQuota\r\n};\r\n\r\n", "/**\r\n * Timesheets Routes\r\n */\r\nimport { getTimesheetData, getLeaveQuota } from '../handlers/timesheets.handler.js';\r\nimport { withAuth } from '../middleware/auth.middleware.js';\r\nimport { withErrorHandler } from '../middleware/error.middleware.js';\r\n\r\nexport function registerTimesheetRoutes(router) {\r\n  const auth = (h) => withErrorHandler(withAuth(h));\r\n\r\n  router.get('/api/timesheet-data', auth(getTimesheetData));\r\n  router.get('/api/leave-quota', auth(getLeaveQuota));\r\n}\r\n\r\nexport default registerTimesheetRoutes;\r\n\r\n", "/**\r\n * Reminder Repository\r\n */\r\nimport { BaseRepository } from './BaseRepository.js';\r\nimport { TABLES } from '../config/constants.js';\r\n\r\nexport class ReminderRepository extends BaseRepository {\r\n  constructor(db) {\r\n    super(db, TABLES.TASK_REMINDERS);\r\n  }\r\n\r\n  async findByUser(userId, isRead = null) {\r\n    const filters = { user_id: userId };\r\n    if (isRead !== null) {\r\n      filters.is_read = isRead ? 1 : 0;\r\n    }\r\n    return this.findAll(filters, { orderBy: 'remind_at', order: 'DESC' });\r\n  }\r\n\r\n  async markAllAsRead(userId) {\r\n    const query = `\r\n      UPDATE ${TABLES.TASK_REMINDERS}\r\n      SET is_read = 1, read_at = ?\r\n      WHERE user_id = ? AND is_read = 0\r\n    `;\r\n    const result = await this.db.prepare(query)\r\n      .bind(new Date().toISOString(), userId)\r\n      .run();\r\n    return result.meta?.changes || 0;\r\n  }\r\n}\r\n\r\nexport default ReminderRepository;\r\n\r\n", "/**\r\n * Reminder Service\r\n */\r\nimport { ReminderRepository } from '../repositories/ReminderRepository.js';\r\n\r\nexport class ReminderService {\r\n  constructor(db) {\r\n    this.repo = new ReminderRepository(db);\r\n  }\r\n\r\n  async getByUser(userId, isRead = null) {\r\n    const reminders = await this.repo.findByUser(userId, isRead);\r\n    return { reminders };\r\n  }\r\n\r\n  async markAsRead(id) {\r\n    return this.repo.update(id, { is_read: 1, read_at: new Date().toISOString() });\r\n  }\r\n\r\n  async markAllAsRead(userId) {\r\n    return this.repo.markAllAsRead(userId);\r\n  }\r\n}\r\n\r\nexport default ReminderService;\r\n\r\n", "/**\r\n * Reminders Handler\r\n */\r\nimport { ReminderService } from '../services/ReminderService.js';\r\nimport { success, noContent } from '../utils/response.util.js';\r\n\r\nexport async function getReminders(env, request) {\r\n  const url = new URL(request.url);\r\n  const userId = url.searchParams.get('user_id') ? parseInt(url.searchParams.get('user_id')) : request.user.id;\r\n  const isRead = url.searchParams.get('is_read');\r\n\r\n  const service = new ReminderService(env.DB);\r\n  const result = await service.getByUser(userId, isRead === '0' ? false : null);\r\n  \r\n  return success(result);\r\n}\r\n\r\nexport async function markReminderRead(env, request) {\r\n  const id = parseInt(request.params.id);\r\n  const service = new ReminderService(env.DB);\r\n  await service.markAsRead(id);\r\n  return noContent();\r\n}\r\n\r\nexport async function markAllRead(env, request) {\r\n  const userId = request.user.id;\r\n  const service = new ReminderService(env.DB);\r\n  const count = await service.markAllAsRead(userId);\r\n  return success({ count });\r\n}\r\n\r\nexport default {\r\n  getReminders,\r\n  markReminderRead,\r\n  markAllRead\r\n};\r\n\r\n", "/**\r\n * Reminders Routes\r\n */\r\nimport { getReminders, markReminderRead, markAllRead } from '../handlers/reminders.handler.js';\r\nimport { withAuth } from '../middleware/auth.middleware.js';\r\nimport { withErrorHandler } from '../middleware/error.middleware.js';\r\n\r\nexport function registerReminderRoutes(router) {\r\n  const auth = (h) => withErrorHandler(withAuth(h));\r\n\r\n  router.get('/api/reminders', auth(getReminders));\r\n  router.put('/api/reminders/:id/read', auth(markReminderRead));\r\n  router.put('/api/reminders/mark-all-read', auth(markAllRead));\r\n}\r\n\r\nexport default registerReminderRoutes;\r\n\r\n", "/**\r\n * SOP Repository\r\n */\r\nimport { BaseRepository } from './BaseRepository.js';\r\nimport { TABLES } from '../config/constants.js';\r\n\r\nexport class SopRepository extends BaseRepository {\r\n  constructor(db) {\r\n    super(db, TABLES.SOPS);\r\n  }\r\n\r\n  async findAllWithCategory() {\r\n    const query = `\r\n      SELECT s.*, c.name as category_name\r\n      FROM ${TABLES.SOPS} s\r\n      LEFT JOIN ${TABLES.SOP_CATEGORIES} c ON s.category_id = c.id\r\n      WHERE s.status = 'published'\r\n      ORDER BY s.updated_at DESC\r\n    `;\r\n    return this.raw(query);\r\n  }\r\n\r\n  async search(keyword) {\r\n    const query = `\r\n      SELECT s.*, c.name as category_name\r\n      FROM ${TABLES.SOPS} s\r\n      LEFT JOIN ${TABLES.SOP_CATEGORIES} c ON s.category_id = c.id\r\n      WHERE s.status = 'published'\r\n        AND (s.title LIKE ? OR s.content LIKE ?)\r\n      ORDER BY s.updated_at DESC\r\n    `;\r\n    const pattern = `%${keyword}%`;\r\n    return this.raw(query, [pattern, pattern]);\r\n  }\r\n}\r\n\r\nexport default SopRepository;\r\n\r\n", "/**\r\n * SOP Service\r\n */\r\nimport { SopRepository } from '../repositories/SopRepository.js';\r\nimport { BaseRepository } from '../repositories/BaseRepository.js';\r\nimport { TABLES } from '../config/constants.js';\r\n\r\nexport class SopService {\r\n  constructor(db) {\r\n    this.repo = new SopRepository(db);\r\n    this.categoryRepo = new BaseRepository(db, TABLES.SOP_CATEGORIES);\r\n  }\r\n\r\n  async getCategories() {\r\n    return this.categoryRepo.findAll({}, { orderBy: 'sort_order', order: 'ASC' });\r\n  }\r\n\r\n  async getAll() {\r\n    return this.repo.findAllWithCategory();\r\n  }\r\n\r\n  async search(keyword) {\r\n    return this.repo.search(keyword);\r\n  }\r\n\r\n  async getById(id) {\r\n    return this.repo.findById(id);\r\n  }\r\n\r\n  async create(data) {\r\n    if (!data.status) data.status = 'draft';\r\n    return this.repo.create(data);\r\n  }\r\n\r\n  async update(id, data) {\r\n    return this.repo.update(id, data);\r\n  }\r\n}\r\n\r\nexport default SopService;\r\n\r\n", "/**\r\n * SOPs Handler\r\n */\r\nimport { SopService } from '../services/SopService.js';\r\nimport { success, list, created } from '../utils/response.util.js';\r\n\r\nexport async function getSopCategories(env, request) {\r\n  const service = new SopService(env.DB);\r\n  const categories = await service.getCategories();\r\n  return list(categories);\r\n}\r\n\r\nexport async function getSops(env, request) {\r\n  const service = new SopService(env.DB);\r\n  const sops = await service.getAll();\r\n  return success(sops);\r\n}\r\n\r\nexport async function searchSops(env, request) {\r\n  const url = new URL(request.url);\r\n  const keyword = url.searchParams.get('q') || url.searchParams.get('keyword');\r\n  \r\n  const service = new SopService(env.DB);\r\n  const results = await service.search(keyword || '');\r\n  return success(results);\r\n}\r\n\r\nexport async function getSop(env, request) {\r\n  const id = parseInt(request.params.id);\r\n  const service = new SopService(env.DB);\r\n  const sop = await service.getById(id);\r\n  return success(sop);\r\n}\r\n\r\nexport async function createSop(env, request) {\r\n  const data = await request.json();\r\n  const service = new SopService(env.DB);\r\n  const sop = await service.create(data);\r\n  return created(sop);\r\n}\r\n\r\nexport async function updateSop(env, request) {\r\n  const id = parseInt(request.params.id);\r\n  const data = await request.json();\r\n  const service = new SopService(env.DB);\r\n  const sop = await service.update(id, data);\r\n  return success(sop);\r\n}\r\n\r\nexport default {\r\n  getSopCategories,\r\n  getSops,\r\n  searchSops,\r\n  getSop,\r\n  createSop,\r\n  updateSop\r\n};\r\n\r\n", "/**\r\n * SOPs Routes\r\n */\r\nimport {\r\n  getSopCategories,\r\n  getSops,\r\n  searchSops,\r\n  getSop,\r\n  createSop,\r\n  updateSop\r\n} from '../handlers/sops.handler.js';\r\nimport { withAuth, withAdmin } from '../middleware/auth.middleware.js';\r\nimport { withErrorHandler } from '../middleware/error.middleware.js';\r\n\r\nexport function registerSopRoutes(router) {\r\n  const auth = (h) => withErrorHandler(withAuth(h));\r\n  const admin = (h) => withErrorHandler(withAdmin(h));\r\n\r\n  router.get('/api/sop-categories', auth(getSopCategories));\r\n  router.get('/api/sops', auth(getSops));\r\n  router.get('/api/sops/search', auth(searchSops));\r\n  router.get('/api/sops/:id', auth(getSop));\r\n  router.post('/api/sops', admin(createSop));\r\n  router.put('/api/sops/:id', admin(updateSop));\r\n}\r\n\r\nexport default registerSopRoutes;\r\n\r\n", "/**\r\n * System Handler\r\n */\r\nimport { SystemService } from '../services/SystemService.js';\r\nimport { success, list } from '../utils/response.util.js';\r\n\r\nexport async function getBusinessTypes(env, request) {\r\n  const service = new SystemService(env.DB);\r\n  const types = await service.getBusinessTypes();\r\n  return list(types);\r\n}\r\n\r\nexport async function getLeaveTypes(env, request) {\r\n  const service = new SystemService(env.DB);\r\n  const types = await service.getLeaveTypes();\r\n  return list(types);\r\n}\r\n\r\nexport async function getHolidays(env, request) {\r\n  const url = new URL(request.url);\r\n  const year = parseInt(url.searchParams.get('year')) || new Date().getFullYear();\r\n  \r\n  const service = new SystemService(env.DB);\r\n  const holidays = await service.getHolidays(year);\r\n  return list(holidays);\r\n}\r\n\r\nexport async function getWorkTypes(env, request) {\r\n  const service = new SystemService(env.DB);\r\n  const types = await service.getWorkTypes();\r\n  return list(types);\r\n}\r\n\r\nexport default {\r\n  getBusinessTypes,\r\n  getLeaveTypes,\r\n  getHolidays,\r\n  getWorkTypes\r\n};\r\n\r\n", "/**\r\n * System Routes\r\n */\r\nimport {\r\n  getBusinessTypes,\r\n  getLeaveTypes,\r\n  getHolidays,\r\n  getWorkTypes\r\n} from '../handlers/system.handler.js';\r\nimport { withAuth } from '../middleware/auth.middleware.js';\r\nimport { withErrorHandler } from '../middleware/error.middleware.js';\r\n\r\nexport function registerSystemRoutes(router) {\r\n  const auth = (h) => withErrorHandler(withAuth(h));\r\n\r\n  router.get('/api/business-types', auth(getBusinessTypes));\r\n  router.get('/api/leave-types', auth(getLeaveTypes));\r\n  router.get('/api/holidays', auth(getHolidays));\r\n  router.get('/api/work-types', auth(getWorkTypes));\r\n}\r\n\r\nexport default registerSystemRoutes;\r\n\r\n", "/**\r\n * Reports Handler\r\n */\r\nimport { EmployeeRepository } from '../repositories/EmployeeRepository.js';\r\nimport { BaseRepository } from '../repositories/BaseRepository.js';\r\nimport { success } from '../utils/response.util.js';\r\nimport { TABLES } from '../config/constants.js';\r\n\r\nexport async function getAnnualLeaveReport(env, request) {\r\n  const url = new URL(request.url);\r\n  const employeeName = url.searchParams.get('employee');\r\n  const year = parseInt(url.searchParams.get('year')) || new Date().getFullYear();\r\n\r\n  const empRepo = new EmployeeRepository(env.DB);\r\n  const employee = await empRepo.findByName(employeeName);\r\n  \r\n  if (!employee) {\r\n    return success({ leave_stats: {}, employee: employeeName, year });\r\n  }\r\n\r\n  const leaveRepo = new BaseRepository(env.DB, TABLES.LEAVE_EVENTS);\r\n  const leaveEvents = await leaveRepo.raw(`\r\n    SELECT le.*, lt.type_name\r\n    FROM ${TABLES.LEAVE_EVENTS} le\r\n    JOIN ${TABLES.LEAVE_TYPES} lt ON le.leave_type_id = lt.id\r\n    WHERE le.employee_id = ? AND strftime('%Y', le.date) = ?\r\n  `, [employee.id, year.toString()]);\r\n\r\n  const leaveStats = {};\r\n  leaveEvents.forEach(e => {\r\n    leaveStats[e.type_name] = (leaveStats[e.type_name] || 0) + e.hours;\r\n  });\r\n\r\n  return success({ leave_stats: leaveStats, employee: employeeName, year });\r\n}\r\n\r\nexport async function getWorkAnalysisReport(env, request) {\r\n  // \u7B80\u5316\u7248\uFF1A\u8FD4\u56DE\u7A7A\u62A5\u8868\r\n  return success({ timesheets: [], stats: {} });\r\n}\r\n\r\nexport async function clearCache(env, request) {\r\n  return success({ message: '\u5FEB\u53D6\u5DF2\u6E05\u9664' });\r\n}\r\n\r\nexport default {\r\n  getAnnualLeaveReport,\r\n  getWorkAnalysisReport,\r\n  clearCache\r\n};\r\n\r\n", "/**\r\n * Reports Routes\r\n */\r\nimport { getAnnualLeaveReport, getWorkAnalysisReport, clearCache } from '../handlers/reports.handler.js';\r\nimport { withAuth } from '../middleware/auth.middleware.js';\r\nimport { withErrorHandler } from '../middleware/error.middleware.js';\r\n\r\nexport function registerReportRoutes(router) {\r\n  const auth = (h) => withErrorHandler(withAuth(h));\r\n\r\n  router.get('/api/reports/annual-leave', auth(getAnnualLeaveReport));\r\n  router.get('/api/reports/work-analysis', auth(getWorkAnalysisReport));\r\n  router.post('/api/reports/clear-cache', auth(clearCache));\r\n}\r\n\r\nexport default registerReportRoutes;\r\n\r\n", "/**\r\n * Cloudflare Worker - \u5B8C\u5168\u6A21\u5757\u5316\u67B6\u6784\r\n * \u7248\u672C: 3.0 \u5B8C\u5168\u91CD\u5EFA\u7248\r\n * \u521B\u5EFA\u65E5\u671F: 2025-10-27\r\n */\r\n\r\nimport { Router } from './routes/router.js';\r\nimport { registerAuthRoutes } from './routes/auth.routes.js';\r\nimport { registerEmployeeRoutes } from './routes/employees.routes.js';\r\nimport { registerClientRoutes } from './routes/clients.routes.js';\r\nimport { registerTaskRoutes } from './routes/tasks.routes.js';\r\nimport { registerTimesheetRoutes } from './routes/timesheets.routes.js';\r\nimport { registerReminderRoutes } from './routes/reminders.routes.js';\r\nimport { registerSopRoutes } from './routes/sops.routes.js';\r\nimport { registerSystemRoutes } from './routes/system.routes.js';\r\nimport { registerReportRoutes } from './routes/reports.routes.js';\r\nimport { corsHeaders } from './utils.js';\r\n\r\n/**\r\n * \u5904\u7406 OPTIONS \u8BF7\u6C42\r\n */\r\nfunction handleOptions() {\r\n  return new Response(null, {\r\n    headers: {\r\n      ...corsHeaders,\r\n      'Access-Control-Max-Age': '86400'\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * \u521B\u5EFA\u5E76\u914D\u7F6E\u8DEF\u7531\u5668\r\n */\r\nfunction createRouter() {\r\n  const router = new Router();\r\n\r\n  // \u6CE8\u518C\u6240\u6709\u8DEF\u7531\u6A21\u5757\r\n  registerAuthRoutes(router);\r\n  registerEmployeeRoutes(router);\r\n  registerClientRoutes(router);\r\n  registerTaskRoutes(router);\r\n  registerTimesheetRoutes(router);\r\n  registerReminderRoutes(router);\r\n  registerSopRoutes(router);\r\n  registerSystemRoutes(router);\r\n  registerReportRoutes(router);\r\n\r\n  return router;\r\n}\r\n\r\n/**\r\n * Worker \u4E3B\u5165\u53E3\r\n */\r\nexport default {\r\n  async fetch(request, env, ctx) {\r\n    // \u5904\u7406 OPTIONS \u9884\u68C0\r\n    if (request.method === 'OPTIONS') {\r\n      return handleOptions();\r\n    }\r\n\r\n    try {\r\n      const router = createRouter();\r\n      return await router.handle(request, env);\r\n    } catch (error) {\r\n      console.error('[Global Error]', error);\r\n      \r\n      return new Response(JSON.stringify({\r\n        success: false,\r\n        error: {\r\n          code: 'INTERNAL_ERROR',\r\n          message: '\u670D\u52A1\u5668\u5185\u90E8\u9519\u8BEF'\r\n        }\r\n      }), {\r\n        status: 500,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          ...corsHeaders\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"C:\\\\Users\\\\miama\\\\Desktop\\\\horgoscpa\\\\timesheet-api\\\\src\\\\index.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\Users\\\\miama\\\\Desktop\\\\horgoscpa\\\\timesheet-api\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"C:\\\\Users\\\\miama\\\\Desktop\\\\horgoscpa\\\\timesheet-api\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"C:\\\\Users\\\\miama\\\\Desktop\\\\horgoscpa\\\\timesheet-api\\\\src\\\\index.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"C:\\\\Users\\\\miama\\\\Desktop\\\\horgoscpa\\\\timesheet-api\\\\.wrangler\\\\tmp\\\\bundle-1xFnd6\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"C:\\\\Users\\\\miama\\\\Desktop\\\\horgoscpa\\\\timesheet-api\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"C:\\\\Users\\\\miama\\\\Desktop\\\\horgoscpa\\\\timesheet-api\\\\.wrangler\\\\tmp\\\\bundle-1xFnd6\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"C:\\\\Users\\\\miama\\\\Desktop\\\\horgoscpa\\\\timesheet-api\\\\.wrangler\\\\tmp\\\\bundle-1xFnd6\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": ";;;;AAKO,IAAM,cAAc;AAAA,EACzB,+BAA+B;AAAA,EAC/B,gCAAgC;AAAA,EAChC,gCAAgC;AAClC;AAGO,SAAS,aAAa,MAAM,SAAS,KAAK;AAC/C,SAAO,IAAI,SAAS,KAAK,UAAU,IAAI,GAAG;AAAA,IACxC;AAAA,IACA,SAAS;AAAA,MACP,gBAAgB;AAAA,MAChB,GAAG;AAAA,IACL;AAAA,EACF,CAAC;AACH;AARgB;;;ACNT,IAAM,aAAa;AAAA,EACxB,OAAO;AAAA,EACP,UAAU;AACZ;AAGO,IAAM,cAAc;AAAA,EACzB,SAAS;AAAA,EACT,aAAa;AAAA,EACb,SAAS;AAAA,EACT,WAAW;AAAA,EACX,WAAW;AACb;AAGO,IAAM,YAAY;AAAA,EACvB,MAAM;AAAA,EACN,SAAS;AAAA,EACT,WAAW;AACb;AAGO,IAAM,gBAAgB;AAAA,EAC3B,WAAW;AAAA,EACX,UAAU;AAAA,EACV,SAAS;AAAA,EACT,gBAAgB;AAAA,EAChB,SAAS;AACX;AAGO,IAAM,gBAAgB;AAAA,EAC3B,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,MAAM;AACR;AAGO,IAAM,eAAe;AAAA,EAC1B,YAAY;AAAA,EACZ,KAAK;AAAA,EACL,YAAY;AAAA,EACZ,aAAa;AAAA,EACb,YAAY;AAAA,EACZ,UAAU;AAAA,EACV,KAAK;AAAA,EACL,iBAAiB;AAAA,EACjB,OAAO;AAAA,EACP,eAAe;AACjB;AAGO,IAAM,oBAAoB;AAAA,EAC/B,SAAS;AAAA,EACT,WAAW;AAAA,EACX,WAAW;AAAA,EACX,UAAU;AAAA,EACV,QAAQ;AACV;AAGO,IAAM,gBAAgB;AAAA,EAC3B,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,WAAW;AACb;AAGO,IAAM,UAAU;AAAA,EACrB,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,OAAO;AACT;AAGO,IAAM,gBAAgB;AAAA,EAC3B,SAAS;AAAA,EACT,mBAAmB;AACrB;AAGO,IAAM,gBAAgB;AAAA,EAC3B,KAAK;AAAA,EACL,UAAU;AAAA,EACV,KAAK;AACP;AAGO,IAAM,gBAAgB;AAAA,EAC3B,UAAU;AAAA,EACV,SAAS;AAAA,EACT,UAAU;AAAA,EACV,WAAW;AAAA,EACX,QAAQ;AACV;AAGO,IAAM,cAAc;AAAA,EACzB,IAAI;AAAA,EACJ,SAAS;AAAA,EACT,YAAY;AAAA,EACZ,aAAa;AAAA,EACb,cAAc;AAAA,EACd,WAAW;AAAA,EACX,WAAW;AAAA,EACX,UAAU;AAAA,EACV,gBAAgB;AAClB;AAGO,IAAM,cAAc;AAAA;AAAA,EAEzB,cAAc;AAAA,EACd,WAAW;AAAA,EACX,eAAe;AAAA,EACf,qBAAqB;AAAA;AAAA,EAGrB,kBAAkB;AAAA,EAClB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,cAAc;AAAA;AAAA,EAGd,WAAW;AAAA,EACX,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,mBAAmB;AAAA;AAAA,EAGnB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,eAAe;AACjB;AAGO,IAAM,SAAS;AAAA,EACpB,OAAO;AAAA,EACP,WAAW;AAAA,EACX,UAAU;AAAA,EACV,SAAS;AAAA,EACT,iBAAiB;AAAA,EACjB,qBAAqB;AAAA,EACrB,OAAO;AAAA,EACP,mBAAmB;AAAA,EACnB,aAAa;AAAA,EACb,gBAAgB;AAAA,EAChB,sBAAsB;AAAA,EACtB,qBAAqB;AAAA,EACrB,oBAAoB;AAAA,EACpB,YAAY;AAAA,EACZ,aAAa;AAAA,EACb,cAAc;AAAA,EACd,oBAAoB;AAAA,EACpB,wBAAwB;AAAA,EACxB,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,MAAM;AAAA,EACN,gBAAgB;AAAA,EAChB,cAAc;AAAA,EACd,OAAO;AAAA,EACP,eAAe;AAAA,EACf,MAAM;AAAA,EACN,gBAAgB;AAAA,EAChB,mBAAmB;AAAA,EACnB,gBAAgB;AAAA,EAChB,qBAAqB;AAAA,EACrB,cAAc;AAChB;AAGO,IAAM,SAAS;AAAA;AAAA,EAEpB,IAAI;AAAA,EACJ,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,YAAY;AAAA;AAAA,EAGZ,SAAS;AAAA,EACT,aAAa;AAAA,EACb,kBAAkB;AAAA,EAClB,oBAAoB;AAAA,EACpB,qBAAqB;AAAA,EACrB,sBAAsB;AAAA,EACtB,qBAAqB;AAAA;AAAA,EAGrB,WAAW;AAAA,EACX,SAAS;AAAA,EACT,aAAa;AAAA,EACb,aAAa;AAAA;AAAA,EAGb,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,aAAa;AAAA,EACb,YAAY;AAAA,EACZ,WAAW;AACb;AAGA,OAAO,OAAO,UAAU;AACxB,OAAO,OAAO,WAAW;AACzB,OAAO,OAAO,SAAS;AACvB,OAAO,OAAO,aAAa;AAC3B,OAAO,OAAO,aAAa;AAC3B,OAAO,OAAO,YAAY;AAC1B,OAAO,OAAO,iBAAiB;AAC/B,OAAO,OAAO,aAAa;AAC3B,OAAO,OAAO,OAAO;AACrB,OAAO,OAAO,aAAa;AAC3B,OAAO,OAAO,aAAa;AAC3B,OAAO,OAAO,aAAa;AAC3B,OAAO,OAAO,WAAW;AACzB,OAAO,OAAO,WAAW;AACzB,OAAO,OAAO,MAAM;AACpB,OAAO,OAAO,MAAM;;;ACrNb,IAAM,SAAN,MAAa;AAAA,EAXpB,OAWoB;AAAA;AAAA;AAAA,EAClB,cAAc;AACZ,SAAK,SAAS;AAAA,MACZ,KAAK,oBAAI,IAAI;AAAA,MACb,MAAM,oBAAI,IAAI;AAAA,MACd,KAAK,oBAAI,IAAI;AAAA,MACb,QAAQ,oBAAI,IAAI;AAAA,MAChB,OAAO,oBAAI,IAAI;AAAA,MACf,SAAS,oBAAI,IAAI;AAAA,IACnB;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,IAAI,MAAM,SAAS;AACjB,SAAK,OAAO,IAAI,IAAI,MAAM,OAAO;AACjC,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,KAAK,MAAM,SAAS;AAClB,SAAK,OAAO,KAAK,IAAI,MAAM,OAAO;AAClC,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,IAAI,MAAM,SAAS;AACjB,SAAK,OAAO,IAAI,IAAI,MAAM,OAAO;AACjC,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,OAAO,MAAM,SAAS;AACpB,SAAK,OAAO,OAAO,IAAI,MAAM,OAAO;AACpC,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,MAAM,MAAM,SAAS;AACnB,SAAK,OAAO,MAAM,IAAI,MAAM,OAAO;AACnC,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,QAAQ,MAAM,SAAS;AACrB,SAAK,OAAO,QAAQ,IAAI,MAAM,OAAO;AACrC,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,MAAM,OAAO,SAAS,KAAK;AACzB,UAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,UAAM,SAAS,QAAQ;AACvB,UAAM,WAAW,IAAI;AAGrB,UAAM,UAAU,KAAK,OAAO,MAAM,GAAG,IAAI,QAAQ;AACjD,QAAI,SAAS;AACX,aAAO,QAAQ,KAAK,OAAO;AAAA,IAC7B;AAGA,UAAM,eAAe,KAAK,wBAAwB,QAAQ,QAAQ;AAClE,QAAI,cAAc;AAChB,YAAM,EAAE,SAAAA,UAAS,OAAO,IAAI;AAC5B,cAAQ,SAAS;AACjB,aAAOA,SAAQ,KAAK,OAAO;AAAA,IAC7B;AAGA,WAAO,aAAa;AAAA,MAClB,SAAS;AAAA,MACT,OAAO;AAAA,QACL,MAAM,YAAY;AAAA,QAClB,SAAS,mCAAU,MAAM,IAAI,QAAQ;AAAA,MACvC;AAAA,IACF,GAAG,YAAY,SAAS;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,wBAAwB,QAAQ,UAAU;AACxC,UAAM,SAAS,KAAK,OAAO,MAAM;AACjC,QAAI,CAAC,OAAQ,QAAO;AAEpB,eAAW,CAAC,SAAS,OAAO,KAAK,OAAO,QAAQ,GAAG;AAEjD,UAAI,CAAC,QAAQ,SAAS,GAAG,EAAG;AAE5B,YAAM,SAAS,KAAK,YAAY,SAAS,QAAQ;AACjD,UAAI,QAAQ;AACV,eAAO,EAAE,SAAS,OAAO;AAAA,MAC3B;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,YAAY,SAAS,UAAU;AAC7B,UAAM,eAAe,QAAQ,MAAM,GAAG;AACtC,UAAM,gBAAgB,SAAS,MAAM,GAAG;AAExC,QAAI,aAAa,WAAW,cAAc,QAAQ;AAChD,aAAO;AAAA,IACT;AAEA,UAAM,SAAS,CAAC;AAEhB,aAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC5C,YAAM,cAAc,aAAa,CAAC;AAClC,YAAM,eAAe,cAAc,CAAC;AAEpC,UAAI,YAAY,WAAW,GAAG,GAAG;AAE/B,cAAM,YAAY,YAAY,MAAM,CAAC;AACrC,eAAO,SAAS,IAAI;AAAA,MACtB,WAAW,gBAAgB,cAAc;AAEvC,eAAO;AAAA,MACT;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,eAAe,QAAQ;AACrB,WAAO,QAAQ,CAAC,EAAE,QAAQ,MAAM,QAAQ,MAAM;AAC5C,WAAK,OAAO,YAAY,CAAC,EAAE,MAAM,OAAO;AAAA,IAC1C,CAAC;AACD,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa;AACX,UAAM,SAAS,CAAC;AAEhB,eAAW,CAAC,QAAQ,QAAQ,KAAK,OAAO,QAAQ,KAAK,MAAM,GAAG;AAC5D,iBAAW,QAAQ,SAAS,KAAK,GAAG;AAClC,eAAO,KAAK,EAAE,QAAQ,KAAK,CAAC;AAAA,MAC9B;AAAA,IACF;AAEA,WAAO,OAAO,KAAK,CAAC,GAAG,MAAM;AAC3B,UAAI,EAAE,OAAO,EAAE,KAAM,QAAO;AAC5B,UAAI,EAAE,OAAO,EAAE,KAAM,QAAO;AAC5B,aAAO;AAAA,IACT,CAAC;AAAA,EACH;AACF;;;AChMA,eAAe,aAAa,UAAU;AACpC,QAAM,UAAU,IAAI,YAAY;AAChC,QAAM,OAAO,QAAQ,OAAO,QAAQ;AACpC,QAAM,OAAO,MAAM,OAAO,OAAO,OAAO,WAAW,IAAI;AACvD,SAAO,MAAM,KAAK,IAAI,WAAW,IAAI,CAAC,EACnC,IAAI,OAAK,EAAE,SAAS,EAAE,EAAE,SAAS,GAAG,GAAG,CAAC,EACxC,KAAK,EAAE;AACZ;AAPe;AAUf,eAAe,eAAe,UAAU,MAAM;AAC5C,QAAM,eAAe,MAAM,aAAa,QAAQ;AAChD,SAAO,iBAAiB;AAC1B;AAHe;AAMf,SAAS,uBAAuB;AAC9B,QAAM,QAAQ,IAAI,WAAW,EAAE;AAC/B,SAAO,gBAAgB,KAAK;AAC5B,SAAO,MAAM,KAAK,OAAO,UAAQ,KAAK,SAAS,EAAE,EAAE,SAAS,GAAG,GAAG,CAAC,EAAE,KAAK,EAAE;AAC9E;AAJS;AAOT,SAAS,gBAAgB,SAAS;AAChC,QAAM,aAAa,QAAQ,QAAQ,IAAI,eAAe;AACtD,MAAI,cAAc,WAAW,WAAW,SAAS,GAAG;AAClD,WAAO,WAAW,UAAU,CAAC;AAAA,EAC/B;AAGA,QAAM,eAAe,QAAQ,QAAQ,IAAI,QAAQ;AACjD,MAAI,cAAc;AAChB,UAAM,QAAQ,aAAa,MAAM,uBAAuB;AACxD,QAAI,OAAO;AACT,aAAO,MAAM,CAAC;AAAA,IAChB;AAAA,EACF;AAEA,SAAO;AACT;AAhBS;AAmBT,eAAe,cAAc,IAAI,cAAc;AAC7C,MAAI,CAAC,cAAc;AACjB,WAAO;AAAA,EACT;AAEA,QAAM,SAAS,MAAM,GAAG,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAY/B,EAAE,KAAK,YAAY,EAAE,MAAM;AAE5B,SAAO;AACT;AApBe;AAuBf,eAAe,cAAc,IAAI,QAAQ;AACvC,QAAM,eAAe,qBAAqB;AAC1C,QAAM,YAAY,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,GAAI;AAE/D,QAAM,GAAG,QAAQ;AAAA;AAAA;AAAA,GAGhB,EAAE,KAAK,cAAc,QAAQ,UAAU,YAAY,CAAC,EAAE,IAAI;AAE3D,SAAO;AACT;AAVe;AAaf,eAAe,cAAc,IAAI,cAAc;AAC7C,QAAM,GAAG,QAAQ;AAAA;AAAA,GAEhB,EAAE,KAAK,YAAY,EAAE,IAAI;AAC5B;AAJe;AAqBf,eAAe,YAAY,IAAI,SAAS;AACtC,QAAM,eAAe,gBAAgB,OAAO;AAC5C,QAAM,OAAO,MAAM,cAAc,IAAI,YAAY;AAEjD,MAAI,CAAC,MAAM;AACT,WAAO,EAAE,YAAY,OAAO,MAAM,MAAM,OAAO,mDAAW;AAAA,EAC5D;AAEA,SAAO,EAAE,YAAY,MAAM,MAAM,OAAO,KAAK;AAC/C;AATe;AA8Bf,eAAe,YAAY,IAAI,SAAS;AACtC,MAAI;AACF,UAAM,EAAE,UAAU,SAAS,IAAI,MAAM,QAAQ,KAAK;AAClD,QAAI,CAAC,YAAY,CAAC,UAAU;AAC1B,aAAO,aAAa,EAAE,OAAO,qEAAc,GAAG,GAAG;AAAA,IACnD;AAEA,UAAM,OAAO,MAAM,GAAG,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAY7B,EAAE,KAAK,QAAQ,EAAE,MAAM;AACxB,QAAI,CAAC,MAAM;AACT,aAAO,aAAa,EAAE,OAAO,+DAAa,GAAG,GAAG;AAAA,IAClD;AACA,UAAM,UAAU,MAAM,eAAe,UAAU,KAAK,aAAa;AACjE,QAAI,CAAC,SAAS;AACZ,aAAO,aAAa,EAAE,OAAO,+DAAa,GAAG,GAAG;AAAA,IAClD;AACA,UAAM,eAAe,MAAM,cAAc,IAAI,KAAK,EAAE;AACpD,WAAO,aAAa;AAAA,MAClB,SAAS;AAAA,MACT,eAAe;AAAA,MACf,MAAM;AAAA,QACJ,IAAI,KAAK;AAAA,QACT,UAAU,KAAK;AAAA,QACf,MAAM,KAAK;AAAA,QACX,eAAe,KAAK,iBAAiB,KAAK;AAAA,MAC5C;AAAA,IACF,CAAC;AAAA,EACH,SAAS,KAAK;AACZ,WAAO,aAAa,EAAE,OAAO,IAAI,QAAQ,GAAG,GAAG;AAAA,EACjD;AACF;AAzCe;AA2Cf,eAAe,aAAa,IAAI,SAAS;AACvC,MAAI;AACF,UAAM,eAAe,gBAAgB,OAAO;AAC5C,QAAI,cAAc;AAChB,YAAM,cAAc,IAAI,YAAY;AAAA,IACtC;AACA,WAAO,aAAa,EAAE,SAAS,KAAK,CAAC;AAAA,EACvC,SAAS,KAAK;AACZ,WAAO,aAAa,EAAE,OAAO,IAAI,QAAQ,GAAG,GAAG;AAAA,EACjD;AACF;AAVe;AAYf,eAAe,oBAAoB,IAAI,SAAS;AAC9C,MAAI;AACF,UAAM,eAAe,gBAAgB,OAAO;AAC5C,UAAM,OAAO,MAAM,cAAc,IAAI,YAAY;AACjD,QAAI,CAAC,MAAM;AACT,aAAO,aAAa,EAAE,OAAO,iCAAQ,GAAG,GAAG;AAAA,IAC7C;AACA,WAAO,aAAa;AAAA,MAClB,MAAM;AAAA,QACJ,IAAI,KAAK;AAAA,QACT,UAAU,KAAK;AAAA,QACf,MAAM,KAAK;AAAA,QACX,eAAe,KAAK;AAAA,MACtB;AAAA,IACF,CAAC;AAAA,EACH,SAAS,KAAK;AACZ,WAAO,aAAa,EAAE,OAAO,IAAI,QAAQ,GAAG,GAAG;AAAA,EACjD;AACF;AAlBe;AAoBf,eAAe,qBAAqB,IAAI,SAAS;AAC/C,MAAI;AACF,UAAM,OAAO,MAAM,YAAY,IAAI,OAAO;AAC1C,QAAI,CAAC,KAAK,YAAY;AACpB,aAAO,aAAa,EAAE,OAAO,KAAK,MAAM,GAAG,GAAG;AAAA,IAChD;AACA,UAAM,OAAO,MAAM,QAAQ,KAAK;AAChC,UAAM,cAAc,KAAK,gBAAgB,KAAK;AAC9C,UAAM,cAAc,KAAK,gBAAgB,KAAK;AAC9C,QAAI,CAAC,eAAe,CAAC,aAAa;AAChC,aAAO,aAAa,EAAE,OAAO,qEAAc,GAAG,GAAG;AAAA,IACnD;AACA,QAAI,YAAY,SAAS,GAAG;AAC1B,aAAO,aAAa,EAAE,OAAO,gEAAc,GAAG,GAAG;AAAA,IACnD;AACA,UAAM,OAAO,MAAM,GAAG,QAAQ;AAAA;AAAA,KAE7B,EAAE,KAAK,KAAK,KAAK,EAAE,EAAE,MAAM;AAC5B,QAAI,CAAC,MAAM;AACT,aAAO,aAAa,EAAE,OAAO,uCAAS,GAAG,GAAG;AAAA,IAC9C;AACA,UAAM,UAAU,MAAM,eAAe,aAAa,KAAK,aAAa;AACpE,QAAI,CAAC,SAAS;AACZ,aAAO,aAAa,EAAE,OAAO,iCAAQ,GAAG,GAAG;AAAA,IAC7C;AACA,UAAM,UAAU,MAAM,aAAa,WAAW;AAC9C,UAAM,GAAG,QAAQ;AAAA;AAAA,KAEhB,EAAE,KAAK,SAAS,KAAK,KAAK,EAAE,EAAE,IAAI;AACnC,WAAO,aAAa,EAAE,SAAS,MAAM,SAAS,6CAAU,CAAC;AAAA,EAC3D,SAAS,KAAK;AACZ,WAAO,aAAa,EAAE,OAAO,IAAI,WAAW,uCAAS,GAAG,GAAG;AAAA,EAC7D;AACF;AAjCe;;;ACrMR,SAAS,SAAS,SAAS;AAChC,SAAO,OAAO,KAAK,YAAY;AAE7B,UAAM,OAAO,MAAM,cAAc,IAAI,IAAI,OAAO;AAEhD,QAAI,CAAC,QAAQ,CAAC,KAAK,MAAM;AACvB,aAAO,aAAa;AAAA,QAClB,SAAS;AAAA,QACT,OAAO;AAAA,UACL,MAAM,YAAY;AAAA,UAClB,SAAS;AAAA,QACX;AAAA,MACF,GAAG,YAAY,YAAY;AAAA,IAC7B;AAGA,YAAQ,OAAO;AACf,YAAQ,OAAO,KAAK;AAGpB,WAAO,QAAQ,KAAK,OAAO;AAAA,EAC7B;AACF;AAtBgB;AA6BT,SAAS,UAAU,SAAS;AACjC,SAAO,SAAS,OAAO,KAAK,YAAY;AAEtC,QAAI,QAAQ,KAAK,SAAS,SAAS;AACjC,aAAO,aAAa;AAAA,QAClB,SAAS;AAAA,QACT,OAAO;AAAA,UACL,MAAM,YAAY;AAAA,UAClB,SAAS;AAAA,QACX;AAAA,MACF,GAAG,YAAY,SAAS;AAAA,IAC1B;AAEA,WAAO,QAAQ,KAAK,OAAO;AAAA,EAC7B,CAAC;AACH;AAfgB;;;AC9BT,SAAS,iBAAiB,SAAS;AACxC,SAAO,OAAO,KAAK,YAAY;AAC7B,QAAI;AACF,aAAO,MAAM,QAAQ,KAAK,OAAO;AAAA,IACnC,SAAS,OAAO;AACd,aAAO,YAAY,OAAO,OAAO;AAAA,IACnC;AAAA,EACF;AACF;AARgB;AAgBhB,SAAS,YAAY,OAAO,SAAS;AAEnC,UAAQ,MAAM,WAAW;AAAA,IACvB,SAAS,MAAM;AAAA,IACf,OAAO,MAAM;AAAA,IACb,KAAK,QAAQ;AAAA,IACb,QAAQ,QAAQ;AAAA,IAChB,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,EACpC,CAAC;AAGD,MAAI,iBAAiB,iBAAiB;AACpC,WAAO,aAAa;AAAA,MAClB,SAAS;AAAA,MACT,OAAO;AAAA,QACL,MAAM,YAAY;AAAA,QAClB,SAAS,MAAM;AAAA,QACf,SAAS,MAAM;AAAA,MACjB;AAAA,IACF,GAAG,YAAY,WAAW;AAAA,EAC5B;AAEA,MAAI,iBAAiB,qBAAqB;AACxC,WAAO,aAAa;AAAA,MAClB,SAAS;AAAA,MACT,OAAO;AAAA,QACL,MAAM,YAAY;AAAA,QAClB,SAAS,MAAM;AAAA,MACjB;AAAA,IACF,GAAG,YAAY,YAAY;AAAA,EAC7B;AAEA,MAAI,iBAAiB,gBAAgB;AACnC,WAAO,aAAa;AAAA,MAClB,SAAS;AAAA,MACT,OAAO;AAAA,QACL,MAAM,YAAY;AAAA,QAClB,SAAS,MAAM;AAAA,MACjB;AAAA,IACF,GAAG,YAAY,SAAS;AAAA,EAC1B;AAEA,MAAI,iBAAiB,eAAe;AAClC,WAAO,aAAa;AAAA,MAClB,SAAS;AAAA,MACT,OAAO;AAAA,QACL,MAAM,YAAY;AAAA,QAClB,SAAS,MAAM;AAAA,MACjB;AAAA,IACF,GAAG,YAAY,SAAS;AAAA,EAC1B;AAEA,MAAI,iBAAiB,eAAe;AAClC,WAAO,aAAa;AAAA,MAClB,SAAS;AAAA,MACT,OAAO;AAAA,QACL,MAAM,YAAY;AAAA,QAClB,SAAS,MAAM;AAAA,MACjB;AAAA,IACF,GAAG,YAAY,QAAQ;AAAA,EACzB;AAEA,MAAI,iBAAiB,eAAe;AAClC,WAAO,aAAa;AAAA,MAClB,SAAS;AAAA,MACT,OAAO;AAAA,QACL,MAAM,MAAM,QAAQ,YAAY;AAAA,QAChC,SAAS,MAAM;AAAA,MACjB;AAAA,IACF,GAAG,YAAY,WAAW;AAAA,EAC5B;AAGA,SAAO,aAAa;AAAA,IAClB,SAAS;AAAA,IACT,OAAO;AAAA,MACL,MAAM,YAAY;AAAA,MAClB,SAAS;AAAA,IACX;AAAA,EACF,GAAG,YAAY,cAAc;AAC/B;AAhFS;AAqFF,IAAM,kBAAN,cAA8B,MAAM;AAAA,EAlH3C,OAkH2C;AAAA;AAAA;AAAA,EACzC,YAAY,SAAS,SAAS,CAAC,GAAG;AAChC,UAAM,OAAO;AACb,SAAK,OAAO;AACZ,SAAK,SAAS;AAAA,EAChB;AACF;AAEO,IAAM,sBAAN,cAAkC,MAAM;AAAA,EA1H/C,OA0H+C;AAAA;AAAA;AAAA,EAC7C,YAAY,UAAU,4BAAQ;AAC5B,UAAM,OAAO;AACb,SAAK,OAAO;AAAA,EACd;AACF;AAEO,IAAM,iBAAN,cAA6B,MAAM;AAAA,EAjI1C,OAiI0C;AAAA;AAAA;AAAA,EACxC,YAAY,UAAU,4BAAQ;AAC5B,UAAM,OAAO;AACb,SAAK,OAAO;AAAA,EACd;AACF;AAEO,IAAM,gBAAN,cAA4B,MAAM;AAAA,EAxIzC,OAwIyC;AAAA;AAAA;AAAA,EACvC,YAAY,UAAU,kCAAS;AAC7B,UAAM,OAAO;AACb,SAAK,OAAO;AAAA,EACd;AACF;AAEO,IAAM,gBAAN,cAA4B,MAAM;AAAA,EA/IzC,OA+IyC;AAAA;AAAA;AAAA,EACvC,YAAY,UAAU,4BAAQ;AAC5B,UAAM,OAAO;AACb,SAAK,OAAO;AAAA,EACd;AACF;AAEO,IAAM,gBAAN,cAA4B,MAAM;AAAA,EAtJzC,OAsJyC;AAAA;AAAA;AAAA,EACvC,YAAY,SAAS,OAAO,YAAY,gBAAgB;AACtD,UAAM,OAAO;AACb,SAAK,OAAO;AACZ,SAAK,OAAO;AAAA,EACd;AACF;;;ACrJA,SAAS,MAAM,SAAS;AACtB,SAAO,OAAO,KAAK,YAAY,QAAQ,IAAI,IAAI,OAAO;AACxD;AAFS;AAIF,SAAS,mBAAmB,QAAQ;AACzC,SAAO,KAAK,cAAc,iBAAiB,MAAM,WAAW,CAAC,CAAC;AAC9D,SAAO,KAAK,eAAe,iBAAiB,SAAS,MAAM,YAAY,CAAC,CAAC,CAAC;AAC1E,SAAO,IAAI,eAAe,iBAAiB,SAAS,MAAM,mBAAmB,CAAC,CAAC,CAAC;AAChF,SAAO,KAAK,wBAAwB,iBAAiB,SAAS,MAAM,oBAAoB,CAAC,CAAC,CAAC;AAC7F;AALgB;;;ACGT,IAAM,iBAAN,MAAqB;AAAA,EAd5B,OAc4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM1B,YAAY,IAAI,WAAW;AACzB,QAAI,CAAC,IAAI;AACP,YAAM,IAAI,MAAM,+BAA+B;AAAA,IACjD;AACA,QAAI,CAAC,WAAW;AACd,YAAM,IAAI,MAAM,wBAAwB;AAAA,IAC1C;AAEA,SAAK,KAAK;AACV,SAAK,YAAY;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,MAAM,QAAQ,UAAU,CAAC,GAAG,UAAU,CAAC,GAAG;AACxC,UAAM,EAAE,UAAU,cAAc,QAAQ,QAAQ,OAAO,OAAO,IAAI;AAElE,QAAI,QAAQ,iBAAiB,KAAK,SAAS;AAC3C,UAAM,SAAS,CAAC;AAGhB,UAAM,aAAa,CAAC;AACpB,eAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,OAAO,GAAG;AAClD,UAAI,UAAU,UAAa,UAAU,MAAM;AACzC,mBAAW,KAAK,GAAG,GAAG,MAAM;AAC5B,eAAO,KAAK,KAAK;AAAA,MACnB;AAAA,IACF;AAEA,QAAI,WAAW,SAAS,GAAG;AACzB,eAAS,UAAU,WAAW,KAAK,OAAO,CAAC;AAAA,IAC7C;AAGA,aAAS,aAAa,OAAO,IAAI,KAAK;AAGtC,QAAI,OAAO;AACT,eAAS;AACT,aAAO,KAAK,KAAK;AAEjB,UAAI,QAAQ;AACV,iBAAS;AACT,eAAO,KAAK,MAAM;AAAA,MACpB;AAAA,IACF;AAEA,UAAM,SAAS,MAAM,KAAK,GAAG,QAAQ,KAAK,EAAE,KAAK,GAAG,MAAM,EAAE,IAAI;AAChE,WAAO,OAAO,WAAW,CAAC;AAAA,EAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,MAAM,SAAS,IAAI;AACjB,UAAM,SAAS,MAAM,KAAK,GACvB,QAAQ,iBAAiB,KAAK,SAAS,eAAe,EACtD,KAAK,EAAE,EACP,MAAM;AAET,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,MAAM,QAAQ,UAAU,CAAC,GAAG;AAC1B,UAAM,aAAa,CAAC;AACpB,UAAM,SAAS,CAAC;AAEhB,eAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,OAAO,GAAG;AAClD,UAAI,UAAU,UAAa,UAAU,MAAM;AACzC,mBAAW,KAAK,GAAG,GAAG,MAAM;AAC5B,eAAO,KAAK,KAAK;AAAA,MACnB;AAAA,IACF;AAEA,QAAI,WAAW,WAAW,GAAG;AAC3B,YAAM,IAAI,MAAM,2CAA2C;AAAA,IAC7D;AAEA,UAAM,QAAQ,iBAAiB,KAAK,SAAS,UAAU,WAAW,KAAK,OAAO,CAAC;AAC/E,UAAM,SAAS,MAAM,KAAK,GAAG,QAAQ,KAAK,EAAE,KAAK,GAAG,MAAM,EAAE,MAAM;AAElE,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,MAAM,OAAO,MAAM;AACjB,QAAI,CAAC,QAAQ,OAAO,KAAK,IAAI,EAAE,WAAW,GAAG;AAC3C,YAAM,IAAI,MAAM,uCAAuC;AAAA,IACzD;AAEA,UAAM,OAAO,OAAO,KAAK,IAAI;AAC7B,UAAM,SAAS,OAAO,OAAO,IAAI;AACjC,UAAM,eAAe,KAAK,IAAI,MAAM,GAAG,EAAE,KAAK,IAAI;AAElD,UAAM,QAAQ;AAAA,oBACE,KAAK,SAAS,KAAK,KAAK,KAAK,IAAI,CAAC;AAAA,gBACtC,YAAY;AAAA;AAGxB,UAAM,SAAS,MAAM,KAAK,GAAG,QAAQ,KAAK,EAAE,KAAK,GAAG,MAAM,EAAE,IAAI;AAEhE,QAAI,CAAC,OAAO,SAAS;AACnB,YAAM,IAAI,MAAM,yBAAyB;AAAA,IAC3C;AAEA,WAAO,OAAO,KAAK;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,MAAM,OAAO,IAAI,MAAM;AACrB,QAAI,CAAC,QAAQ,OAAO,KAAK,IAAI,EAAE,WAAW,GAAG;AAC3C,YAAM,IAAI,MAAM,uCAAuC;AAAA,IACzD;AAGA,SAAK,cAAa,oBAAI,KAAK,GAAE,YAAY;AAEzC,UAAM,OAAO,OAAO,KAAK,IAAI,EAAE,IAAI,SAAO,GAAG,GAAG,MAAM,EAAE,KAAK,IAAI;AACjE,UAAM,SAAS,CAAC,GAAG,OAAO,OAAO,IAAI,GAAG,EAAE;AAE1C,UAAM,QAAQ;AAAA,eACH,KAAK,SAAS;AAAA,YACjB,IAAI;AAAA;AAAA;AAIZ,UAAM,SAAS,MAAM,KAAK,GAAG,QAAQ,KAAK,EAAE,KAAK,GAAG,MAAM,EAAE,IAAI;AAEhE,QAAI,CAAC,OAAO,SAAS;AACnB,YAAM,IAAI,MAAM,yBAAyB;AAAA,IAC3C;AAEA,WAAO,KAAK,SAAS,EAAE;AAAA,EACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,MAAM,OAAO,IAAI;AACf,UAAM,QAAQ,eAAe,KAAK,SAAS;AAC3C,UAAM,SAAS,MAAM,KAAK,GAAG,QAAQ,KAAK,EAAE,KAAK,EAAE,EAAE,IAAI;AAEzD,WAAO,OAAO;AAAA,EAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,MAAM,WAAW,IAAI;AACnB,WAAO,KAAK,OAAO,IAAI;AAAA,MACrB,YAAY;AAAA,MACZ,aAAY,oBAAI,KAAK,GAAE,YAAY;AAAA,IACrC,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,MAAM,MAAM,UAAU,CAAC,GAAG;AACxB,QAAI,QAAQ,iCAAiC,KAAK,SAAS;AAC3D,UAAM,SAAS,CAAC;AAEhB,UAAM,aAAa,CAAC;AACpB,eAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,OAAO,GAAG;AAClD,UAAI,UAAU,UAAa,UAAU,MAAM;AACzC,mBAAW,KAAK,GAAG,GAAG,MAAM;AAC5B,eAAO,KAAK,KAAK;AAAA,MACnB;AAAA,IACF;AAEA,QAAI,WAAW,SAAS,GAAG;AACzB,eAAS,UAAU,WAAW,KAAK,OAAO,CAAC;AAAA,IAC7C;AAEA,UAAM,SAAS,MAAM,KAAK,GAAG,QAAQ,KAAK,EAAE,KAAK,GAAG,MAAM,EAAE,MAAM;AAClE,WAAO,QAAQ,SAAS;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,MAAM,OAAO,IAAI;AACf,UAAM,SAAS,MAAM,KAAK,GACvB,QAAQ,iBAAiB,KAAK,SAAS,uBAAuB,EAC9D,KAAK,EAAE,EACP,MAAM;AAET,WAAO,CAAC,CAAC;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,MAAM,YAAY,SAAS;AACzB,QAAI,CAAC,MAAM,QAAQ,OAAO,KAAK,QAAQ,WAAW,GAAG;AACnD,YAAM,IAAI,MAAM,2BAA2B;AAAA,IAC7C;AAEA,UAAM,MAAM,CAAC;AAGb,eAAW,UAAU,SAAS;AAC5B,YAAM,KAAK,MAAM,KAAK,OAAO,MAAM;AACnC,UAAI,KAAK,EAAE;AAAA,IACb;AAEA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,MAAM,IAAI,OAAO,SAAS,CAAC,GAAG;AAC5B,UAAM,SAAS,MAAM,KAAK,GAAG,QAAQ,KAAK,EAAE,KAAK,GAAG,MAAM,EAAE,IAAI;AAChE,WAAO,OAAO,WAAW,CAAC;AAAA,EAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,MAAM,SAAS,OAAO,SAAS,CAAC,GAAG;AACjC,UAAM,SAAS,MAAM,KAAK,GAAG,QAAQ,KAAK,EAAE,KAAK,GAAG,MAAM,EAAE,MAAM;AAClE,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,kBAAkB,MAAM,gBAAgB;AACtC,eAAW,SAAS,gBAAgB;AAClC,UAAI,KAAK,KAAK,MAAM,UAAa,KAAK,KAAK,MAAM,QAAQ,KAAK,KAAK,MAAM,IAAI;AAC3E,cAAM,IAAI,MAAM,gBAAM,KAAK,qBAAM;AAAA,MACnC;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,eAAe,MAAM,SAAS;AAC5B,eAAW,CAAC,OAAO,YAAY,KAAK,OAAO,QAAQ,OAAO,GAAG;AAC3D,UAAI,KAAK,KAAK,MAAM,QAAW;AAC7B,cAAM,aAAa,OAAO,KAAK,KAAK;AACpC,YAAI,eAAe,cAAc;AAC/B,gBAAM,IAAI,MAAM,gBAAM,KAAK,+CAAY,YAAY,sBAAO,UAAU,EAAE;AAAA,QACxE;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;;;AC7SO,IAAM,qBAAN,cAAiC,eAAe;AAAA,EANvD,OAMuD;AAAA;AAAA;AAAA,EACrD,YAAY,IAAI;AACd,UAAM,IAAI,OAAO,SAAS;AAAA,EAC5B;AAAA,EAEA,MAAM,WAAW,MAAM;AACrB,WAAO,KAAK,QAAQ,EAAE,KAAK,CAAC;AAAA,EAC9B;AAAA,EAEA,MAAM,aAAa;AACjB,WAAO,KAAK,QAAQ,EAAE,WAAW,EAAE,GAAG,EAAE,SAAS,QAAQ,OAAO,MAAM,CAAC;AAAA,EACzE;AACF;;;ACbO,IAAM,kBAAN,MAAsB;AAAA,EAL7B,OAK6B;AAAA;AAAA;AAAA,EAC3B,YAAY,IAAI;AACd,SAAK,OAAO,IAAI,mBAAmB,EAAE;AAAA,EACvC;AAAA,EAEA,MAAM,SAAS;AACb,WAAO,KAAK,KAAK,WAAW;AAAA,EAC9B;AAAA,EAEA,MAAM,QAAQ,IAAI;AAChB,WAAO,KAAK,KAAK,SAAS,EAAE;AAAA,EAC9B;AAAA,EAEA,MAAM,OAAO,MAAM;AACjB,WAAO,KAAK,KAAK,OAAO,IAAI;AAAA,EAC9B;AAAA,EAEA,MAAM,OAAO,IAAI,MAAM;AACrB,WAAO,KAAK,KAAK,OAAO,IAAI,IAAI;AAAA,EAClC;AACF;;;ACVO,SAAS,QAAQ,MAAM,OAAO,MAAM,SAAS,YAAY,IAAI;AAClE,QAAM,WAAW;AAAA,IACf,SAAS;AAAA,IACT;AAAA,EACF;AAEA,MAAI,MAAM;AACR,aAAS,OAAO;AAAA,EAClB;AAEA,SAAO,IAAI,SAAS,KAAK,UAAU,QAAQ,GAAG;AAAA,IAC5C;AAAA,IACA,SAAS;AAAA,MACP,gBAAgB;AAAA,MAChB,GAAG;AAAA,IACL;AAAA,EACF,CAAC;AACH;AAjBgB;AAyBT,SAAS,QAAQ,MAAM,UAAU,4BAAQ;AAC9C,SAAO,QAAQ,MAAM,EAAE,QAAQ,GAAG,YAAY,OAAO;AACvD;AAFgB;AAQT,SAAS,YAAY;AAC1B,SAAO,IAAI,SAAS,MAAM;AAAA,IACxB,QAAQ,YAAY;AAAA,IACpB,SAAS;AAAA,EACX,CAAC;AACH;AALgB;AA2DT,SAAS,KAAK,MAAM;AACzB,SAAO,QAAQ,MAAM;AAAA,IACnB,OAAO,KAAK;AAAA,EACd,CAAC;AACH;AAJgB;;;ACrGhB,eAAsB,aAAa,KAAK,SAAS;AAC/C,QAAM,UAAU,IAAI,gBAAgB,IAAI,EAAE;AAC1C,QAAM,YAAY,MAAM,QAAQ,OAAO;AACvC,SAAO,KAAK,SAAS;AACvB;AAJsB;;;ACCf,SAAS,uBAAuB,QAAQ;AAC7C,SAAO,IAAI,kBAAkB,iBAAiB,SAAS,YAAY,CAAC,CAAC;AACvE;AAFgB;;;ACDT,IAAM,mBAAN,cAA+B,eAAe;AAAA,EANrD,OAMqD;AAAA;AAAA;AAAA,EACnD,YAAY,IAAI;AACd,UAAM,IAAI,OAAO,OAAO;AAAA,EAC1B;AAAA,EAEA,MAAM,iBAAiB,IAAI;AACzB,UAAM,SAAS,MAAM,KAAK,SAAS,EAAE;AACrC,QAAI,CAAC,OAAQ,QAAO;AAEpB,UAAM,WAAW,MAAM,KAAK,GAAG,QAAQ;AAAA,sBACrB,OAAO,eAAe;AAAA;AAAA;AAAA,KAGvC,EAAE,KAAK,EAAE,EAAE,IAAI;AAEhB,WAAO;AAAA,MACL,GAAG;AAAA,MACH,UAAU,SAAS,WAAW,CAAC;AAAA,IACjC;AAAA,EACF;AACF;;;ACrBO,IAAM,gBAAN,MAAoB;AAAA,EAL3B,OAK2B;AAAA;AAAA;AAAA,EACzB,YAAY,IAAI;AACd,SAAK,OAAO,IAAI,iBAAiB,EAAE;AAAA,EACrC;AAAA,EAEA,MAAM,SAAS;AACb,WAAO,KAAK,KAAK,QAAQ,CAAC,GAAG,EAAE,SAAS,QAAQ,OAAO,MAAM,CAAC;AAAA,EAChE;AAAA,EAEA,MAAM,QAAQ,IAAI;AAChB,WAAO,KAAK,KAAK,iBAAiB,EAAE;AAAA,EACtC;AAAA,EAEA,MAAM,OAAO,MAAM;AACjB,WAAO,KAAK,KAAK,OAAO,IAAI;AAAA,EAC9B;AAAA,EAEA,MAAM,OAAO,IAAI,MAAM;AACrB,WAAO,KAAK,KAAK,OAAO,IAAI,IAAI;AAAA,EAClC;AAAA,EAEA,MAAM,OAAO,IAAI;AACf,WAAO,KAAK,KAAK,OAAO,EAAE;AAAA,EAC5B;AACF;;;ACvBO,IAAM,0BAAN,cAAsC,eAAe;AAAA,EAN5D,OAM4D;AAAA;AAAA;AAAA,EAC1D,YAAY,IAAI;AACd,UAAM,IAAI,OAAO,eAAe;AAAA,EAClC;AAAA,EAEA,MAAM,aAAa,UAAU;AAC3B,WAAO,KAAK,QAAQ,EAAE,WAAW,SAAS,CAAC;AAAA,EAC7C;AAAA,EAEA,MAAM,oBAAoB;AACxB,UAAM,QAAQ;AAAA;AAAA;AAAA;AAAA,aAIL,OAAO,eAAe;AAAA,aACtB,OAAO,OAAO;AAAA;AAAA;AAGvB,WAAO,KAAK,IAAI,KAAK;AAAA,EACvB;AACF;;;ACjBA,eAAsB,WAAW,KAAK,SAAS;AAC7C,QAAM,UAAU,IAAI,cAAc,IAAI,EAAE;AACxC,QAAM,UAAU,MAAM,QAAQ,OAAO;AACrC,SAAO,KAAK,OAAO;AACrB;AAJsB;AAMtB,eAAsB,UAAU,KAAK,SAAS;AAC5C,QAAM,KAAK,SAAS,QAAQ,OAAO,EAAE;AACrC,QAAM,UAAU,IAAI,cAAc,IAAI,EAAE;AACxC,QAAM,SAAS,MAAM,QAAQ,QAAQ,EAAE;AACvC,SAAO,QAAQ,MAAM;AACvB;AALsB;AAOtB,eAAsB,aAAa,KAAK,SAAS;AAC/C,QAAM,OAAO,MAAM,QAAQ,KAAK;AAChC,QAAM,UAAU,IAAI,cAAc,IAAI,EAAE;AACxC,QAAM,SAAS,MAAM,QAAQ,OAAO,IAAI;AACxC,SAAO,QAAQ,MAAM;AACvB;AALsB;AAOtB,eAAsB,aAAa,KAAK,SAAS;AAC/C,QAAM,KAAK,SAAS,QAAQ,OAAO,EAAE;AACrC,QAAM,OAAO,MAAM,QAAQ,KAAK;AAChC,QAAM,UAAU,IAAI,cAAc,IAAI,EAAE;AACxC,QAAM,SAAS,MAAM,QAAQ,OAAO,IAAI,IAAI;AAC5C,SAAO,QAAQ,MAAM;AACvB;AANsB;AAQtB,eAAsB,aAAa,KAAK,SAAS;AAC/C,QAAM,KAAK,SAAS,QAAQ,OAAO,EAAE;AACrC,QAAM,UAAU,IAAI,cAAc,IAAI,EAAE;AACxC,QAAM,QAAQ,OAAO,EAAE;AACvB,SAAO,UAAU;AACnB;AALsB;AAOtB,eAAsB,kBAAkB,KAAK,SAAS;AACpD,QAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,QAAM,WAAW,IAAI,aAAa,IAAI,WAAW;AAEjD,QAAM,OAAO,IAAI,wBAAwB,IAAI,EAAE;AAC/C,QAAM,WAAW,WACb,MAAM,KAAK,aAAa,SAAS,QAAQ,CAAC,IAC1C,MAAM,KAAK,kBAAkB;AAEjC,SAAO,QAAQ,QAAQ;AACzB;AAVsB;AAYtB,eAAsB,sBAAsB,KAAK,SAAS;AACxD,QAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,QAAM,WAAW,IAAI,aAAa,IAAI,WAAW;AAEjD,QAAM,OAAO,IAAI,eAAe,IAAI,IAAI,OAAO,mBAAmB;AAClE,QAAM,UAAU,WAAW,EAAE,WAAW,SAAS,QAAQ,EAAE,IAAI,CAAC;AAChE,QAAM,eAAe,MAAM,KAAK,QAAQ,SAAS,EAAE,SAAS,oBAAoB,OAAO,OAAO,CAAC;AAE/F,SAAO,QAAQ,YAAY;AAC7B;AATsB;;;ACzCf,SAAS,qBAAqB,QAAQ;AAC3C,QAAM,OAAO,wBAAC,MAAM,iBAAiB,SAAS,CAAC,CAAC,GAAnC;AACb,QAAM,QAAQ,wBAAC,MAAM,iBAAiB,UAAU,CAAC,CAAC,GAApC;AAEd,SAAO,IAAI,gBAAgB,KAAK,UAAU,CAAC;AAC3C,SAAO,IAAI,oBAAoB,KAAK,SAAS,CAAC;AAC9C,SAAO,KAAK,gBAAgB,MAAM,YAAY,CAAC;AAC/C,SAAO,IAAI,oBAAoB,MAAM,YAAY,CAAC;AAClD,SAAO,OAAO,oBAAoB,MAAM,YAAY,CAAC;AAErD,SAAO,IAAI,wBAAwB,KAAK,iBAAiB,CAAC;AAC1D,SAAO,IAAI,4BAA4B,KAAK,qBAAqB,CAAC;AACpE;AAZgB;;;ACTT,IAAM,iBAAN,cAA6B,eAAe;AAAA,EANnD,OAMmD;AAAA;AAAA;AAAA,EACjD,YAAY,IAAI;AACd,UAAM,IAAI,OAAO,KAAK;AAAA,EACxB;AAAA,EAEA,MAAM,qBAAqB,UAAU,CAAC,GAAG;AACvC,QAAI,QAAQ;AAAA;AAAA;AAAA;AAAA,aAIH,OAAO,KAAK;AAAA,kBACP,OAAO,OAAO;AAAA;AAAA;AAG5B,UAAM,SAAS,CAAC;AAEhB,QAAI,QAAQ,QAAQ;AAClB,eAAS;AACT,aAAO,KAAK,QAAQ,MAAM;AAAA,IAC5B;AAEA,QAAI,QAAQ,kBAAkB;AAC5B,eAAS;AACT,aAAO,KAAK,QAAQ,gBAAgB;AAAA,IACtC;AAEA,QAAI,QAAQ,UAAU;AACpB,eAAS;AACT,aAAO,KAAK,QAAQ,QAAQ;AAAA,IAC9B;AAEA,aAAS;AAET,WAAO,KAAK,IAAI,OAAO,MAAM;AAAA,EAC/B;AACF;;;ACpCO,IAAM,cAAN,MAAkB;AAAA,EALzB,OAKyB;AAAA;AAAA;AAAA,EACvB,YAAY,IAAI;AACd,SAAK,OAAO,IAAI,eAAe,EAAE;AAAA,EACnC;AAAA,EAEA,MAAM,OAAO,UAAU,CAAC,GAAG;AACzB,WAAO,KAAK,KAAK,qBAAqB,OAAO;AAAA,EAC/C;AAAA,EAEA,MAAM,QAAQ,IAAI;AAChB,WAAO,KAAK,KAAK,SAAS,EAAE;AAAA,EAC9B;AAAA,EAEA,MAAM,OAAO,MAAM;AACjB,QAAI,CAAC,KAAK,OAAQ,MAAK,SAAS;AAChC,QAAI,CAAC,KAAK,SAAU,MAAK,WAAW;AACpC,WAAO,KAAK,KAAK,OAAO,IAAI;AAAA,EAC9B;AAAA,EAEA,MAAM,OAAO,IAAI,MAAM;AACrB,WAAO,KAAK,KAAK,OAAO,IAAI,IAAI;AAAA,EAClC;AAAA,EAEA,MAAM,OAAO,IAAI;AACf,WAAO,KAAK,KAAK,OAAO,EAAE;AAAA,EAC5B;AACF;;;ACzBA,eAAsB,SAAS,KAAK,SAAS;AAC3C,QAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,QAAM,UAAU;AAAA,IACd,QAAQ,IAAI,aAAa,IAAI,QAAQ;AAAA,IACrC,kBAAkB,IAAI,aAAa,IAAI,kBAAkB,IAAI,SAAS,IAAI,aAAa,IAAI,kBAAkB,CAAC,IAAI;AAAA,IAClH,UAAU,IAAI,aAAa,IAAI,UAAU;AAAA,EAC3C;AAGA,SAAO,KAAK,OAAO,EAAE,QAAQ,SAAO;AAClC,QAAI,QAAQ,GAAG,MAAM,QAAQ,QAAQ,GAAG,MAAM,OAAW,QAAO,QAAQ,GAAG;AAAA,EAC7E,CAAC;AAED,QAAM,UAAU,IAAI,YAAY,IAAI,EAAE;AACtC,QAAM,QAAQ,MAAM,QAAQ,OAAO,OAAO;AAE1C,SAAO,QAAQ,EAAE,MAAM,CAAC;AAC1B;AAjBsB;AAmBtB,eAAsB,mBAAmB,KAAK,SAAS;AACrD,QAAM,UAAU,IAAI,YAAY,IAAI,EAAE;AACtC,QAAM,QAAQ,MAAM,QAAQ,OAAO,EAAE,UAAU,iBAAiB,CAAC;AACjE,SAAO,QAAQ,EAAE,MAAM,CAAC;AAC1B;AAJsB;AAMtB,eAAsB,kBAAkB,KAAK,SAAS;AACpD,QAAM,UAAU,IAAI,YAAY,IAAI,EAAE;AACtC,QAAM,QAAQ,MAAM,QAAQ,OAAO,EAAE,UAAU,YAAY,CAAC;AAC5D,SAAO,KAAK,KAAK;AACnB;AAJsB;AAMtB,eAAsB,WAAW,KAAK,SAAS;AAC7C,QAAM,OAAO,MAAM,QAAQ,KAAK;AAChC,QAAM,UAAU,IAAI,YAAY,IAAI,EAAE;AACtC,QAAM,OAAO,MAAM,QAAQ,OAAO,IAAI;AACtC,SAAO,QAAQ,IAAI;AACrB;AALsB;AAOtB,eAAsB,WAAW,KAAK,SAAS;AAC7C,QAAM,KAAK,SAAS,QAAQ,OAAO,EAAE;AACrC,QAAM,OAAO,MAAM,QAAQ,KAAK;AAChC,QAAM,UAAU,IAAI,YAAY,IAAI,EAAE;AACtC,QAAM,OAAO,MAAM,QAAQ,OAAO,IAAI,IAAI;AAC1C,SAAO,QAAQ,IAAI;AACrB;AANsB;;;AC/Bf,SAAS,mBAAmB,QAAQ;AACzC,QAAM,OAAO,wBAAC,MAAM,iBAAiB,SAAS,CAAC,CAAC,GAAnC;AAEb,SAAO,IAAI,cAAc,KAAK,QAAQ,CAAC;AACvC,SAAO,IAAI,0BAA0B,KAAK,kBAAkB,CAAC;AAC7D,SAAO,IAAI,wBAAwB,KAAK,iBAAiB,CAAC;AAC1D,SAAO,KAAK,cAAc,KAAK,UAAU,CAAC;AAC1C,SAAO,IAAI,8BAA8B,KAAK,UAAU,CAAC;AAC3D;AARgB;;;ACPT,IAAM,sBAAN,cAAkC,eAAe;AAAA,EANxD,OAMwD;AAAA;AAAA;AAAA,EACtD,YAAY,IAAI;AACd,UAAM,IAAI,OAAO,UAAU;AAAA,EAC7B;AAAA,EAEA,MAAM,wBAAwB,YAAY,MAAM,QAAQ,MAAM;AAC5D,QAAI,QAAQ;AAAA;AAAA,aAEH,OAAO,UAAU;AAAA,kBACZ,OAAO,OAAO;AAAA;AAAA;AAAA;AAI5B,UAAM,SAAS,CAAC,YAAY,KAAK,SAAS,CAAC;AAE3C,QAAI,OAAO;AACT,eAAS;AACT,aAAO,KAAK,MAAM,SAAS,EAAE,SAAS,GAAG,GAAG,CAAC;AAAA,IAC/C;AAEA,aAAS;AAET,WAAO,KAAK,IAAI,OAAO,MAAM;AAAA,EAC/B;AACF;;;ACxBO,IAAM,mBAAN,MAAuB;AAAA,EAN9B,OAM8B;AAAA;AAAA;AAAA,EAC5B,YAAY,IAAI;AACd,SAAK,OAAO,IAAI,oBAAoB,EAAE;AACtC,SAAK,UAAU,IAAI,mBAAmB,EAAE;AAAA,EAC1C;AAAA,EAEA,MAAM,cAAc,cAAc,MAAM,QAAQ,MAAM;AACpD,UAAM,WAAW,MAAM,KAAK,QAAQ,WAAW,YAAY;AAC3D,QAAI,CAAC,SAAU,QAAO,EAAE,aAAa,CAAC,GAAG,cAAc,CAAC,EAAE;AAE1D,UAAM,aAAa,MAAM,KAAK,KAAK,wBAAwB,SAAS,IAAI,MAAM,KAAK;AAEnF,WAAO;AAAA,MACL,aAAa,WAAW,OAAO,OAAK,EAAE,gBAAgB,KAAK,EAAE,iBAAiB,CAAC;AAAA,MAC/E,cAAc,CAAC;AAAA,IACjB;AAAA,EACF;AAAA,EAEA,MAAM,OAAO,MAAM;AACjB,WAAO,KAAK,KAAK,OAAO,IAAI;AAAA,EAC9B;AACF;;;ACrBO,IAAM,mBAAN,MAAuB;AAAA,EAN9B,OAM8B;AAAA;AAAA;AAAA,EAC5B,YAAY,IAAI;AACd,SAAK,KAAK;AAAA,EACZ;AAAA,EAEA,MAAM,mBAAmB;AACvB,UAAM,SAAS,MAAM,KAAK,GAAG,QAAQ;AAAA,sBACnB,OAAO,cAAc;AAAA,KACtC,EAAE,IAAI;AACP,WAAO,OAAO,WAAW,CAAC;AAAA,EAC5B;AAAA,EAEA,MAAM,gBAAgB;AACpB,UAAM,SAAS,MAAM,KAAK,GAAG,QAAQ;AAAA,sBACnB,OAAO,WAAW;AAAA,KACnC,EAAE,IAAI;AACP,WAAO,OAAO,WAAW,CAAC;AAAA,EAC5B;AAAA,EAEA,MAAM,YAAY,MAAM;AACtB,UAAM,SAAS,MAAM,KAAK,GAAG,QAAQ;AAAA,sBACnB,OAAO,QAAQ;AAAA;AAAA;AAAA,KAGhC,EAAE,KAAK,KAAK,SAAS,CAAC,EAAE,IAAI;AAC7B,WAAO,OAAO,WAAW,CAAC;AAAA,EAC5B;AAAA,EAEA,MAAM,mBAAmB,UAAU,KAAK;AACtC,UAAM,SAAS,MAAM,KAAK,GAAG,QAAQ;AAAA,gCACT,OAAO,iBAAiB;AAAA;AAAA,KAEnD,EAAE,KAAK,UAAU,GAAG,EAAE,MAAM;AAC7B,WAAO,QAAQ,eAAe;AAAA,EAChC;AACF;;;ACpCO,IAAM,gBAAN,MAAoB;AAAA,EAL3B,OAK2B;AAAA;AAAA;AAAA,EACzB,YAAY,IAAI;AACd,SAAK,OAAO,IAAI,iBAAiB,EAAE;AAAA,EACrC;AAAA,EAEA,MAAM,mBAAmB;AACvB,WAAO,KAAK,KAAK,iBAAiB;AAAA,EACpC;AAAA,EAEA,MAAM,gBAAgB;AACpB,WAAO,KAAK,KAAK,cAAc;AAAA,EACjC;AAAA,EAEA,MAAM,YAAY,MAAM;AACtB,WAAO,KAAK,KAAK,YAAY,IAAI;AAAA,EACnC;AAAA,EAEA,MAAM,eAAe;AACnB,WAAO;AAAA,MACL,EAAE,IAAI,GAAG,MAAM,4BAAQ,MAAM,EAAK;AAAA,MAClC,EAAE,IAAI,GAAG,MAAM,kCAAc,MAAM,KAAK;AAAA,MACxC,EAAE,IAAI,GAAG,MAAM,kCAAc,MAAM,KAAK;AAAA,MACxC,EAAE,IAAI,GAAG,MAAM,wCAAe,MAAM,KAAK;AAAA,MACzC,EAAE,IAAI,GAAG,MAAM,wCAAe,MAAM,KAAK;AAAA,MACzC,EAAE,IAAI,GAAG,MAAM,wCAAe,MAAM,KAAK;AAAA,MACzC,EAAE,IAAI,GAAG,MAAM,wCAAU,MAAM,EAAK;AAAA,IACtC;AAAA,EACF;AAAA,EAEA,MAAM,cAAc,cAAc,MAAM;AAEtC,WAAO;AAAA,MACL,OAAO;AAAA,QACL,EAAE,MAAM,gBAAM,aAAa,IAAI,YAAY,GAAG,iBAAiB,GAAG;AAAA,QAClE,EAAE,MAAM,gBAAM,aAAa,KAAK,YAAY,GAAG,iBAAiB,IAAI;AAAA,MACtE;AAAA,MACA,UAAU;AAAA,MACV;AAAA,IACF;AAAA,EACF;AACF;;;ACtCA,eAAsB,iBAAiB,KAAK,SAAS;AACnD,QAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,QAAM,WAAW,IAAI,aAAa,IAAI,UAAU;AAChD,QAAM,OAAO,SAAS,IAAI,aAAa,IAAI,MAAM,CAAC,MAAK,oBAAI,KAAK,GAAE,YAAY;AAC9E,QAAM,QAAQ,IAAI,aAAa,IAAI,OAAO,IAAI,SAAS,IAAI,aAAa,IAAI,OAAO,CAAC,IAAI;AAExF,QAAM,UAAU,IAAI,iBAAiB,IAAI,EAAE;AAC3C,QAAM,OAAO,MAAM,QAAQ,cAAc,UAAU,MAAM,KAAK;AAE9D,SAAO,QAAQ,IAAI;AACrB;AAVsB;AAYtB,eAAsB,cAAc,KAAK,SAAS;AAChD,QAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,QAAM,WAAW,IAAI,aAAa,IAAI,UAAU;AAChD,QAAM,OAAO,SAAS,IAAI,aAAa,IAAI,MAAM,CAAC,MAAK,oBAAI,KAAK,GAAE,YAAY;AAE9E,QAAM,UAAU,IAAI,cAAc,IAAI,EAAE;AACxC,QAAM,QAAQ,MAAM,QAAQ,cAAc,UAAU,IAAI;AAExD,SAAO,QAAQ,KAAK;AACtB;AATsB;;;ACZf,SAAS,wBAAwB,QAAQ;AAC9C,QAAM,OAAO,wBAAC,MAAM,iBAAiB,SAAS,CAAC,CAAC,GAAnC;AAEb,SAAO,IAAI,uBAAuB,KAAK,gBAAgB,CAAC;AACxD,SAAO,IAAI,oBAAoB,KAAK,aAAa,CAAC;AACpD;AALgB;;;ACDT,IAAM,qBAAN,cAAiC,eAAe;AAAA,EANvD,OAMuD;AAAA;AAAA;AAAA,EACrD,YAAY,IAAI;AACd,UAAM,IAAI,OAAO,cAAc;AAAA,EACjC;AAAA,EAEA,MAAM,WAAW,QAAQ,SAAS,MAAM;AACtC,UAAM,UAAU,EAAE,SAAS,OAAO;AAClC,QAAI,WAAW,MAAM;AACnB,cAAQ,UAAU,SAAS,IAAI;AAAA,IACjC;AACA,WAAO,KAAK,QAAQ,SAAS,EAAE,SAAS,aAAa,OAAO,OAAO,CAAC;AAAA,EACtE;AAAA,EAEA,MAAM,cAAc,QAAQ;AAC1B,UAAM,QAAQ;AAAA,eACH,OAAO,cAAc;AAAA;AAAA;AAAA;AAIhC,UAAM,SAAS,MAAM,KAAK,GAAG,QAAQ,KAAK,EACvC,MAAK,oBAAI,KAAK,GAAE,YAAY,GAAG,MAAM,EACrC,IAAI;AACP,WAAO,OAAO,MAAM,WAAW;AAAA,EACjC;AACF;;;ACzBO,IAAM,kBAAN,MAAsB;AAAA,EAL7B,OAK6B;AAAA;AAAA;AAAA,EAC3B,YAAY,IAAI;AACd,SAAK,OAAO,IAAI,mBAAmB,EAAE;AAAA,EACvC;AAAA,EAEA,MAAM,UAAU,QAAQ,SAAS,MAAM;AACrC,UAAM,YAAY,MAAM,KAAK,KAAK,WAAW,QAAQ,MAAM;AAC3D,WAAO,EAAE,UAAU;AAAA,EACrB;AAAA,EAEA,MAAM,WAAW,IAAI;AACnB,WAAO,KAAK,KAAK,OAAO,IAAI,EAAE,SAAS,GAAG,UAAS,oBAAI,KAAK,GAAE,YAAY,EAAE,CAAC;AAAA,EAC/E;AAAA,EAEA,MAAM,cAAc,QAAQ;AAC1B,WAAO,KAAK,KAAK,cAAc,MAAM;AAAA,EACvC;AACF;;;AChBA,eAAsB,aAAa,KAAK,SAAS;AAC/C,QAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,QAAM,SAAS,IAAI,aAAa,IAAI,SAAS,IAAI,SAAS,IAAI,aAAa,IAAI,SAAS,CAAC,IAAI,QAAQ,KAAK;AAC1G,QAAM,SAAS,IAAI,aAAa,IAAI,SAAS;AAE7C,QAAM,UAAU,IAAI,gBAAgB,IAAI,EAAE;AAC1C,QAAM,SAAS,MAAM,QAAQ,UAAU,QAAQ,WAAW,MAAM,QAAQ,IAAI;AAE5E,SAAO,QAAQ,MAAM;AACvB;AATsB;AAWtB,eAAsB,iBAAiB,KAAK,SAAS;AACnD,QAAM,KAAK,SAAS,QAAQ,OAAO,EAAE;AACrC,QAAM,UAAU,IAAI,gBAAgB,IAAI,EAAE;AAC1C,QAAM,QAAQ,WAAW,EAAE;AAC3B,SAAO,UAAU;AACnB;AALsB;AAOtB,eAAsB,YAAY,KAAK,SAAS;AAC9C,QAAM,SAAS,QAAQ,KAAK;AAC5B,QAAM,UAAU,IAAI,gBAAgB,IAAI,EAAE;AAC1C,QAAM,QAAQ,MAAM,QAAQ,cAAc,MAAM;AAChD,SAAO,QAAQ,EAAE,MAAM,CAAC;AAC1B;AALsB;;;ACjBf,SAAS,uBAAuB,QAAQ;AAC7C,QAAM,OAAO,wBAAC,MAAM,iBAAiB,SAAS,CAAC,CAAC,GAAnC;AAEb,SAAO,IAAI,kBAAkB,KAAK,YAAY,CAAC;AAC/C,SAAO,IAAI,2BAA2B,KAAK,gBAAgB,CAAC;AAC5D,SAAO,IAAI,gCAAgC,KAAK,WAAW,CAAC;AAC9D;AANgB;;;ACDT,IAAM,gBAAN,cAA4B,eAAe;AAAA,EANlD,OAMkD;AAAA;AAAA;AAAA,EAChD,YAAY,IAAI;AACd,UAAM,IAAI,OAAO,IAAI;AAAA,EACvB;AAAA,EAEA,MAAM,sBAAsB;AAC1B,UAAM,QAAQ;AAAA;AAAA,aAEL,OAAO,IAAI;AAAA,kBACN,OAAO,cAAc;AAAA;AAAA;AAAA;AAInC,WAAO,KAAK,IAAI,KAAK;AAAA,EACvB;AAAA,EAEA,MAAM,OAAO,SAAS;AACpB,UAAM,QAAQ;AAAA;AAAA,aAEL,OAAO,IAAI;AAAA,kBACN,OAAO,cAAc;AAAA;AAAA;AAAA;AAAA;AAKnC,UAAM,UAAU,IAAI,OAAO;AAC3B,WAAO,KAAK,IAAI,OAAO,CAAC,SAAS,OAAO,CAAC;AAAA,EAC3C;AACF;;;AC3BO,IAAM,aAAN,MAAiB;AAAA,EAPxB,OAOwB;AAAA;AAAA;AAAA,EACtB,YAAY,IAAI;AACd,SAAK,OAAO,IAAI,cAAc,EAAE;AAChC,SAAK,eAAe,IAAI,eAAe,IAAI,OAAO,cAAc;AAAA,EAClE;AAAA,EAEA,MAAM,gBAAgB;AACpB,WAAO,KAAK,aAAa,QAAQ,CAAC,GAAG,EAAE,SAAS,cAAc,OAAO,MAAM,CAAC;AAAA,EAC9E;AAAA,EAEA,MAAM,SAAS;AACb,WAAO,KAAK,KAAK,oBAAoB;AAAA,EACvC;AAAA,EAEA,MAAM,OAAO,SAAS;AACpB,WAAO,KAAK,KAAK,OAAO,OAAO;AAAA,EACjC;AAAA,EAEA,MAAM,QAAQ,IAAI;AAChB,WAAO,KAAK,KAAK,SAAS,EAAE;AAAA,EAC9B;AAAA,EAEA,MAAM,OAAO,MAAM;AACjB,QAAI,CAAC,KAAK,OAAQ,MAAK,SAAS;AAChC,WAAO,KAAK,KAAK,OAAO,IAAI;AAAA,EAC9B;AAAA,EAEA,MAAM,OAAO,IAAI,MAAM;AACrB,WAAO,KAAK,KAAK,OAAO,IAAI,IAAI;AAAA,EAClC;AACF;;;AC/BA,eAAsB,iBAAiB,KAAK,SAAS;AACnD,QAAM,UAAU,IAAI,WAAW,IAAI,EAAE;AACrC,QAAM,aAAa,MAAM,QAAQ,cAAc;AAC/C,SAAO,KAAK,UAAU;AACxB;AAJsB;AAMtB,eAAsB,QAAQ,KAAK,SAAS;AAC1C,QAAM,UAAU,IAAI,WAAW,IAAI,EAAE;AACrC,QAAM,OAAO,MAAM,QAAQ,OAAO;AAClC,SAAO,QAAQ,IAAI;AACrB;AAJsB;AAMtB,eAAsB,WAAW,KAAK,SAAS;AAC7C,QAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,QAAM,UAAU,IAAI,aAAa,IAAI,GAAG,KAAK,IAAI,aAAa,IAAI,SAAS;AAE3E,QAAM,UAAU,IAAI,WAAW,IAAI,EAAE;AACrC,QAAM,UAAU,MAAM,QAAQ,OAAO,WAAW,EAAE;AAClD,SAAO,QAAQ,OAAO;AACxB;AAPsB;AAStB,eAAsB,OAAO,KAAK,SAAS;AACzC,QAAM,KAAK,SAAS,QAAQ,OAAO,EAAE;AACrC,QAAM,UAAU,IAAI,WAAW,IAAI,EAAE;AACrC,QAAM,MAAM,MAAM,QAAQ,QAAQ,EAAE;AACpC,SAAO,QAAQ,GAAG;AACpB;AALsB;AAOtB,eAAsB,UAAU,KAAK,SAAS;AAC5C,QAAM,OAAO,MAAM,QAAQ,KAAK;AAChC,QAAM,UAAU,IAAI,WAAW,IAAI,EAAE;AACrC,QAAM,MAAM,MAAM,QAAQ,OAAO,IAAI;AACrC,SAAO,QAAQ,GAAG;AACpB;AALsB;AAOtB,eAAsB,UAAU,KAAK,SAAS;AAC5C,QAAM,KAAK,SAAS,QAAQ,OAAO,EAAE;AACrC,QAAM,OAAO,MAAM,QAAQ,KAAK;AAChC,QAAM,UAAU,IAAI,WAAW,IAAI,EAAE;AACrC,QAAM,MAAM,MAAM,QAAQ,OAAO,IAAI,IAAI;AACzC,SAAO,QAAQ,GAAG;AACpB;AANsB;;;AC3Bf,SAAS,kBAAkB,QAAQ;AACxC,QAAM,OAAO,wBAAC,MAAM,iBAAiB,SAAS,CAAC,CAAC,GAAnC;AACb,QAAM,QAAQ,wBAAC,MAAM,iBAAiB,UAAU,CAAC,CAAC,GAApC;AAEd,SAAO,IAAI,uBAAuB,KAAK,gBAAgB,CAAC;AACxD,SAAO,IAAI,aAAa,KAAK,OAAO,CAAC;AACrC,SAAO,IAAI,oBAAoB,KAAK,UAAU,CAAC;AAC/C,SAAO,IAAI,iBAAiB,KAAK,MAAM,CAAC;AACxC,SAAO,KAAK,aAAa,MAAM,SAAS,CAAC;AACzC,SAAO,IAAI,iBAAiB,MAAM,SAAS,CAAC;AAC9C;AAVgB;;;ACRhB,eAAsB,iBAAiB,KAAK,SAAS;AACnD,QAAM,UAAU,IAAI,cAAc,IAAI,EAAE;AACxC,QAAM,QAAQ,MAAM,QAAQ,iBAAiB;AAC7C,SAAO,KAAK,KAAK;AACnB;AAJsB;AAMtB,eAAsB,cAAc,KAAK,SAAS;AAChD,QAAM,UAAU,IAAI,cAAc,IAAI,EAAE;AACxC,QAAM,QAAQ,MAAM,QAAQ,cAAc;AAC1C,SAAO,KAAK,KAAK;AACnB;AAJsB;AAMtB,eAAsB,YAAY,KAAK,SAAS;AAC9C,QAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,QAAM,OAAO,SAAS,IAAI,aAAa,IAAI,MAAM,CAAC,MAAK,oBAAI,KAAK,GAAE,YAAY;AAE9E,QAAM,UAAU,IAAI,cAAc,IAAI,EAAE;AACxC,QAAM,WAAW,MAAM,QAAQ,YAAY,IAAI;AAC/C,SAAO,KAAK,QAAQ;AACtB;AAPsB;AAStB,eAAsB,aAAa,KAAK,SAAS;AAC/C,QAAM,UAAU,IAAI,cAAc,IAAI,EAAE;AACxC,QAAM,QAAQ,MAAM,QAAQ,aAAa;AACzC,SAAO,KAAK,KAAK;AACnB;AAJsB;;;ACff,SAAS,qBAAqB,QAAQ;AAC3C,QAAM,OAAO,wBAAC,MAAM,iBAAiB,SAAS,CAAC,CAAC,GAAnC;AAEb,SAAO,IAAI,uBAAuB,KAAK,gBAAgB,CAAC;AACxD,SAAO,IAAI,oBAAoB,KAAK,aAAa,CAAC;AAClD,SAAO,IAAI,iBAAiB,KAAK,WAAW,CAAC;AAC7C,SAAO,IAAI,mBAAmB,KAAK,YAAY,CAAC;AAClD;AAPgB;;;ACJhB,eAAsB,qBAAqB,KAAK,SAAS;AACvD,QAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,QAAM,eAAe,IAAI,aAAa,IAAI,UAAU;AACpD,QAAM,OAAO,SAAS,IAAI,aAAa,IAAI,MAAM,CAAC,MAAK,oBAAI,KAAK,GAAE,YAAY;AAE9E,QAAM,UAAU,IAAI,mBAAmB,IAAI,EAAE;AAC7C,QAAM,WAAW,MAAM,QAAQ,WAAW,YAAY;AAEtD,MAAI,CAAC,UAAU;AACb,WAAO,QAAQ,EAAE,aAAa,CAAC,GAAG,UAAU,cAAc,KAAK,CAAC;AAAA,EAClE;AAEA,QAAM,YAAY,IAAI,eAAe,IAAI,IAAI,OAAO,YAAY;AAChE,QAAM,cAAc,MAAM,UAAU,IAAI;AAAA;AAAA,WAE/B,OAAO,YAAY;AAAA,WACnB,OAAO,WAAW;AAAA;AAAA,KAExB,CAAC,SAAS,IAAI,KAAK,SAAS,CAAC,CAAC;AAEjC,QAAM,aAAa,CAAC;AACpB,cAAY,QAAQ,OAAK;AACvB,eAAW,EAAE,SAAS,KAAK,WAAW,EAAE,SAAS,KAAK,KAAK,EAAE;AAAA,EAC/D,CAAC;AAED,SAAO,QAAQ,EAAE,aAAa,YAAY,UAAU,cAAc,KAAK,CAAC;AAC1E;AA1BsB;AA4BtB,eAAsB,sBAAsB,KAAK,SAAS;AAExD,SAAO,QAAQ,EAAE,YAAY,CAAC,GAAG,OAAO,CAAC,EAAE,CAAC;AAC9C;AAHsB;AAKtB,eAAsB,WAAW,KAAK,SAAS;AAC7C,SAAO,QAAQ,EAAE,SAAS,iCAAQ,CAAC;AACrC;AAFsB;;;AClCf,SAAS,qBAAqB,QAAQ;AAC3C,QAAM,OAAO,wBAAC,MAAM,iBAAiB,SAAS,CAAC,CAAC,GAAnC;AAEb,SAAO,IAAI,6BAA6B,KAAK,oBAAoB,CAAC;AAClE,SAAO,IAAI,8BAA8B,KAAK,qBAAqB,CAAC;AACpE,SAAO,KAAK,4BAA4B,KAAK,UAAU,CAAC;AAC1D;AANgB;;;ACchB,SAAS,gBAAgB;AACvB,SAAO,IAAI,SAAS,MAAM;AAAA,IACxB,SAAS;AAAA,MACP,GAAG;AAAA,MACH,0BAA0B;AAAA,IAC5B;AAAA,EACF,CAAC;AACH;AAPS;AAYT,SAAS,eAAe;AACtB,QAAM,SAAS,IAAI,OAAO;AAG1B,qBAAmB,MAAM;AACzB,yBAAuB,MAAM;AAC7B,uBAAqB,MAAM;AAC3B,qBAAmB,MAAM;AACzB,0BAAwB,MAAM;AAC9B,yBAAuB,MAAM;AAC7B,oBAAkB,MAAM;AACxB,uBAAqB,MAAM;AAC3B,uBAAqB,MAAM;AAE3B,SAAO;AACT;AAfS;AAoBT,IAAO,cAAQ;AAAA,EACb,MAAM,MAAM,SAAS,KAAK,KAAK;AAE7B,QAAI,QAAQ,WAAW,WAAW;AAChC,aAAO,cAAc;AAAA,IACvB;AAEA,QAAI;AACF,YAAM,SAAS,aAAa;AAC5B,aAAO,MAAM,OAAO,OAAO,SAAS,GAAG;AAAA,IACzC,SAAS,OAAO;AACd,cAAQ,MAAM,kBAAkB,KAAK;AAErC,aAAO,IAAI,SAAS,KAAK,UAAU;AAAA,QACjC,SAAS;AAAA,QACT,OAAO;AAAA,UACL,MAAM;AAAA,UACN,SAAS;AAAA,QACX;AAAA,MACF,CAAC,GAAG;AAAA,QACF,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,gBAAgB;AAAA,UAChB,GAAG;AAAA,QACL;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF;AACF;;;AC/EA,IAAM,YAAwB,8BAAO,SAAS,KAAK,MAAM,kBAAkB;AAC1E,MAAI;AACH,WAAO,MAAM,cAAc,KAAK,SAAS,GAAG;AAAA,EAC7C,UAAE;AACD,QAAI;AACH,UAAI,QAAQ,SAAS,QAAQ,CAAC,QAAQ,UAAU;AAC/C,cAAM,SAAS,QAAQ,KAAK,UAAU;AACtC,eAAO,EAAE,MAAM,OAAO,KAAK,GAAG,MAAM;AAAA,QAAC;AAAA,MACtC;AAAA,IACD,SAAS,GAAG;AACX,cAAQ,MAAM,4CAA4C,CAAC;AAAA,IAC5D;AAAA,EACD;AACD,GAb8B;AAe9B,IAAO,6CAAQ;;;ACRf,SAAS,YAAY,GAAmB;AACvC,SAAO;AAAA,IACN,MAAM,GAAG;AAAA,IACT,SAAS,GAAG,WAAW,OAAO,CAAC;AAAA,IAC/B,OAAO,GAAG;AAAA,IACV,OAAO,GAAG,UAAU,SAAY,SAAY,YAAY,EAAE,KAAK;AAAA,EAChE;AACD;AAPS;AAUT,IAAM,YAAwB,8BAAO,SAAS,KAAK,MAAM,kBAAkB;AAC1E,MAAI;AACH,WAAO,MAAM,cAAc,KAAK,SAAS,GAAG;AAAA,EAC7C,SAAS,GAAQ;AAChB,UAAM,QAAQ,YAAY,CAAC;AAC3B,WAAO,SAAS,KAAK,OAAO;AAAA,MAC3B,QAAQ;AAAA,MACR,SAAS,EAAE,+BAA+B,OAAO;AAAA,IAClD,CAAC;AAAA,EACF;AACD,GAV8B;AAY9B,IAAO,2CAAQ;;;ACzBJ,IAAM,mCAAmC;AAAA,EAE9B;AAAA,EAAyB;AAC3C;AACA,IAAO,sCAAQ;;;ACcnB,IAAM,wBAAsC,CAAC;AAKtC,SAAS,uBAAuB,MAAqC;AAC3E,wBAAsB,KAAK,GAAG,KAAK,KAAK,CAAC;AAC1C;AAFgB;AAShB,SAAS,uBACR,SACA,KACA,KACA,UACA,iBACsB;AACtB,QAAM,CAAC,MAAM,GAAG,IAAI,IAAI;AACxB,QAAM,gBAAmC;AAAA,IACxC;AAAA,IACA,KAAK,YAAY,QAAQ;AACxB,aAAO,uBAAuB,YAAY,QAAQ,KAAK,UAAU,IAAI;AAAA,IACtE;AAAA,EACD;AACA,SAAO,KAAK,SAAS,KAAK,KAAK,aAAa;AAC7C;AAfS;AAiBF,SAAS,kBACf,SACA,KACA,KACA,UACA,iBACsB;AACtB,SAAO,uBAAuB,SAAS,KAAK,KAAK,UAAU;AAAA,IAC1D,GAAG;AAAA,IACH;AAAA,EACD,CAAC;AACF;AAXgB;;;AC3ChB,IAAM,iCAAN,MAAM,gCAA8D;AAAA,EAGnE,YACU,eACA,MACT,SACC;AAHQ;AACA;AAGT,SAAK,WAAW;AAAA,EACjB;AAAA,EArBD,OAYoE;AAAA;AAAA;AAAA,EAC1D;AAAA,EAUT,UAAU;AACT,QAAI,EAAE,gBAAgB,kCAAiC;AACtD,YAAM,IAAI,UAAU,oBAAoB;AAAA,IACzC;AAEA,SAAK,SAAS;AAAA,EACf;AACD;AAEA,SAAS,oBAAoB,QAA0C;AAEtE,MACC,qCAAqC,UACrC,iCAAiC,WAAW,GAC3C;AACD,WAAO;AAAA,EACR;AAEA,aAAW,cAAc,kCAAkC;AAC1D,wBAAoB,UAAU;AAAA,EAC/B;AAEA,QAAM,kBAA+C,gCACpD,SACA,KACA,KACC;AACD,QAAI,OAAO,UAAU,QAAW;AAC/B,YAAM,IAAI,MAAM,6CAA6C;AAAA,IAC9D;AACA,WAAO,OAAO,MAAM,SAAS,KAAK,GAAG;AAAA,EACtC,GATqD;AAWrD,SAAO;AAAA,IACN,GAAG;AAAA,IACH,MAAM,SAAS,KAAK,KAAK;AACxB,YAAM,aAAyB,gCAAU,MAAM,MAAM;AACpD,YAAI,SAAS,eAAe,OAAO,cAAc,QAAW;AAC3D,gBAAM,aAAa,IAAI;AAAA,YACtB,KAAK,IAAI;AAAA,YACT,KAAK,QAAQ;AAAA,YACb,MAAM;AAAA,YAAC;AAAA,UACR;AACA,iBAAO,OAAO,UAAU,YAAY,KAAK,GAAG;AAAA,QAC7C;AAAA,MACD,GAT+B;AAU/B,aAAO,kBAAkB,SAAS,KAAK,KAAK,YAAY,eAAe;AAAA,IACxE;AAAA,EACD;AACD;AAxCS;AA0CT,SAAS,qBACR,OAC8B;AAE9B,MACC,qCAAqC,UACrC,iCAAiC,WAAW,GAC3C;AACD,WAAO;AAAA,EACR;AAEA,aAAW,cAAc,kCAAkC;AAC1D,wBAAoB,UAAU;AAAA,EAC/B;AAGA,SAAO,cAAc,MAAM;AAAA,IAC1B,mBAAyE,wBACxE,SACA,KACA,QACI;AACJ,WAAK,MAAM;AACX,WAAK,MAAM;AACX,UAAI,MAAM,UAAU,QAAW;AAC9B,cAAM,IAAI,MAAM,sDAAsD;AAAA,MACvE;AACA,aAAO,MAAM,MAAM,OAAO;AAAA,IAC3B,GAXyE;AAAA,IAazE,cAA0B,wBAAC,MAAM,SAAS;AACzC,UAAI,SAAS,eAAe,MAAM,cAAc,QAAW;AAC1D,cAAM,aAAa,IAAI;AAAA,UACtB,KAAK,IAAI;AAAA,UACT,KAAK,QAAQ;AAAA,UACb,MAAM;AAAA,UAAC;AAAA,QACR;AACA,eAAO,MAAM,UAAU,UAAU;AAAA,MAClC;AAAA,IACD,GAT0B;AAAA,IAW1B,MAAM,SAAwD;AAC7D,aAAO;AAAA,QACN;AAAA,QACA,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,MACN;AAAA,IACD;AAAA,EACD;AACD;AAnDS;AAqDT,IAAI;AACJ,IAAI,OAAO,wCAAU,UAAU;AAC9B,kBAAgB,oBAAoB,mCAAK;AAC1C,WAAW,OAAO,wCAAU,YAAY;AACvC,kBAAgB,qBAAqB,mCAAK;AAC3C;AACA,IAAO,kCAAQ;",
  "names": ["handler"]
}
