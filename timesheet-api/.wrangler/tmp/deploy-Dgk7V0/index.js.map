{
  "version": 3,
  "sources": ["../../../src/utils.js", "../../../src/config/constants.js", "../../../src/routes/router.js", "../../../src/auth.js", "../../../src/middleware/auth.middleware.js", "../../../src/middleware/error.middleware.js", "../../../src/routes/auth.routes.js", "../../../src/repositories/BaseRepository.js", "../../../src/repositories/ClientRepository.js", "../../../src/utils/validation.util.js", "../../../src/services/ClientService.js", "../../../src/utils/response.util.js", "../../../src/handlers/clients.handler.js", "../../../src/routes/clients.routes.js", "../../../src/repositories/TaskRepository.js", "../../../src/services/TaskService.js", "../../../src/handlers/tasks.handler.js", "../../../src/routes/tasks.routes.js", "../../../src/repositories/EmployeeRepository.js", "../../../src/services/EmployeeService.js", "../../../src/handlers/employees.handler.js", "../../../src/routes/employees.routes.js", "../../../src/repositories/ReportRepository.js", "../../../src/services/ReportService.js", "../../../src/handlers/reports.handler.js", "../../../src/routes/reports.routes.js", "../../../src/repositories/TimesheetRepository.js", "../../../src/services/TimesheetService.js", "../../../src/handlers/timesheets.handler.js", "../../../src/routes/timesheets.routes.js", "../../../src/repositories/ReminderRepository.js", "../../../src/services/ReminderService.js", "../../../src/handlers/reminders.handler.js", "../../../src/routes/reminders.routes.js", "../../../src/repositories/SopRepository.js", "../../../src/services/SopService.js", "../../../src/handlers/sops.handler.js", "../../../src/routes/sops.routes.js", "../../../src/services/SystemConfigService.js", "../../../src/handlers/config.handler.js", "../../../src/routes/config.routes.js", "../../../src/handlers/system.handler.js", "../../../src/routes/system.routes.js", "../../../src/index.js"],
  "sourceRoot": "C:\\Users\\miama\\Desktop\\horgoscpa\\timesheet-api\\.wrangler\\tmp\\deploy-Dgk7V0",
  "sourcesContent": ["// ================================================================\r\n// \u5171\u7528\u5DE5\u5177\u51FD\u6578\r\n// ================================================================\r\n\r\n// CORS Headers\r\nexport const corsHeaders = {\r\n  \"Access-Control-Allow-Origin\": \"*\",\r\n  \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, OPTIONS\",\r\n  \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\",\r\n};\r\n\r\n// \u7D71\u4E00\u7684 JSON \u56DE\u61C9\u51FD\u6578\r\nexport function jsonResponse(data, status = 200) {\r\n  return new Response(JSON.stringify(data), {\r\n    status,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      ...corsHeaders,\r\n    },\r\n  });\r\n}\r\n", "/**\r\n * \u5F8C\u7AEF\u5E38\u91CF\u5B9A\u7FA9\r\n * \u96C6\u4E2D\u7BA1\u7406\u6240\u6709\u5E38\u91CF\uFF0C\u78BA\u4FDD\u524D\u5F8C\u7AEF\u4E00\u81F4\r\n */\r\n\r\n// \u7528\u6236\u89D2\u8272\r\nexport const USER_ROLES = {\r\n  ADMIN: 'admin',\r\n  EMPLOYEE: 'employee'\r\n};\r\n\r\n// \u4EFB\u52D9\u72C0\u614B\r\nexport const TASK_STATUS = {\r\n  PENDING: 'pending',\r\n  IN_PROGRESS: 'in_progress',\r\n  ON_HOLD: 'on_hold',\r\n  COMPLETED: 'completed',\r\n  CANCELLED: 'cancelled'\r\n};\r\n\r\n// \u4EFB\u52D9\u985E\u578B\r\nexport const TASK_TYPE = {\r\n  TASK: 'task',\r\n  PROJECT: 'project',\r\n  RECURRING: 'recurring'\r\n};\r\n\r\n// \u4EFB\u52D9\u5206\u985E\r\nexport const TASK_CATEGORY = {\r\n  RECURRING: 'recurring',\r\n  BUSINESS: 'business',\r\n  FINANCE: 'finance',\r\n  CLIENT_SERVICE: 'client_service',\r\n  GENERAL: 'general'\r\n};\r\n\r\n// \u4EFB\u52D9\u512A\u5148\u7D1A\r\nexport const TASK_PRIORITY = {\r\n  LOW: 'low',\r\n  MEDIUM: 'medium',\r\n  HIGH: 'high'\r\n};\r\n\r\n// \u670D\u52D9\u985E\u578B\r\nexport const SERVICE_TYPE = {\r\n  ACCOUNTING: 'accounting',\r\n  VAT: 'vat',\r\n  INCOME_TAX: 'income_tax',\r\n  WITHHOLDING: 'withholding',\r\n  PREPAYMENT: 'prepayment',\r\n  DIVIDEND: 'dividend',\r\n  NHI: 'nhi',\r\n  SHAREHOLDER_TAX: 'shareholder_tax',\r\n  AUDIT: 'audit',\r\n  COMPANY_SETUP: 'company_setup'\r\n};\r\n\r\n// \u670D\u52D9\u983B\u7387\r\nexport const SERVICE_FREQUENCY = {\r\n  MONTHLY: 'monthly',\r\n  BIMONTHLY: 'bimonthly',\r\n  QUARTERLY: 'quarterly',\r\n  BIANNUAL: 'biannual',\r\n  ANNUAL: 'annual'\r\n};\r\n\r\n// \u5BA2\u6236\u72C0\u614B\r\nexport const CLIENT_STATUS = {\r\n  ACTIVE: 'active',\r\n  INACTIVE: 'inactive',\r\n  POTENTIAL: 'potential'\r\n};\r\n\r\n// \u5340\u57DF\r\nexport const REGIONS = {\r\n  TAICHUNG: '\u53F0\u4E2D',\r\n  TAIPEI: '\u53F0\u5317',\r\n  OTHER: '\u5176\u4ED6'\r\n};\r\n\r\n// \u7BC4\u672C\u985E\u578B\r\nexport const TEMPLATE_TYPE = {\r\n  GENERAL: 'general',\r\n  SERVICE_CHECKLIST: 'service_checklist'\r\n};\r\n\r\n// \u6587\u6A94\u985E\u578B\r\nexport const DOCUMENT_TYPE = {\r\n  SOP: 'sop',\r\n  DOCUMENT: 'document',\r\n  FAQ: 'faq'\r\n};\r\n\r\n// \u63D0\u9192\u985E\u578B\r\nexport const REMINDER_TYPE = {\r\n  DUE_SOON: 'due_soon',\r\n  OVERDUE: 'overdue',\r\n  ASSIGNED: 'assigned',\r\n  COMPLETED: 'completed',\r\n  CUSTOM: 'custom'\r\n};\r\n\r\n// HTTP \u72C0\u614B\u78BC\r\nexport const HTTP_STATUS = {\r\n  OK: 200,\r\n  CREATED: 201,\r\n  NO_CONTENT: 204,\r\n  BAD_REQUEST: 400,\r\n  UNAUTHORIZED: 401,\r\n  FORBIDDEN: 403,\r\n  NOT_FOUND: 404,\r\n  CONFLICT: 409,\r\n  INTERNAL_ERROR: 500\r\n};\r\n\r\n// \u932F\u8AA4\u4EE3\u78BC\r\nexport const ERROR_CODES = {\r\n  // \u8A8D\u8B49\u932F\u8AA4\r\n  UNAUTHORIZED: 'UNAUTHORIZED',\r\n  FORBIDDEN: 'FORBIDDEN',\r\n  TOKEN_EXPIRED: 'TOKEN_EXPIRED',\r\n  INVALID_CREDENTIALS: 'INVALID_CREDENTIALS',\r\n  \r\n  // \u9A57\u8B49\u932F\u8AA4\r\n  VALIDATION_ERROR: 'VALIDATION_ERROR',\r\n  REQUIRED_FIELD: 'REQUIRED_FIELD',\r\n  INVALID_FORMAT: 'INVALID_FORMAT',\r\n  INVALID_TYPE: 'INVALID_TYPE',\r\n  \r\n  // \u696D\u52D9\u932F\u8AA4\r\n  NOT_FOUND: 'NOT_FOUND',\r\n  ALREADY_EXISTS: 'ALREADY_EXISTS',\r\n  CONFLICT: 'CONFLICT',\r\n  PERMISSION_DENIED: 'PERMISSION_DENIED',\r\n  \r\n  // \u7CFB\u7D71\u932F\u8AA4\r\n  INTERNAL_ERROR: 'INTERNAL_ERROR',\r\n  DATABASE_ERROR: 'DATABASE_ERROR',\r\n  NETWORK_ERROR: 'NETWORK_ERROR'\r\n};\r\n\r\n// \u8CC7\u6599\u5EAB\u8868\u540D\uFF08\u96C6\u4E2D\u5B9A\u7FA9\uFF0C\u907F\u514D\u5B57\u7B26\u4E32\u786C\u7DE8\u78BC\uFF09\r\nexport const TABLES = {\r\n  USERS: 'users',\r\n  EMPLOYEES: 'employees',\r\n  SESSIONS: 'sessions',\r\n  CLIENTS: 'clients',\r\n  CLIENT_SERVICES: 'client_services',\r\n  CLIENT_INTERACTIONS: 'client_interactions',\r\n  TASKS: 'tasks',\r\n  MULTI_STAGE_TASKS: 'multi_stage_tasks',\r\n  TASK_STAGES: 'task_stages',\r\n  TASK_TEMPLATES: 'task_templates',\r\n  TASK_TEMPLATE_STAGES: 'task_template_stages',\r\n  TASK_GENERATION_LOG: 'task_generation_log',\r\n  TASK_EXECUTION_LOG: 'task_execution_log',\r\n  TIMESHEETS: 'timesheets',\r\n  LEAVE_TYPES: 'leave_types',\r\n  LEAVE_EVENTS: 'leave_events',\r\n  ANNUAL_LEAVE_RULES: 'annual_leave_rules',\r\n  ANNUAL_LEAVE_CARRYOVER: 'annual_leave_carryover',\r\n  OVERTIME_RATES: 'overtime_rates',\r\n  HOLIDAYS: 'holidays',\r\n  BUSINESS_TYPES: 'business_types',\r\n  SOPS: 'sops',\r\n  SOP_CATEGORIES: 'sop_categories',\r\n  SOP_VERSIONS: 'sop_versions',\r\n  POSTS: 'posts',\r\n  MEDIA_LIBRARY: 'media_library',\r\n  FAQS: 'faqs',\r\n  FAQ_CATEGORIES: 'faq_categories',\r\n  SYSTEM_PARAMETERS: 'system_parameters',\r\n  TASK_REMINDERS: 'task_reminders',\r\n  USER_WORKLOAD_STATS: 'user_workload_stats',\r\n  REPORT_CACHE: 'report_cache'\r\n};\r\n\r\n// \u6A19\u6E96\u6B04\u4F4D\u540D\uFF08\u96C6\u4E2D\u5B9A\u7FA9\uFF0C\u907F\u514D\u62FC\u5BEB\u932F\u8AA4\uFF09\r\nexport const FIELDS = {\r\n  // \u901A\u7528\u6B04\u4F4D\r\n  ID: 'id',\r\n  CREATED_AT: 'created_at',\r\n  UPDATED_AT: 'updated_at',\r\n  DELETED_AT: 'deleted_at',\r\n  \r\n  // \u7528\u6236\u76F8\u95DC\r\n  USER_ID: 'user_id',\r\n  EMPLOYEE_ID: 'employee_id',\r\n  ASSIGNED_USER_ID: 'assigned_user_id',\r\n  CREATED_BY_USER_ID: 'created_by_user_id',\r\n  APPROVED_BY_USER_ID: 'approved_by_user_id',\r\n  COMPLETED_BY_USER_ID: 'completed_by_user_id',\r\n  MODIFIED_BY_USER_ID: 'modified_by_user_id',\r\n  \r\n  // \u5176\u4ED6\u95DC\u806F\r\n  CLIENT_ID: 'client_id',\r\n  TASK_ID: 'task_id',\r\n  TEMPLATE_ID: 'template_id',\r\n  CATEGORY_ID: 'category_id',\r\n  \r\n  // \u72C0\u614B\u6B04\u4F4D\r\n  IS_ACTIVE: 'is_active',\r\n  IS_DELETED: 'is_deleted',\r\n  IS_APPROVED: 'is_approved',\r\n  IS_DEFAULT: 'is_default',\r\n  IS_LOCKED: 'is_locked'\r\n};\r\n\r\n// \u51CD\u7D50\u6240\u6709\u5E38\u91CF\r\nObject.freeze(USER_ROLES);\r\nObject.freeze(TASK_STATUS);\r\nObject.freeze(TASK_TYPE);\r\nObject.freeze(TASK_CATEGORY);\r\nObject.freeze(TASK_PRIORITY);\r\nObject.freeze(SERVICE_TYPE);\r\nObject.freeze(SERVICE_FREQUENCY);\r\nObject.freeze(CLIENT_STATUS);\r\nObject.freeze(REGIONS);\r\nObject.freeze(TEMPLATE_TYPE);\r\nObject.freeze(DOCUMENT_TYPE);\r\nObject.freeze(REMINDER_TYPE);\r\nObject.freeze(HTTP_STATUS);\r\nObject.freeze(ERROR_CODES);\r\nObject.freeze(TABLES);\r\nObject.freeze(FIELDS);\r\n\r\nexport default {\r\n  USER_ROLES,\r\n  TASK_STATUS,\r\n  TASK_TYPE,\r\n  TASK_CATEGORY,\r\n  TASK_PRIORITY,\r\n  SERVICE_TYPE,\r\n  SERVICE_FREQUENCY,\r\n  CLIENT_STATUS,\r\n  REGIONS,\r\n  TEMPLATE_TYPE,\r\n  DOCUMENT_TYPE,\r\n  REMINDER_TYPE,\r\n  HTTP_STATUS,\r\n  ERROR_CODES,\r\n  TABLES,\r\n  FIELDS\r\n};\r\n\r\n", "/**\r\n * \u8DEF\u7531\u7BA1\u7406\u5668\r\n * \u7D71\u4E00\u7BA1\u7406\u6240\u6709 API \u8DEF\u7531\r\n */\r\n\r\nimport { jsonResponse } from '../utils.js';\r\nimport { HTTP_STATUS, ERROR_CODES } from '../config/constants.js';\r\n\r\n/**\r\n * \u8DEF\u7531\u5668\u985E\r\n */\r\nexport class Router {\r\n  constructor() {\r\n    this.routes = {\r\n      GET: new Map(),\r\n      POST: new Map(),\r\n      PUT: new Map(),\r\n      DELETE: new Map(),\r\n      PATCH: new Map(),\r\n      OPTIONS: new Map()\r\n    };\r\n  }\r\n\r\n  /**\r\n   * \u8A3B\u518A GET \u8DEF\u7531\r\n   * @param {string} path - \u8DEF\u5F91\r\n   * @param {Function} handler - \u8655\u7406\u51FD\u6578\r\n   */\r\n  get(path, handler) {\r\n    this.routes.GET.set(path, handler);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * \u8A3B\u518A POST \u8DEF\u7531\r\n   * @param {string} path - \u8DEF\u5F91\r\n   * @param {Function} handler - \u8655\u7406\u51FD\u6578\r\n   */\r\n  post(path, handler) {\r\n    this.routes.POST.set(path, handler);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * \u8A3B\u518A PUT \u8DEF\u7531\r\n   * @param {string} path - \u8DEF\u5F91\r\n   * @param {Function} handler - \u8655\u7406\u51FD\u6578\r\n   */\r\n  put(path, handler) {\r\n    this.routes.PUT.set(path, handler);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * \u8A3B\u518A DELETE \u8DEF\u7531\r\n   * @param {string} path - \u8DEF\u5F91\r\n   * @param {Function} handler - \u8655\u7406\u51FD\u6578\r\n   */\r\n  delete(path, handler) {\r\n    this.routes.DELETE.set(path, handler);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * \u8A3B\u518A PATCH \u8DEF\u7531\r\n   * @param {string} path - \u8DEF\u5F91\r\n   * @param {Function} handler - \u8655\u7406\u51FD\u6578\r\n   */\r\n  patch(path, handler) {\r\n    this.routes.PATCH.set(path, handler);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * \u8A3B\u518A OPTIONS \u8DEF\u7531\r\n   * @param {string} path - \u8DEF\u5F91\r\n   * @param {Function} handler - \u8655\u7406\u51FD\u6578\r\n   */\r\n  options(path, handler) {\r\n    this.routes.OPTIONS.set(path, handler);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * \u8655\u7406\u8ACB\u6C42\r\n   * @param {Request} request - HTTP \u8ACB\u6C42\r\n   * @param {Object} env - \u74B0\u5883\u8B8A\u6578\r\n   * @returns {Promise<Response>}\r\n   */\r\n  async handle(request, env) {\r\n    const url = new URL(request.url);\r\n    const method = request.method;\r\n    const pathname = url.pathname;\r\n\r\n    // \u5617\u8A66\u7CBE\u78BA\u5339\u914D\r\n    const handler = this.routes[method]?.get(pathname);\r\n    if (handler) {\r\n      return handler(env, request);\r\n    }\r\n\r\n    // \u5617\u8A66\u53C3\u6578\u5339\u914D\uFF08\u5982 /api/clients/123\uFF09\r\n    const paramHandler = this._findParameterizedRoute(method, pathname);\r\n    if (paramHandler) {\r\n      const { handler, params } = paramHandler;\r\n      request.params = params;\r\n      return handler(env, request);\r\n    }\r\n\r\n    // \u8DEF\u7531\u4E0D\u5B58\u5728\r\n    return jsonResponse({\r\n      success: false,\r\n      error: {\r\n        code: ERROR_CODES.NOT_FOUND,\r\n        message: `\u8DEF\u7531\u4E0D\u5B58\u5728: ${method} ${pathname}`\r\n      }\r\n    }, HTTP_STATUS.NOT_FOUND);\r\n  }\r\n\r\n  /**\r\n   * \u67E5\u627E\u53C3\u6578\u5316\u8DEF\u7531\r\n   * @private\r\n   */\r\n  _findParameterizedRoute(method, pathname) {\r\n    const routes = this.routes[method];\r\n    if (!routes) return null;\r\n\r\n    for (const [pattern, handler] of routes.entries()) {\r\n      // \u6AA2\u67E5\u662F\u5426\u5305\u542B\u53C3\u6578\uFF08:id\uFF09\r\n      if (!pattern.includes(':')) continue;\r\n\r\n      const params = this._matchRoute(pattern, pathname);\r\n      if (params) {\r\n        return { handler, params };\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * \u5339\u914D\u8DEF\u7531\u4E26\u63D0\u53D6\u53C3\u6578\r\n   * @private\r\n   */\r\n  _matchRoute(pattern, pathname) {\r\n    const patternParts = pattern.split('/');\r\n    const pathnameParts = pathname.split('/');\r\n\r\n    if (patternParts.length !== pathnameParts.length) {\r\n      return null;\r\n    }\r\n\r\n    const params = {};\r\n\r\n    for (let i = 0; i < patternParts.length; i++) {\r\n      const patternPart = patternParts[i];\r\n      const pathnamePart = pathnameParts[i];\r\n\r\n      if (patternPart.startsWith(':')) {\r\n        // \u53C3\u6578\u90E8\u5206\r\n        const paramName = patternPart.slice(1);\r\n        params[paramName] = pathnamePart;\r\n      } else if (patternPart !== pathnamePart) {\r\n        // \u4E0D\u5339\u914D\r\n        return null;\r\n      }\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  /**\r\n   * \u6279\u91CF\u8A3B\u518A\u8DEF\u7531\r\n   * @param {Array} routes - \u8DEF\u7531\u914D\u7F6E\u6578\u7D44\r\n   */\r\n  registerRoutes(routes) {\r\n    routes.forEach(({ method, path, handler }) => {\r\n      this[method.toLowerCase()](path, handler);\r\n    });\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * \u5217\u51FA\u6240\u6709\u5DF2\u8A3B\u518A\u7684\u8DEF\u7531\r\n   */\r\n  listRoutes() {\r\n    const routes = [];\r\n    \r\n    for (const [method, routeMap] of Object.entries(this.routes)) {\r\n      for (const path of routeMap.keys()) {\r\n        routes.push({ method, path });\r\n      }\r\n    }\r\n    \r\n    return routes.sort((a, b) => {\r\n      if (a.path < b.path) return -1;\r\n      if (a.path > b.path) return 1;\r\n      return 0;\r\n    });\r\n  }\r\n}\r\n\r\nexport default Router;\r\n\r\n", "// =================================================================\r\n// \u8A8D\u8B49\u76F8\u95DC\u51FD\u6578\r\n// =================================================================\r\n\r\nimport { jsonResponse, corsHeaders } from './utils.js';\r\n\r\n// \u4F7F\u7528 Web Crypto API \u9032\u884C\u5BC6\u78BC\u96DC\u6E4A\r\nasync function hashPassword(password) {\r\n  const encoder = new TextEncoder();\r\n  const data = encoder.encode(password);\r\n  const hash = await crypto.subtle.digest('SHA-256', data);\r\n  return Array.from(new Uint8Array(hash))\r\n    .map(b => b.toString(16).padStart(2, '0'))\r\n    .join('');\r\n}\r\n\r\n// \u9A57\u8B49\u5BC6\u78BC\r\nasync function verifyPassword(password, hash) {\r\n  const passwordHash = await hashPassword(password);\r\n  return passwordHash === hash;\r\n}\r\n\r\n// \u751F\u6210\u96A8\u6A5F session token\r\nfunction generateSessionToken() {\r\n  const array = new Uint8Array(32);\r\n  crypto.getRandomValues(array);\r\n  return Array.from(array, byte => byte.toString(16).padStart(2, '0')).join('');\r\n}\r\n\r\n// \u5F9E\u8ACB\u6C42\u53D6\u5F97 session token\r\nfunction getSessionToken(request) {\r\n  const authHeader = request.headers.get('Authorization');\r\n  if (authHeader && authHeader.startsWith('Bearer ')) {\r\n    return authHeader.substring(7);\r\n  }\r\n  \r\n  // \u4E5F\u652F\u63F4\u5F9E cookie \u8B80\u53D6\r\n  const cookieHeader = request.headers.get('Cookie');\r\n  if (cookieHeader) {\r\n    const match = cookieHeader.match(/session_token=([^;]+)/);\r\n    if (match) {\r\n      return match[1];\r\n    }\r\n  }\r\n  \r\n  return null;\r\n}\r\n\r\n// \u9A57\u8B49 session \u4E26\u53D6\u5F97\u4F7F\u7528\u8005\u8CC7\u8A0A\r\nasync function verifySession(db, sessionToken) {\r\n  if (!sessionToken) {\r\n    return null;\r\n  }\r\n  \r\n  const result = await db.prepare(`\r\n    SELECT \r\n      u.id, \r\n      u.username, \r\n      u.role, \r\n      u.is_active,\r\n      u.employee_id,\r\n      e.name as employee_name\r\n    FROM sessions s\r\n    JOIN users u ON s.user_id = u.id\r\n    LEFT JOIN employees e ON u.employee_id = e.id\r\n    WHERE s.session_token = ? AND s.expires_at > datetime('now') AND u.is_active = 1\r\n  `).bind(sessionToken).first();\r\n  \r\n  return result;\r\n}\r\n\r\n// \u5275\u5EFA\u65B0 session\r\nasync function createSession(db, userId) {\r\n  const sessionToken = generateSessionToken();\r\n  const expiresAt = new Date(Date.now() + 7 * 24 * 60 * 60 * 1000); // 7 \u5929\u5F8C\u904E\u671F\r\n  \r\n  await db.prepare(`\r\n    INSERT INTO sessions (session_token, user_id, expires_at)\r\n    VALUES (?, ?, ?)\r\n  `).bind(sessionToken, userId, expiresAt.toISOString()).run();\r\n  \r\n  return sessionToken;\r\n}\r\n\r\n// \u522A\u9664 session (\u767B\u51FA)\r\nasync function deleteSession(db, sessionToken) {\r\n  await db.prepare(`\r\n    DELETE FROM sessions WHERE session_token = ?\r\n  `).bind(sessionToken).run();\r\n}\r\n\r\n// \u6E05\u7406\u904E\u671F sessions\r\nasync function cleanupExpiredSessions(db) {\r\n  await db.prepare(`\r\n    DELETE FROM sessions WHERE expires_at < datetime('now')\r\n  `).run();\r\n}\r\n\r\n// \u6AA2\u67E5\u4F7F\u7528\u8005\u662F\u5426\u6709\u6B0A\u9650\u5B58\u53D6\u7279\u5B9A\u54E1\u5DE5\u7684\u8CC7\u6599\r\nfunction canAccessEmployee(user, employeeName) {\r\n  if (!user) return false;\r\n  if (user.role === 'admin') return true;\r\n  return user.employee_name === employeeName;\r\n}\r\n\r\n// \u9700\u8981\u767B\u5165\u7684\u4E2D\u4ECB\u51FD\u6578\r\nasync function requireAuth(db, request) {\r\n  const sessionToken = getSessionToken(request);\r\n  const user = await verifySession(db, sessionToken);\r\n  \r\n  if (!user) {\r\n    return { authorized: false, user: null, error: '\u672A\u6388\u6B0A\uFF0C\u8ACB\u5148\u767B\u5165' };\r\n  }\r\n  \r\n  return { authorized: true, user, error: null };\r\n}\r\n\r\n// \u9700\u8981\u7BA1\u7406\u54E1\u6B0A\u9650\u7684\u4E2D\u4ECB\u51FD\u6578\r\nasync function requireAdmin(db, request) {\r\n  const auth = await requireAuth(db, request);\r\n  \r\n  if (!auth.authorized) {\r\n    return auth;\r\n  }\r\n  \r\n  if (auth.user.role !== 'admin') {\r\n    return { authorized: false, user: auth.user, error: '\u9700\u8981\u7BA1\u7406\u54E1\u6B0A\u9650' };\r\n  }\r\n  \r\n  return auth;\r\n}\r\n\r\n// ================================================================\r\n// Handler functions (moved from index.js)\r\n// ================================================================\r\n\r\nasync function handleLogin(db, request) {\r\n  try {\r\n    const { username, password } = await request.json();\r\n    if (!username || !password) {\r\n      return jsonResponse({ error: '\u8ACB\u63D0\u4F9B\u4F7F\u7528\u8005\u540D\u7A31\u548C\u5BC6\u78BC' }, 400);\r\n    }\r\n    // \u66F4\u65B0\u67E5\u8A62\u4EE5\u7B26\u5408\u65B0\u7684\u6578\u64DA\u5EAB\u7D50\u69CB\uFF08\u4F7F\u7528 JOIN \u7372\u53D6\u54E1\u5DE5\u540D\u7A31\uFF09\r\n    const user = await db.prepare(`\r\n      SELECT \r\n        u.id, \r\n        u.username, \r\n        u.password_hash, \r\n        u.role, \r\n        u.is_active,\r\n        u.employee_id,\r\n        e.name as employee_name\r\n      FROM users u\r\n      LEFT JOIN employees e ON u.employee_id = e.id\r\n      WHERE u.username = ? AND u.is_active = 1\r\n    `).bind(username).first();\r\n    if (!user) {\r\n      return jsonResponse({ error: '\u4F7F\u7528\u8005\u540D\u7A31\u6216\u5BC6\u78BC\u932F\u8AA4' }, 401);\r\n    }\r\n    const isValid = await verifyPassword(password, user.password_hash);\r\n    if (!isValid) {\r\n      return jsonResponse({ error: '\u4F7F\u7528\u8005\u540D\u7A31\u6216\u5BC6\u78BC\u932F\u8AA4' }, 401);\r\n    }\r\n    const sessionToken = await createSession(db, user.id);\r\n    return jsonResponse({\r\n      success: true,\r\n      session_token: sessionToken,\r\n      user: {\r\n        id: user.id,\r\n        username: user.username,\r\n        role: user.role,\r\n        employee_name: user.employee_name || user.username\r\n      }\r\n    });\r\n  } catch (err) {\r\n    return jsonResponse({ error: err.message }, 500);\r\n  }\r\n}\r\n\r\nasync function handleLogout(db, request) {\r\n  try {\r\n    const sessionToken = getSessionToken(request);\r\n    if (sessionToken) {\r\n      await deleteSession(db, sessionToken);\r\n    }\r\n    return jsonResponse({ success: true });\r\n  } catch (err) {\r\n    return jsonResponse({ error: err.message }, 500);\r\n  }\r\n}\r\n\r\nasync function handleVerifySession(db, request) {\r\n  try {\r\n    const sessionToken = getSessionToken(request);\r\n    const user = await verifySession(db, sessionToken);\r\n    if (!user) {\r\n      return jsonResponse({ error: '\u7528\u6236\u4E0D\u5B58\u5728' }, 401);\r\n    }\r\n    return jsonResponse({\r\n      user: {\r\n        id: user.id,\r\n        username: user.username,\r\n        role: user.role,\r\n        employee_name: user.employee_name\r\n      }\r\n    });\r\n  } catch (err) {\r\n    return jsonResponse({ error: err.message }, 500);\r\n  }\r\n}\r\n\r\nasync function handleChangePassword(db, request) {\r\n  try {\r\n    const auth = await requireAuth(db, request);\r\n    if (!auth.authorized) {\r\n      return jsonResponse({ error: auth.error }, 401);\r\n    }\r\n    const body = await request.json();\r\n    const oldPassword = body.old_password || body.currentPassword;\r\n    const newPassword = body.new_password || body.newPassword;\r\n    if (!oldPassword || !newPassword) {\r\n      return jsonResponse({ error: '\u8ACB\u63D0\u4F9B\u76EE\u524D\u5BC6\u78BC\u548C\u65B0\u5BC6\u78BC' }, 400);\r\n    }\r\n    if (newPassword.length < 6) {\r\n      return jsonResponse({ error: '\u65B0\u5BC6\u78BC\u81F3\u5C11\u9700\u89816\u500B\u5B57\u5143' }, 400);\r\n    }\r\n    const user = await db.prepare(`\r\n      SELECT password_hash FROM users WHERE id = ?\r\n    `).bind(auth.user.id).first();\r\n    if (!user) {\r\n      return jsonResponse({ error: '\u4F7F\u7528\u8005\u4E0D\u5B58\u5728' }, 404);\r\n    }\r\n    const isValid = await verifyPassword(oldPassword, user.password_hash);\r\n    if (!isValid) {\r\n      return jsonResponse({ error: '\u820A\u5BC6\u78BC\u932F\u8AA4' }, 401);\r\n    }\r\n    const newHash = await hashPassword(newPassword);\r\n    await db.prepare(`\r\n      UPDATE users SET password_hash = ?, updated_at = CURRENT_TIMESTAMP WHERE id = ?\r\n    `).bind(newHash, auth.user.id).run();\r\n    return jsonResponse({ success: true, message: '\u5BC6\u78BC\u5DF2\u6210\u529F\u66F4\u65B0' });\r\n  } catch (err) {\r\n    return jsonResponse({ error: err.message || '\u5BC6\u78BC\u66F4\u65B0\u5931\u6557' }, 500);\r\n  }\r\n}\r\n\r\nasync function handleAdminResetPassword(db, request, username) {\r\n  try {\r\n    const auth = await requireAdmin(db, request);\r\n    if (!auth.authorized) {\r\n      return jsonResponse({ error: auth.error }, 403);\r\n    }\r\n    const body = await request.json();\r\n    const newPassword = body.new_password || body.newPassword;\r\n    if (!newPassword) {\r\n      return jsonResponse({ error: '\u8ACB\u63D0\u4F9B\u65B0\u5BC6\u78BC' }, 400);\r\n    }\r\n    if (newPassword.length < 6) {\r\n      return jsonResponse({ error: '\u65B0\u5BC6\u78BC\u81F3\u5C11\u9700\u89816\u500B\u5B57\u5143' }, 400);\r\n    }\r\n    const user = await db.prepare(`\r\n      SELECT id FROM users WHERE username = ?\r\n    `).bind(username).first();\r\n    if (!user) {\r\n      return jsonResponse({ error: '\u4F7F\u7528\u8005\u4E0D\u5B58\u5728' }, 404);\r\n    }\r\n    const newHash = await hashPassword(newPassword);\r\n    await db.prepare(`\r\n      UPDATE users SET password_hash = ?, updated_at = CURRENT_TIMESTAMP WHERE username = ?\r\n    `).bind(newHash, username).run();\r\n    return jsonResponse({ success: true, message: `\u5DF2\u91CD\u8A2D ${username} \u7684\u5BC6\u78BC` });\r\n  } catch (err) {\r\n    return jsonResponse({ error: err.message || '\u5BC6\u78BC\u91CD\u8A2D\u5931\u6557' }, 500);\r\n  }\r\n}\r\n\r\nexport {\r\n  hashPassword,\r\n  verifyPassword,\r\n  generateSessionToken,\r\n  getSessionToken,\r\n  verifySession,\r\n  createSession,\r\n  deleteSession,\r\n  cleanupExpiredSessions,\r\n  canAccessEmployee,\r\n  requireAuth,\r\n  requireAdmin,\r\n  handleLogin,\r\n  handleLogout,\r\n  handleVerifySession,\r\n  handleChangePassword,\r\n  handleAdminResetPassword\r\n};\r\n\r\n", "/**\r\n * \u8A8D\u8B49\u4E2D\u9593\u4EF6\r\n * \u63D0\u4F9B\u7D71\u4E00\u7684\u8A8D\u8B49\u548C\u6388\u6B0A\u6AA2\u67E5\r\n */\r\n\r\nimport { verifySession } from '../auth.js';\r\nimport { jsonResponse } from '../utils.js';\r\nimport { HTTP_STATUS, ERROR_CODES } from '../config/constants.js';\r\n\r\n/**\r\n * \u8A8D\u8B49\u4E2D\u9593\u4EF6 - \u8981\u6C42\u7528\u6236\u5DF2\u767B\u5165\r\n * @param {Function} handler - API \u8655\u7406\u51FD\u6578\r\n * @returns {Function} \u5305\u88DD\u5F8C\u7684\u8655\u7406\u51FD\u6578\r\n */\r\nexport function withAuth(handler) {\r\n  return async (env, request) => {\r\n    // \u9A57\u8B49 session\r\n    const auth = await verifySession(env.DB, request);\r\n    \r\n    if (!auth || !auth.user) {\r\n      return jsonResponse({\r\n        success: false,\r\n        error: {\r\n          code: ERROR_CODES.UNAUTHORIZED,\r\n          message: '\u672A\u6388\u6B0A\uFF0C\u8ACB\u5148\u767B\u5165'\r\n        }\r\n      }, HTTP_STATUS.UNAUTHORIZED);\r\n    }\r\n    \r\n    // \u6CE8\u5165\u8A8D\u8B49\u4FE1\u606F\u5230\u8ACB\u6C42\u5C0D\u8C61\r\n    request.auth = auth;\r\n    request.user = auth.user;\r\n    \r\n    // \u7E7C\u7E8C\u57F7\u884C handler\r\n    return handler(env, request);\r\n  };\r\n}\r\n\r\n/**\r\n * \u7BA1\u7406\u54E1\u4E2D\u9593\u4EF6 - \u8981\u6C42\u7528\u6236\u70BA\u7BA1\u7406\u54E1\r\n * @param {Function} handler - API \u8655\u7406\u51FD\u6578\r\n * @returns {Function} \u5305\u88DD\u5F8C\u7684\u8655\u7406\u51FD\u6578\r\n */\r\nexport function withAdmin(handler) {\r\n  return withAuth(async (env, request) => {\r\n    // \u6AA2\u67E5\u7528\u6236\u89D2\u8272\r\n    if (request.user.role !== 'admin') {\r\n      return jsonResponse({\r\n        success: false,\r\n        error: {\r\n          code: ERROR_CODES.FORBIDDEN,\r\n          message: '\u6B0A\u9650\u4E0D\u8DB3\uFF0C\u9700\u8981\u7BA1\u7406\u54E1\u6B0A\u9650'\r\n        }\r\n      }, HTTP_STATUS.FORBIDDEN);\r\n    }\r\n    \r\n    return handler(env, request);\r\n  });\r\n}\r\n\r\n/**\r\n * \u53EF\u9078\u8A8D\u8B49\u4E2D\u9593\u4EF6 - \u5982\u679C\u6709 token \u5247\u9A57\u8B49\uFF0C\u6C92\u6709\u5247\u8DF3\u904E\r\n * @param {Function} handler - API \u8655\u7406\u51FD\u6578\r\n * @returns {Function} \u5305\u88DD\u5F8C\u7684\u8655\u7406\u51FD\u6578\r\n */\r\nexport function withOptionalAuth(handler) {\r\n  return async (env, request) => {\r\n    // \u5617\u8A66\u9A57\u8B49\r\n    const auth = await verifySession(env.DB, request);\r\n    \r\n    // \u7121\u8AD6\u662F\u5426\u6210\u529F\u90FD\u7E7C\u7E8C\uFF0C\u4F46\u6CE8\u5165\u8A8D\u8B49\u4FE1\u606F\r\n    request.auth = auth || null;\r\n    request.user = auth?.user || null;\r\n    \r\n    return handler(env, request);\r\n  };\r\n}\r\n\r\n/**\r\n * \u8CC7\u6E90\u64C1\u6709\u6B0A\u6AA2\u67E5 - \u78BA\u4FDD\u7528\u6236\u6709\u6B0A\u8A2A\u554F\u8CC7\u6E90\r\n * @param {Function} getResource - \u7372\u53D6\u8CC7\u6E90\u7684\u51FD\u6578\r\n * @param {string} ownerField - \u64C1\u6709\u8005\u6B04\u4F4D\u540D\r\n * @returns {Function} \u4E2D\u9593\u4EF6\u51FD\u6578\r\n */\r\nexport function withOwnership(getResource, ownerField = 'created_by_user_id') {\r\n  return (handler) => withAuth(async (env, request) => {\r\n    const user = request.user;\r\n    \r\n    // \u7BA1\u7406\u54E1\u53EF\u4EE5\u8A2A\u554F\u6240\u6709\u8CC7\u6E90\r\n    if (user.role === 'admin') {\r\n      return handler(env, request);\r\n    }\r\n    \r\n    // \u7372\u53D6\u8CC7\u6E90\r\n    const resource = await getResource(env, request);\r\n    \r\n    if (!resource) {\r\n      return jsonResponse({\r\n        success: false,\r\n        error: {\r\n          code: ERROR_CODES.NOT_FOUND,\r\n          message: '\u8CC7\u6E90\u4E0D\u5B58\u5728'\r\n        }\r\n      }, HTTP_STATUS.NOT_FOUND);\r\n    }\r\n    \r\n    // \u6AA2\u67E5\u64C1\u6709\u6B0A\r\n    if (resource[ownerField] !== user.id) {\r\n      return jsonResponse({\r\n        success: false,\r\n        error: {\r\n          code: ERROR_CODES.PERMISSION_DENIED,\r\n          message: '\u6B0A\u9650\u4E0D\u8DB3\uFF0C\u60A8\u53EA\u80FD\u8A2A\u554F\u81EA\u5DF1\u7684\u8CC7\u6E90'\r\n        }\r\n      }, HTTP_STATUS.FORBIDDEN);\r\n    }\r\n    \r\n    // \u6CE8\u5165\u8CC7\u6E90\u5230\u8ACB\u6C42\u5C0D\u8C61\r\n    request.resource = resource;\r\n    \r\n    return handler(env, request);\r\n  });\r\n}\r\n\r\nexport default {\r\n  withAuth,\r\n  withAdmin,\r\n  withOptionalAuth,\r\n  withOwnership\r\n};\r\n\r\n", "/**\r\n * \u932F\u8AA4\u8655\u7406\u4E2D\u9593\u4EF6\r\n * \u7D71\u4E00\u6355\u7372\u548C\u8655\u7406\u6240\u6709\u932F\u8AA4\r\n */\r\n\r\nimport { jsonResponse } from '../utils.js';\r\nimport { HTTP_STATUS, ERROR_CODES } from '../config/constants.js';\r\n\r\n/**\r\n * \u932F\u8AA4\u8655\u7406\u4E2D\u9593\u4EF6\r\n * @param {Function} handler - API \u8655\u7406\u51FD\u6578\r\n * @returns {Function} \u5305\u88DD\u5F8C\u7684\u8655\u7406\u51FD\u6578\r\n */\r\nexport function withErrorHandler(handler) {\r\n  return async (env, request) => {\r\n    try {\r\n      return await handler(env, request);\r\n    } catch (error) {\r\n      return handleError(error, request);\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * \u8655\u7406\u932F\u8AA4\r\n * @param {Error} error - \u932F\u8AA4\u5C0D\u8C61\r\n * @param {Request} request - \u8ACB\u6C42\u5C0D\u8C61\r\n * @returns {Response} \u932F\u8AA4\u97FF\u61C9\r\n */\r\nfunction handleError(error, request) {\r\n  // \u8A18\u9304\u932F\u8AA4\uFF08\u79FB\u9664\u654F\u611F\u4FE1\u606F\uFF09\r\n  console.error('[Error]', {\r\n    message: error.message,\r\n    stack: error.stack,\r\n    url: request.url,\r\n    method: request.method,\r\n    timestamp: new Date().toISOString()\r\n  });\r\n\r\n  // \u6839\u64DA\u932F\u8AA4\u985E\u578B\u8FD4\u56DE\u4E0D\u540C\u97FF\u61C9\r\n  if (error instanceof ValidationError) {\r\n    return jsonResponse({\r\n      success: false,\r\n      error: {\r\n        code: ERROR_CODES.VALIDATION_ERROR,\r\n        message: error.message,\r\n        details: error.errors\r\n      }\r\n    }, HTTP_STATUS.BAD_REQUEST);\r\n  }\r\n\r\n  if (error instanceof AuthenticationError) {\r\n    return jsonResponse({\r\n      success: false,\r\n      error: {\r\n        code: ERROR_CODES.UNAUTHORIZED,\r\n        message: error.message\r\n      }\r\n    }, HTTP_STATUS.UNAUTHORIZED);\r\n  }\r\n\r\n  if (error instanceof ForbiddenError) {\r\n    return jsonResponse({\r\n      success: false,\r\n      error: {\r\n        code: ERROR_CODES.FORBIDDEN,\r\n        message: error.message\r\n      }\r\n    }, HTTP_STATUS.FORBIDDEN);\r\n  }\r\n\r\n  if (error instanceof NotFoundError) {\r\n    return jsonResponse({\r\n      success: false,\r\n      error: {\r\n        code: ERROR_CODES.NOT_FOUND,\r\n        message: error.message\r\n      }\r\n    }, HTTP_STATUS.NOT_FOUND);\r\n  }\r\n\r\n  if (error instanceof ConflictError) {\r\n    return jsonResponse({\r\n      success: false,\r\n      error: {\r\n        code: ERROR_CODES.CONFLICT,\r\n        message: error.message\r\n      }\r\n    }, HTTP_STATUS.CONFLICT);\r\n  }\r\n\r\n  if (error instanceof BusinessError) {\r\n    return jsonResponse({\r\n      success: false,\r\n      error: {\r\n        code: error.code || ERROR_CODES.INTERNAL_ERROR,\r\n        message: error.message\r\n      }\r\n    }, HTTP_STATUS.BAD_REQUEST);\r\n  }\r\n\r\n  // \u9ED8\u8A8D\u932F\u8AA4\uFF08\u4E0D\u66B4\u9732\u5167\u90E8\u932F\u8AA4\u7D30\u7BC0\uFF09\r\n  return jsonResponse({\r\n    success: false,\r\n    error: {\r\n      code: ERROR_CODES.INTERNAL_ERROR,\r\n      message: '\u670D\u52D9\u5668\u5167\u90E8\u932F\u8AA4\uFF0C\u8ACB\u7A0D\u5F8C\u518D\u8A66'\r\n    }\r\n  }, HTTP_STATUS.INTERNAL_ERROR);\r\n}\r\n\r\n/**\r\n * \u81EA\u5B9A\u7FA9\u932F\u8AA4\u985E\r\n */\r\nexport class ValidationError extends Error {\r\n  constructor(message, errors = {}) {\r\n    super(message);\r\n    this.name = 'ValidationError';\r\n    this.errors = errors;\r\n  }\r\n}\r\n\r\nexport class AuthenticationError extends Error {\r\n  constructor(message = '\u8A8D\u8B49\u5931\u6557') {\r\n    super(message);\r\n    this.name = 'AuthenticationError';\r\n  }\r\n}\r\n\r\nexport class ForbiddenError extends Error {\r\n  constructor(message = '\u6B0A\u9650\u4E0D\u8DB3') {\r\n    super(message);\r\n    this.name = 'ForbiddenError';\r\n  }\r\n}\r\n\r\nexport class NotFoundError extends Error {\r\n  constructor(message = '\u8CC7\u6E90\u4E0D\u5B58\u5728') {\r\n    super(message);\r\n    this.name = 'NotFoundError';\r\n  }\r\n}\r\n\r\nexport class ConflictError extends Error {\r\n  constructor(message = '\u8CC7\u6E90\u885D\u7A81') {\r\n    super(message);\r\n    this.name = 'ConflictError';\r\n  }\r\n}\r\n\r\nexport class BusinessError extends Error {\r\n  constructor(message, code = ERROR_CODES.INTERNAL_ERROR) {\r\n    super(message);\r\n    this.name = 'BusinessError';\r\n    this.code = code;\r\n  }\r\n}\r\n\r\nexport default {\r\n  withErrorHandler,\r\n  ValidationError,\r\n  AuthenticationError,\r\n  ForbiddenError,\r\n  NotFoundError,\r\n  ConflictError,\r\n  BusinessError\r\n};\r\n\r\n", "/**\r\n * Auth Routes\r\n * \u8A3B\u518A\u8A8D\u8B49\u76F8\u95DC\u7684\u6240\u6709\u8DEF\u7531\r\n */\r\n\r\nimport {\r\n  handleLogin,\r\n  handleLogout,\r\n  handleVerifySession,\r\n  handleChangePassword,\r\n  handleAdminResetPassword\r\n} from '../auth.js';\r\n\r\nimport { withAuth, withAdmin } from '../middleware/auth.middleware.js';\r\nimport { withErrorHandler } from '../middleware/error.middleware.js';\r\n\r\n/**\r\n * \u9069\u914D\u5668\uFF1A\u5C07\u820A\u7684 (db, request) \u7C3D\u540D\u8F49\u63DB\u70BA\u65B0\u7684 (env, request) \u7C3D\u540D\r\n */\r\nfunction adaptAuthHandler(handler) {\r\n  return async (env, request) => {\r\n    return handler(env.DB, request);\r\n  };\r\n}\r\n\r\n/**\r\n * \u7D44\u5408\u4E2D\u9593\u4EF6\r\n */\r\nfunction compose(...middlewares) {\r\n  return (handler) => {\r\n    return middlewares.reduceRight(\r\n      (wrapped, middleware) => middleware(wrapped),\r\n      handler\r\n    );\r\n  };\r\n}\r\n\r\n/**\r\n * \u8A3B\u518A\u8A8D\u8B49\u8DEF\u7531\r\n * @param {Router} router - \u8DEF\u7531\u5668\u5BE6\u4F8B\r\n */\r\nexport function registerAuthRoutes(router) {\r\n  const authHandler = compose(withErrorHandler, withAuth);\r\n  const adminHandler = compose(withErrorHandler, withAdmin);\r\n\r\n  // POST /api/auth/login - \u767B\u5165\uFF08\u516C\u958B\uFF09- \u65B0\u7AEF\u9EDE\r\n  router.post('/api/auth/login', withErrorHandler(adaptAuthHandler(handleLogin)));\r\n  \r\n  // POST /api/login - \u767B\u5165\uFF08\u516C\u958B\uFF09- \u5411\u5F8C\u517C\u5BB9\u820A\u7AEF\u9EDE\r\n  router.post('/api/login', withErrorHandler(adaptAuthHandler(handleLogin)));\r\n\r\n  // POST /api/auth/logout - \u767B\u51FA\uFF08\u9700\u8A8D\u8B49\uFF09\r\n  router.post('/api/auth/logout', authHandler(adaptAuthHandler(handleLogout)));\r\n  \r\n  // POST /api/logout - \u5411\u5F8C\u517C\u5BB9\u820A\u7AEF\u9EDE\r\n  router.post('/api/logout', authHandler(adaptAuthHandler(handleLogout)));\r\n\r\n  // GET /api/auth/verify - \u9A57\u8B49 Session\uFF08\u9700\u8A8D\u8B49\uFF09\r\n  router.get('/api/auth/verify', authHandler(adaptAuthHandler(handleVerifySession)));\r\n  \r\n  // GET /api/verify - \u5411\u5F8C\u517C\u5BB9\u820A\u7AEF\u9EDE\r\n  router.get('/api/verify', authHandler(adaptAuthHandler(handleVerifySession)));\r\n  \r\n  // GET /api/auth/me - \u7372\u53D6\u7576\u524D\u7528\u6236\r\n  router.get('/api/auth/me', authHandler(adaptAuthHandler(handleVerifySession)));\r\n\r\n  // POST /api/auth/change-password - \u4FEE\u6539\u5BC6\u78BC\uFF08\u9700\u8A8D\u8B49\uFF09\r\n  router.post('/api/auth/change-password', authHandler(adaptAuthHandler(handleChangePassword)));\r\n  \r\n  // POST /api/change-password - \u5411\u5F8C\u517C\u5BB9\u820A\u7AEF\u9EDE\r\n  router.post('/api/change-password', authHandler(adaptAuthHandler(handleChangePassword)));\r\n\r\n  // POST /api/auth/admin/reset-password - \u7BA1\u7406\u54E1\u91CD\u8A2D\u5BC6\u78BC\uFF08\u7BA1\u7406\u54E1\uFF09\r\n  router.post('/api/auth/admin/reset-password', adminHandler(adaptAuthHandler(handleAdminResetPassword)));\r\n}\r\n\r\nexport default registerAuthRoutes;\r\n\r\n", "/**\r\n * Base Repository\r\n * \u6240\u6709 Repository \u7684\u57FA\u790E\u985E\uFF0C\u63D0\u4F9B\u6A19\u6E96\u7684 CRUD \u64CD\u4F5C\r\n * \r\n * \u8077\u8CAC\uFF1A\r\n * - \u63D0\u4F9B\u57FA\u790E\u7684\u8CC7\u6599\u5EAB\u64CD\u4F5C\u65B9\u6CD5\r\n * - \u6A19\u6E96\u5316\u67E5\u8A62\u65B9\u5F0F\r\n * - \u7D71\u4E00\u932F\u8AA4\u8655\u7406\r\n * \r\n * \u4E0D\u8CA0\u8CAC\uFF1A\r\n * - \u696D\u52D9\u908F\u8F2F\uFF08\u61C9\u5728 Service \u5C64\uFF09\r\n * - HTTP \u8655\u7406\uFF08\u61C9\u5728 Handler \u5C64\uFF09\r\n */\r\n\r\nexport class BaseRepository {\r\n  /**\r\n   * \u69CB\u9020\u51FD\u6578\r\n   * @param {Object} db - D1 Database \u5BE6\u4F8B\r\n   * @param {string} tableName - \u8868\u540D\r\n   */\r\n  constructor(db, tableName) {\r\n    if (!db) {\r\n      throw new Error('Database instance is required');\r\n    }\r\n    if (!tableName) {\r\n      throw new Error('Table name is required');\r\n    }\r\n    \r\n    this.db = db;\r\n    this.tableName = tableName;\r\n  }\r\n\r\n  /**\r\n   * \u67E5\u8A62\u6240\u6709\u8A18\u9304\r\n   * @param {Object} filters - \u904E\u6FFE\u689D\u4EF6\r\n   * @param {Object} options - \u67E5\u8A62\u9078\u9805\uFF08\u6392\u5E8F\u3001\u5206\u9801\u7B49\uFF09\r\n   * @returns {Promise<Array>}\r\n   */\r\n  async findAll(filters = {}, options = {}) {\r\n    const { orderBy = 'created_at', order = 'DESC', limit, offset } = options;\r\n    \r\n    let query = `SELECT * FROM ${this.tableName}`;\r\n    const params = [];\r\n\r\n    // \u69CB\u5EFA WHERE \u689D\u4EF6\r\n    const conditions = [];\r\n    for (const [key, value] of Object.entries(filters)) {\r\n      if (value !== undefined && value !== null) {\r\n        conditions.push(`${key} = ?`);\r\n        params.push(value);\r\n      }\r\n    }\r\n\r\n    if (conditions.length > 0) {\r\n      query += ` WHERE ${conditions.join(' AND ')}`;\r\n    }\r\n\r\n    // \u6DFB\u52A0\u6392\u5E8F\r\n    query += ` ORDER BY ${orderBy} ${order}`;\r\n\r\n    // \u6DFB\u52A0\u5206\u9801\r\n    if (limit) {\r\n      query += ` LIMIT ?`;\r\n      params.push(limit);\r\n      \r\n      if (offset) {\r\n        query += ` OFFSET ?`;\r\n        params.push(offset);\r\n      }\r\n    }\r\n\r\n    const result = await this.db.prepare(query).bind(...params).all();\r\n    return result.results || [];\r\n  }\r\n\r\n  /**\r\n   * \u6839\u64DA ID \u67E5\u8A62\u55AE\u500B\u8A18\u9304\r\n   * @param {number} id - \u8A18\u9304 ID\r\n   * @returns {Promise<Object|null>}\r\n   */\r\n  async findById(id) {\r\n    const result = await this.db\r\n      .prepare(`SELECT * FROM ${this.tableName} WHERE id = ?`)\r\n      .bind(id)\r\n      .first();\r\n    \r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * \u6839\u64DA\u689D\u4EF6\u67E5\u8A62\u55AE\u500B\u8A18\u9304\r\n   * @param {Object} filters - \u904E\u6FFE\u689D\u4EF6\r\n   * @returns {Promise<Object|null>}\r\n   */\r\n  async findOne(filters = {}) {\r\n    const conditions = [];\r\n    const params = [];\r\n\r\n    for (const [key, value] of Object.entries(filters)) {\r\n      if (value !== undefined && value !== null) {\r\n        conditions.push(`${key} = ?`);\r\n        params.push(value);\r\n      }\r\n    }\r\n\r\n    if (conditions.length === 0) {\r\n      throw new Error('At least one filter condition is required');\r\n    }\r\n\r\n    const query = `SELECT * FROM ${this.tableName} WHERE ${conditions.join(' AND ')} LIMIT 1`;\r\n    const result = await this.db.prepare(query).bind(...params).first();\r\n    \r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * \u5275\u5EFA\u8A18\u9304\r\n   * @param {Object} data - \u8A18\u9304\u6578\u64DA\r\n   * @returns {Promise<number>} \u65B0\u8A18\u9304\u7684 ID\r\n   */\r\n  async create(data) {\r\n    if (!data || Object.keys(data).length === 0) {\r\n      throw new Error('Data is required for create operation');\r\n    }\r\n\r\n    const keys = Object.keys(data);\r\n    const values = Object.values(data);\r\n    const placeholders = keys.map(() => '?').join(', ');\r\n\r\n    const query = `\r\n      INSERT INTO ${this.tableName} (${keys.join(', ')})\r\n      VALUES (${placeholders})\r\n    `;\r\n\r\n    const result = await this.db.prepare(query).bind(...values).run();\r\n    \r\n    if (!result.success) {\r\n      throw new Error('Failed to create record');\r\n    }\r\n\r\n    return result.meta.last_row_id;\r\n  }\r\n\r\n  /**\r\n   * \u66F4\u65B0\u8A18\u9304\r\n   * @param {number} id - \u8A18\u9304 ID\r\n   * @param {Object} data - \u66F4\u65B0\u6578\u64DA\r\n   * @returns {Promise<Object>} \u66F4\u65B0\u5F8C\u7684\u8A18\u9304\r\n   */\r\n  async update(id, data) {\r\n    if (!data || Object.keys(data).length === 0) {\r\n      throw new Error('Data is required for update operation');\r\n    }\r\n\r\n    // \u6DFB\u52A0 updated_at\r\n    data.updated_at = new Date().toISOString();\r\n\r\n    const sets = Object.keys(data).map(key => `${key} = ?`).join(', ');\r\n    const values = [...Object.values(data), id];\r\n\r\n    const query = `\r\n      UPDATE ${this.tableName}\r\n      SET ${sets}\r\n      WHERE id = ?\r\n    `;\r\n\r\n    const result = await this.db.prepare(query).bind(...values).run();\r\n    \r\n    if (!result.success) {\r\n      throw new Error('Failed to update record');\r\n    }\r\n\r\n    return this.findById(id);\r\n  }\r\n\r\n  /**\r\n   * \u522A\u9664\u8A18\u9304\uFF08\u786C\u522A\u9664\uFF09\r\n   * @param {number} id - \u8A18\u9304 ID\r\n   * @returns {Promise<boolean>}\r\n   */\r\n  async delete(id) {\r\n    const query = `DELETE FROM ${this.tableName} WHERE id = ?`;\r\n    const result = await this.db.prepare(query).bind(id).run();\r\n    \r\n    return result.success;\r\n  }\r\n\r\n  /**\r\n   * \u8EDF\u522A\u9664\uFF08\u63A8\u85A6\u4F7F\u7528\uFF09\r\n   * @param {number} id - \u8A18\u9304 ID\r\n   * @returns {Promise<boolean>}\r\n   */\r\n  async softDelete(id) {\r\n    return this.update(id, {\r\n      is_deleted: true,\r\n      deleted_at: new Date().toISOString()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * \u7D71\u8A08\u8A18\u9304\u6578\u91CF\r\n   * @param {Object} filters - \u904E\u6FFE\u689D\u4EF6\r\n   * @returns {Promise<number>}\r\n   */\r\n  async count(filters = {}) {\r\n    let query = `SELECT COUNT(*) as count FROM ${this.tableName}`;\r\n    const params = [];\r\n\r\n    const conditions = [];\r\n    for (const [key, value] of Object.entries(filters)) {\r\n      if (value !== undefined && value !== null) {\r\n        conditions.push(`${key} = ?`);\r\n        params.push(value);\r\n      }\r\n    }\r\n\r\n    if (conditions.length > 0) {\r\n      query += ` WHERE ${conditions.join(' AND ')}`;\r\n    }\r\n\r\n    const result = await this.db.prepare(query).bind(...params).first();\r\n    return result?.count || 0;\r\n  }\r\n\r\n  /**\r\n   * \u6AA2\u67E5\u8A18\u9304\u662F\u5426\u5B58\u5728\r\n   * @param {number} id - \u8A18\u9304 ID\r\n   * @returns {Promise<boolean>}\r\n   */\r\n  async exists(id) {\r\n    const result = await this.db\r\n      .prepare(`SELECT 1 FROM ${this.tableName} WHERE id = ? LIMIT 1`)\r\n      .bind(id)\r\n      .first();\r\n    \r\n    return !!result;\r\n  }\r\n\r\n  /**\r\n   * \u6279\u91CF\u5275\u5EFA\r\n   * @param {Array<Object>} records - \u8A18\u9304\u6578\u7D44\r\n   * @returns {Promise<Array<number>>} \u65B0\u8A18\u9304\u7684 ID \u6578\u7D44\r\n   */\r\n  async batchCreate(records) {\r\n    if (!Array.isArray(records) || records.length === 0) {\r\n      throw new Error('Records array is required');\r\n    }\r\n\r\n    const ids = [];\r\n    \r\n    // \u4F7F\u7528\u4E8B\u52D9\r\n    for (const record of records) {\r\n      const id = await this.create(record);\r\n      ids.push(id);\r\n    }\r\n\r\n    return ids;\r\n  }\r\n\r\n  /**\r\n   * \u57F7\u884C\u539F\u59CB SQL \u67E5\u8A62\r\n   * @param {string} query - SQL \u67E5\u8A62\u8A9E\u53E5\r\n   * @param {Array} params - \u53C3\u6578\r\n   * @returns {Promise<Object>}\r\n   */\r\n  async raw(query, params = []) {\r\n    const result = await this.db.prepare(query).bind(...params).all();\r\n    return result.results || [];\r\n  }\r\n\r\n  /**\r\n   * \u57F7\u884C\u539F\u59CB SQL\uFF08\u55AE\u689D\u8A18\u9304\uFF09\r\n   * @param {string} query - SQL \u67E5\u8A62\u8A9E\u53E5\r\n   * @param {Array} params - \u53C3\u6578\r\n   * @returns {Promise<Object|null>}\r\n   */\r\n  async rawFirst(query, params = []) {\r\n    const result = await this.db.prepare(query).bind(...params).first();\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * \u9A57\u8B49\u5FC5\u586B\u6B04\u4F4D\r\n   * @protected\r\n   */\r\n  _validateRequired(data, requiredFields) {\r\n    for (const field of requiredFields) {\r\n      if (data[field] === undefined || data[field] === null || data[field] === '') {\r\n        throw new Error(`\u6B04\u4F4D ${field} \u70BA\u5FC5\u586B`);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u9A57\u8B49\u6B04\u4F4D\u985E\u578B\r\n   * @protected\r\n   */\r\n  _validateTypes(data, typeMap) {\r\n    for (const [field, expectedType] of Object.entries(typeMap)) {\r\n      if (data[field] !== undefined) {\r\n        const actualType = typeof data[field];\r\n        if (actualType !== expectedType) {\r\n          throw new Error(`\u6B04\u4F4D ${field} \u985E\u578B\u932F\u8AA4\uFF0C\u671F\u671B ${expectedType}\uFF0C\u5BE6\u969B ${actualType}`);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default BaseRepository;\r\n\r\n", "/**\r\n * Client Repository\r\n * \u8CA0\u8CAC\u5BA2\u6236\u8868\u7684\u6240\u6709\u8CC7\u6599\u5EAB\u64CD\u4F5C\r\n */\r\n\r\nimport { BaseRepository } from './BaseRepository.js';\r\nimport { TABLES, FIELDS } from '../config/constants.js';\r\n\r\nexport class ClientRepository extends BaseRepository {\r\n  constructor(db) {\r\n    super(db, TABLES.CLIENTS);\r\n  }\r\n\r\n  /**\r\n   * \u67E5\u8A62\u5BA2\u6236\uFF08\u5E36\u670D\u52D9\uFF09\r\n   * @param {number} id - \u5BA2\u6236 ID\r\n   * @returns {Promise<Object|null>}\r\n   */\r\n  async findByIdWithServices(id) {\r\n    const client = await this.findById(id);\r\n    if (!client) return null;\r\n\r\n    // \u67E5\u8A62\u5BA2\u6236\u7684\u6240\u6709\u670D\u52D9\r\n    const services = await this.db\r\n      .prepare(`\r\n        SELECT * FROM ${TABLES.CLIENT_SERVICES}\r\n        WHERE ${FIELDS.CLIENT_ID} = ?\r\n        ORDER BY ${FIELDS.CREATED_AT} DESC\r\n      `)\r\n      .bind(id)\r\n      .all();\r\n\r\n    return {\r\n      ...client,\r\n      services: services.results || []\r\n    };\r\n  }\r\n\r\n  /**\r\n   * \u6839\u64DA\u7D71\u4E00\u7DE8\u865F\u67E5\u8A62\r\n   * @param {string} taxId - \u7D71\u4E00\u7DE8\u865F\r\n   * @returns {Promise<Object|null>}\r\n   */\r\n  async findByTaxId(taxId) {\r\n    return this.findOne({ tax_id: taxId });\r\n  }\r\n\r\n  /**\r\n   * \u6839\u64DA\u540D\u7A31\u67E5\u8A62\r\n   * @param {string} name - \u5BA2\u6236\u540D\u7A31\r\n   * @returns {Promise<Object|null>}\r\n   */\r\n  async findByName(name) {\r\n    return this.findOne({ name });\r\n  }\r\n\r\n  /**\r\n   * \u6AA2\u67E5\u540D\u7A31\u662F\u5426\u5DF2\u5B58\u5728\r\n   * @param {string} name - \u5BA2\u6236\u540D\u7A31\r\n   * @param {number} excludeId - \u6392\u9664\u7684 ID\uFF08\u7528\u65BC\u66F4\u65B0\u6642\u6AA2\u67E5\uFF09\r\n   * @returns {Promise<boolean>}\r\n   */\r\n  async nameExists(name, excludeId = null) {\r\n    let query = `SELECT ${FIELDS.ID} FROM ${this.tableName} WHERE name = ?`;\r\n    const params = [name];\r\n\r\n    if (excludeId) {\r\n      query += ` AND ${FIELDS.ID} != ?`;\r\n      params.push(excludeId);\r\n    }\r\n\r\n    const result = await this.db.prepare(query).bind(...params).first();\r\n    return !!result;\r\n  }\r\n\r\n  /**\r\n   * \u6AA2\u67E5\u7D71\u4E00\u7DE8\u865F\u662F\u5426\u5DF2\u5B58\u5728\r\n   * @param {string} taxId - \u7D71\u4E00\u7DE8\u865F\r\n   * @param {number} excludeId - \u6392\u9664\u7684 ID\r\n   * @returns {Promise<boolean>}\r\n   */\r\n  async taxIdExists(taxId, excludeId = null) {\r\n    let query = `SELECT ${FIELDS.ID} FROM ${this.tableName} WHERE tax_id = ?`;\r\n    const params = [taxId];\r\n\r\n    if (excludeId) {\r\n      query += ` AND ${FIELDS.ID} != ?`;\r\n      params.push(excludeId);\r\n    }\r\n\r\n    const result = await this.db.prepare(query).bind(...params).first();\r\n    return !!result;\r\n  }\r\n\r\n  /**\r\n   * \u7372\u53D6\u5BA2\u6236\u7D71\u8A08\r\n   * @param {number} clientId - \u5BA2\u6236 ID\r\n   * @returns {Promise<Object>}\r\n   */\r\n  async getStats(clientId) {\r\n    // \u7D71\u8A08\u4EFB\u52D9\u6578\u91CF\r\n    const taskStats = await this.db.prepare(`\r\n      SELECT \r\n        COUNT(*) as total_tasks,\r\n        SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as completed_tasks,\r\n        SUM(CASE WHEN status = 'in_progress' THEN 1 ELSE 0 END) as in_progress_tasks\r\n      FROM ${TABLES.TASKS}\r\n      WHERE ${FIELDS.CLIENT_ID} = ?\r\n    `).bind(clientId).first();\r\n\r\n    // \u7D71\u8A08\u670D\u52D9\u6578\u91CF\r\n    const serviceStats = await this.db.prepare(`\r\n      SELECT \r\n        COUNT(*) as total_services,\r\n        SUM(CASE WHEN ${FIELDS.IS_ACTIVE} = 1 THEN 1 ELSE 0 END) as active_services\r\n      FROM ${TABLES.CLIENT_SERVICES}\r\n      WHERE ${FIELDS.CLIENT_ID} = ?\r\n    `).bind(clientId).first();\r\n\r\n    return {\r\n      tasks: taskStats || { total_tasks: 0, completed_tasks: 0, in_progress_tasks: 0 },\r\n      services: serviceStats || { total_services: 0, active_services: 0 }\r\n    };\r\n  }\r\n}\r\n\r\nexport default ClientRepository;\r\n\r\n", "/**\r\n * \u9A57\u8B49\u5DE5\u5177\u51FD\u6578\r\n * \u63D0\u4F9B\u7D71\u4E00\u7684\u6578\u64DA\u9A57\u8B49\u65B9\u6CD5\r\n */\r\n\r\nimport { ValidationError } from '../middleware/error.middleware.js';\r\n\r\n/**\r\n * \u9A57\u8B49\u898F\u5247\u5B9A\u7FA9\r\n */\r\nexport const VALIDATION_RULES = {\r\n  // \u7528\u6236\u540D\r\n  username: {\r\n    minLength: 3,\r\n    maxLength: 50,\r\n    pattern: /^[a-zA-Z0-9_]+$/,\r\n    message: '\u7528\u6236\u540D\u5FC5\u9808\u662F 3-50 \u500B\u5B57\u7B26\uFF0C\u53EA\u80FD\u5305\u542B\u5B57\u6BCD\u3001\u6578\u5B57\u548C\u4E0B\u5283\u7DDA'\r\n  },\r\n  \r\n  // \u5BC6\u78BC\r\n  password: {\r\n    minLength: 8,\r\n    maxLength: 128,\r\n    pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).+$/,\r\n    message: '\u5BC6\u78BC\u5FC5\u9808\u81F3\u5C11 8 \u500B\u5B57\u7B26\uFF0C\u5305\u542B\u5927\u5C0F\u5BEB\u5B57\u6BCD\u548C\u6578\u5B57'\r\n  },\r\n  \r\n  // Email\r\n  email: {\r\n    pattern: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\r\n    message: '\u8ACB\u8F38\u5165\u6709\u6548\u7684\u96FB\u5B50\u90F5\u4EF6\u5730\u5740'\r\n  },\r\n  \r\n  // \u53F0\u7063\u96FB\u8A71\r\n  phone: {\r\n    pattern: /^09\\d{8}$|^(0\\d{1,3})\\d{6,8}$/,\r\n    message: '\u8ACB\u8F38\u5165\u6709\u6548\u7684\u53F0\u7063\u96FB\u8A71\u865F\u78BC'\r\n  },\r\n  \r\n  // \u7D71\u4E00\u7DE8\u865F\r\n  taxId: {\r\n    pattern: /^\\d{8}$/,\r\n    validator: validateTaiwanTaxId,\r\n    message: '\u8ACB\u8F38\u5165\u6709\u6548\u7684\u7D71\u4E00\u7DE8\u865F'\r\n  }\r\n};\r\n\r\n/**\r\n * \u9A57\u8B49\u53F0\u7063\u7D71\u4E00\u7DE8\u865F\r\n */\r\nfunction validateTaiwanTaxId(taxId) {\r\n  if (!/^\\d{8}$/.test(taxId)) {\r\n    return false;\r\n  }\r\n  \r\n  const logic = [1, 2, 1, 2, 1, 2, 4, 1];\r\n  let sum = 0;\r\n  \r\n  for (let i = 0; i < 8; i++) {\r\n    const n = parseInt(taxId[i]) * logic[i];\r\n    sum += Math.floor(n / 10) + (n % 10);\r\n  }\r\n  \r\n  return sum % 10 === 0 || (taxId[6] === '7' && (sum + 1) % 10 === 0);\r\n}\r\n\r\n/**\r\n * \u9A57\u8B49\u5668\u985E\r\n */\r\nexport class Validator {\r\n  constructor(data) {\r\n    this.data = data;\r\n    this.errors = {};\r\n  }\r\n\r\n  /**\r\n   * \u9A57\u8B49\u5FC5\u586B\u6B04\u4F4D\r\n   */\r\n  required(field, message = null) {\r\n    if (!this.data[field] || this.data[field] === '') {\r\n      this.errors[field] = message || `\u6B04\u4F4D ${field} \u70BA\u5FC5\u586B`;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * \u9A57\u8B49\u5B57\u7B26\u4E32\u9577\u5EA6\r\n   */\r\n  length(field, min, max, message = null) {\r\n    const value = this.data[field];\r\n    if (value && (value.length < min || value.length > max)) {\r\n      this.errors[field] = message || `\u6B04\u4F4D ${field} \u9577\u5EA6\u5FC5\u9808\u5728 ${min}-${max} \u4E4B\u9593`;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * \u9A57\u8B49\u6B63\u5247\u8868\u9054\u5F0F\r\n   */\r\n  pattern(field, pattern, message = null) {\r\n    const value = this.data[field];\r\n    if (value && !pattern.test(value)) {\r\n      this.errors[field] = message || `\u6B04\u4F4D ${field} \u683C\u5F0F\u4E0D\u6B63\u78BA`;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * \u9A57\u8B49\u6578\u5B57\u7BC4\u570D\r\n   */\r\n  range(field, min, max, message = null) {\r\n    const value = this.data[field];\r\n    if (value !== undefined && (value < min || value > max)) {\r\n      this.errors[field] = message || `\u6B04\u4F4D ${field} \u5FC5\u9808\u5728 ${min}-${max} \u4E4B\u9593`;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * \u9A57\u8B49\u679A\u8209\u503C\r\n   */\r\n  enum(field, allowedValues, message = null) {\r\n    const value = this.data[field];\r\n    if (value && !allowedValues.includes(value)) {\r\n      this.errors[field] = message || `\u6B04\u4F4D ${field} \u5FC5\u9808\u662F\u4EE5\u4E0B\u503C\u4E4B\u4E00\uFF1A${allowedValues.join(', ')}`;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * \u81EA\u5B9A\u7FA9\u9A57\u8B49\r\n   */\r\n  custom(field, validator, message) {\r\n    const value = this.data[field];\r\n    if (value && !validator(value)) {\r\n      this.errors[field] = message || `\u6B04\u4F4D ${field} \u9A57\u8B49\u5931\u6557`;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * \u9A57\u8B49 Email\r\n   */\r\n  email(field, message = null) {\r\n    return this.pattern(field, VALIDATION_RULES.email.pattern, message || VALIDATION_RULES.email.message);\r\n  }\r\n\r\n  /**\r\n   * \u9A57\u8B49\u53F0\u7063\u96FB\u8A71\r\n   */\r\n  taiwanPhone(field, message = null) {\r\n    return this.pattern(field, VALIDATION_RULES.phone.pattern, message || VALIDATION_RULES.phone.message);\r\n  }\r\n\r\n  /**\r\n   * \u9A57\u8B49\u7D71\u4E00\u7DE8\u865F\r\n   */\r\n  taiwanTaxId(field, message = null) {\r\n    return this.custom(field, validateTaiwanTaxId, message || VALIDATION_RULES.taxId.message);\r\n  }\r\n\r\n  /**\r\n   * \u6AA2\u67E5\u662F\u5426\u6709\u932F\u8AA4\r\n   */\r\n  hasErrors() {\r\n    return Object.keys(this.errors).length > 0;\r\n  }\r\n\r\n  /**\r\n   * \u7372\u53D6\u932F\u8AA4\r\n   */\r\n  getErrors() {\r\n    return this.errors;\r\n  }\r\n\r\n  /**\r\n   * \u629B\u51FA\u9A57\u8B49\u932F\u8AA4\r\n   */\r\n  throwIfFailed() {\r\n    if (this.hasErrors()) {\r\n      throw new ValidationError('\u6578\u64DA\u9A57\u8B49\u5931\u6557', this.errors);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u7372\u53D6\u9A57\u8B49\u7D50\u679C\r\n   */\r\n  getResult() {\r\n    return {\r\n      valid: !this.hasErrors(),\r\n      errors: this.errors,\r\n      data: this.data\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * \u5275\u5EFA\u9A57\u8B49\u5668\r\n * @param {Object} data - \u8981\u9A57\u8B49\u7684\u6578\u64DA\r\n * @returns {Validator}\r\n */\r\nexport function validate(data) {\r\n  return new Validator(data);\r\n}\r\n\r\n/**\r\n * \u5FEB\u901F\u9A57\u8B49\uFF08\u62CB\u51FA\u932F\u8AA4\uFF09\r\n * @param {Object} data - \u8981\u9A57\u8B49\u7684\u6578\u64DA\r\n * @param {Function} rules - \u9A57\u8B49\u898F\u5247\u51FD\u6578\r\n */\r\nexport function validateOrThrow(data, rules) {\r\n  const validator = new Validator(data);\r\n  rules(validator);\r\n  validator.throwIfFailed();\r\n  return data;\r\n}\r\n\r\nexport default {\r\n  Validator,\r\n  validate,\r\n  validateOrThrow,\r\n  VALIDATION_RULES,\r\n  validateTaiwanTaxId\r\n};\r\n\r\n", "/**\r\n * Client Service\r\n * \u8CA0\u8CAC\u5BA2\u6236\u76F8\u95DC\u7684\u696D\u52D9\u908F\u8F2F\r\n */\r\n\r\nimport { ClientRepository } from '../repositories/ClientRepository.js';\r\nimport { ValidationError, NotFoundError, ConflictError } from '../middleware/error.middleware.js';\r\nimport { validate } from '../utils/validation.util.js';\r\nimport { CLIENT_STATUS } from '../config/constants.js';\r\n\r\nexport class ClientService {\r\n  constructor(db) {\r\n    this.repository = new ClientRepository(db);\r\n  }\r\n\r\n  /**\r\n   * \u7372\u53D6\u5BA2\u6236\u5217\u8868\r\n   * @param {Object} options - \u67E5\u8A62\u9078\u9805\r\n   * @returns {Promise<Object>}\r\n   */\r\n  async getList(options = {}) {\r\n    const { page = 1, pageSize = 20, status, region, search } = options;\r\n\r\n    // \u69CB\u5EFA\u904E\u6FFE\u689D\u4EF6\r\n    const filters = {};\r\n    if (status) filters.status = status;\r\n    if (region) filters.region = region;\r\n\r\n    // \u67E5\u8A62\u6578\u64DA\r\n    let allClients = await this.repository.findAll(filters);\r\n\r\n    // \u641C\u5C0B\u904E\u6FFE\r\n    if (search) {\r\n      const searchLower = search.toLowerCase();\r\n      allClients = allClients.filter(client =>\r\n        client.name.toLowerCase().includes(searchLower) ||\r\n        (client.tax_id && client.tax_id.includes(searchLower))\r\n      );\r\n    }\r\n\r\n    // \u5206\u9801\r\n    const total = allClients.length;\r\n    const start = (page - 1) * pageSize;\r\n    const end = start + pageSize;\r\n    const clients = allClients.slice(start, end);\r\n\r\n    return {\r\n      data: clients,\r\n      meta: {\r\n        total,\r\n        page,\r\n        pageSize,\r\n        totalPages: Math.ceil(total / pageSize)\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * \u7372\u53D6\u5BA2\u6236\u8A73\u60C5\uFF08\u5E36\u670D\u52D9\uFF09\r\n   * @param {number} id - \u5BA2\u6236 ID\r\n   * @returns {Promise<Object>}\r\n   */\r\n  async getDetail(id) {\r\n    const client = await this.repository.findByIdWithServices(id);\r\n    \r\n    if (!client) {\r\n      throw new NotFoundError('\u5BA2\u6236\u4E0D\u5B58\u5728');\r\n    }\r\n\r\n    // \u7372\u53D6\u7D71\u8A08\u4FE1\u606F\r\n    const stats = await this.repository.getStats(id);\r\n    client.stats = stats;\r\n\r\n    return client;\r\n  }\r\n\r\n  /**\r\n   * \u5275\u5EFA\u5BA2\u6236\r\n   * @param {Object} data - \u5BA2\u6236\u6578\u64DA\r\n   * @param {Object} context - \u4E0A\u4E0B\u6587\uFF08\u7576\u524D\u7528\u6236\u7B49\uFF09\r\n   * @returns {Promise<Object>}\r\n   */\r\n  async create(data, context) {\r\n    // \u9A57\u8B49\u6578\u64DA\r\n    this._validateClientData(data);\r\n\r\n    // \u6AA2\u67E5\u540D\u7A31\u662F\u5426\u91CD\u8907\r\n    if (await this.repository.nameExists(data.name)) {\r\n      throw new ConflictError(`\u5BA2\u6236\u540D\u7A31\u300C${data.name}\u300D\u5DF2\u5B58\u5728`);\r\n    }\r\n\r\n    // \u6AA2\u67E5\u7D71\u4E00\u7DE8\u865F\u662F\u5426\u91CD\u8907\r\n    if (data.tax_id && await this.repository.taxIdExists(data.tax_id)) {\r\n      throw new ConflictError(`\u7D71\u4E00\u7DE8\u865F\u300C${data.tax_id}\u300D\u5DF2\u5B58\u5728`);\r\n    }\r\n\r\n    // \u8A2D\u7F6E\u9ED8\u8A8D\u503C\r\n    if (!data.status) {\r\n      data.status = CLIENT_STATUS.ACTIVE;\r\n    }\r\n\r\n    // \u5275\u5EFA\u8A18\u9304\r\n    const id = await this.repository.create(data);\r\n\r\n    // \u8A18\u9304\u64CD\u4F5C\u65E5\u8A8C\uFF08\u53EF\u9078\uFF09\r\n    console.log(`[ClientService] Client created: ${id} by user ${context?.user?.id}`);\r\n\r\n    // \u8FD4\u56DE\u5B8C\u6574\u8A18\u9304\r\n    return this.repository.findById(id);\r\n  }\r\n\r\n  /**\r\n   * \u66F4\u65B0\u5BA2\u6236\r\n   * @param {number} id - \u5BA2\u6236 ID\r\n   * @param {Object} data - \u66F4\u65B0\u6578\u64DA\r\n   * @param {Object} context - \u4E0A\u4E0B\u6587\r\n   * @returns {Promise<Object>}\r\n   */\r\n  async update(id, data, context) {\r\n    // \u6AA2\u67E5\u5BA2\u6236\u662F\u5426\u5B58\u5728\r\n    const existing = await this.repository.findById(id);\r\n    if (!existing) {\r\n      throw new NotFoundError('\u5BA2\u6236\u4E0D\u5B58\u5728');\r\n    }\r\n\r\n    // \u9A57\u8B49\u6578\u64DA\uFF08\u90E8\u5206\u9A57\u8B49\uFF09\r\n    if (data.name) {\r\n      validate(data).required('name').throwIfFailed();\r\n      \r\n      // \u6AA2\u67E5\u540D\u7A31\u662F\u5426\u91CD\u8907\r\n      if (await this.repository.nameExists(data.name, id)) {\r\n        throw new ConflictError(`\u5BA2\u6236\u540D\u7A31\u300C${data.name}\u300D\u5DF2\u5B58\u5728`);\r\n      }\r\n    }\r\n\r\n    // \u6AA2\u67E5\u7D71\u4E00\u7DE8\u865F\u662F\u5426\u91CD\u8907\r\n    if (data.tax_id && await this.repository.taxIdExists(data.tax_id, id)) {\r\n      throw new ConflictError(`\u7D71\u4E00\u7DE8\u865F\u300C${data.tax_id}\u300D\u5DF2\u5B58\u5728`);\r\n    }\r\n\r\n    // \u57F7\u884C\u66F4\u65B0\r\n    const updated = await this.repository.update(id, data);\r\n\r\n    // \u8A18\u9304\u64CD\u4F5C\u65E5\u8A8C\r\n    console.log(`[ClientService] Client updated: ${id} by user ${context?.user?.id}`);\r\n\r\n    return updated;\r\n  }\r\n\r\n  /**\r\n   * \u522A\u9664\u5BA2\u6236\uFF08\u8EDF\u522A\u9664\uFF09\r\n   * @param {number} id - \u5BA2\u6236 ID\r\n   * @param {Object} context - \u4E0A\u4E0B\u6587\r\n   * @returns {Promise<boolean>}\r\n   */\r\n  async delete(id, context) {\r\n    // \u6AA2\u67E5\u5BA2\u6236\u662F\u5426\u5B58\u5728\r\n    const existing = await this.repository.findById(id);\r\n    if (!existing) {\r\n      throw new NotFoundError('\u5BA2\u6236\u4E0D\u5B58\u5728');\r\n    }\r\n\r\n    // \u6AA2\u67E5\u662F\u5426\u6709\u95DC\u806F\u7684\u555F\u7528\u670D\u52D9\r\n    const activeServices = await this.db.prepare(`\r\n      SELECT COUNT(*) as count \r\n      FROM client_services \r\n      WHERE client_id = ? AND is_active = 1\r\n    `).bind(id).first();\r\n\r\n    if (activeServices.count > 0) {\r\n      throw new ConflictError('\u5BA2\u6236\u6709\u555F\u7528\u7684\u670D\u52D9\uFF0C\u7121\u6CD5\u522A\u9664\u3002\u8ACB\u5148\u505C\u7528\u6240\u6709\u670D\u52D9\u3002');\r\n    }\r\n\r\n    // \u57F7\u884C\u8EDF\u522A\u9664\r\n    await this.repository.softDelete(id);\r\n\r\n    // \u8A18\u9304\u64CD\u4F5C\u65E5\u8A8C\r\n    console.log(`[ClientService] Client deleted: ${id} by user ${context?.user?.id}`);\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * \u9A57\u8B49\u5BA2\u6236\u6578\u64DA\r\n   * @private\r\n   */\r\n  _validateClientData(data) {\r\n    const validator = validate(data)\r\n      .required('name', '\u5BA2\u6236\u540D\u7A31\u70BA\u5FC5\u586B');\r\n\r\n    // \u9A57\u8B49\u7D71\u4E00\u7DE8\u865F\uFF08\u5982\u679C\u63D0\u4F9B\uFF09\r\n    if (data.tax_id) {\r\n      validator.taiwanTaxId('tax_id');\r\n    }\r\n\r\n    // \u9A57\u8B49\u96FB\u8A71\uFF08\u5982\u679C\u63D0\u4F9B\uFF09\r\n    if (data.phone) {\r\n      validator.taiwanPhone('phone');\r\n    }\r\n\r\n    // \u9A57\u8B49 Email\uFF08\u5982\u679C\u63D0\u4F9B\uFF09\r\n    if (data.email) {\r\n      validator.email('email');\r\n    }\r\n\r\n    // \u9A57\u8B49\u72C0\u614B\r\n    if (data.status) {\r\n      validator.enum('status', Object.values(CLIENT_STATUS));\r\n    }\r\n\r\n    validator.throwIfFailed();\r\n  }\r\n}\r\n\r\nexport default ClientService;\r\n\r\n", "/**\r\n * \u97FF\u61C9\u5DE5\u5177\u51FD\u6578\r\n * \u63D0\u4F9B\u7D71\u4E00\u7684 HTTP \u97FF\u61C9\u683C\u5F0F\r\n */\r\n\r\nimport { corsHeaders } from '../utils.js';\r\nimport { HTTP_STATUS } from '../config/constants.js';\r\n\r\n/**\r\n * \u6210\u529F\u97FF\u61C9\uFF08\u5E36\u6578\u64DA\uFF09\r\n * @param {any} data - \u97FF\u61C9\u6578\u64DA\r\n * @param {Object} meta - \u5143\u6578\u64DA\uFF08\u5206\u9801\u7B49\uFF09\r\n * @param {number} status - HTTP \u72C0\u614B\u78BC\r\n * @returns {Response}\r\n */\r\nexport function success(data, meta = null, status = HTTP_STATUS.OK) {\r\n  const response = {\r\n    success: true,\r\n    data\r\n  };\r\n\r\n  if (meta) {\r\n    response.meta = meta;\r\n  }\r\n\r\n  return new Response(JSON.stringify(response), {\r\n    status,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      ...corsHeaders\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * \u5275\u5EFA\u97FF\u61C9\uFF08201\uFF09\r\n * @param {any} data - \u5275\u5EFA\u7684\u8CC7\u6E90\r\n * @param {string} message - \u6210\u529F\u8A0A\u606F\r\n * @returns {Response}\r\n */\r\nexport function created(data, message = '\u5275\u5EFA\u6210\u529F') {\r\n  return success(data, { message }, HTTP_STATUS.CREATED);\r\n}\r\n\r\n/**\r\n * \u7121\u5167\u5BB9\u97FF\u61C9\uFF08204\uFF09\r\n * @returns {Response}\r\n */\r\nexport function noContent() {\r\n  return new Response(null, {\r\n    status: HTTP_STATUS.NO_CONTENT,\r\n    headers: corsHeaders\r\n  });\r\n}\r\n\r\n/**\r\n * \u932F\u8AA4\u97FF\u61C9\r\n * @param {string} message - \u932F\u8AA4\u8A0A\u606F\r\n * @param {string} code - \u932F\u8AA4\u4EE3\u78BC\r\n * @param {number} status - HTTP \u72C0\u614B\u78BC\r\n * @param {Object} details - \u932F\u8AA4\u8A73\u60C5\r\n * @returns {Response}\r\n */\r\nexport function error(message, code = 'ERROR', status = HTTP_STATUS.INTERNAL_ERROR, details = null) {\r\n  const response = {\r\n    success: false,\r\n    error: {\r\n      code,\r\n      message\r\n    }\r\n  };\r\n\r\n  if (details) {\r\n    response.error.details = details;\r\n  }\r\n\r\n  return new Response(JSON.stringify(response), {\r\n    status,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      ...corsHeaders\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * \u5206\u9801\u97FF\u61C9\r\n * @param {Array} data - \u6578\u64DA\u6578\u7D44\r\n * @param {number} total - \u7E3D\u8A18\u9304\u6578\r\n * @param {number} page - \u7576\u524D\u9801\u78BC\r\n * @param {number} pageSize - \u6BCF\u9801\u6578\u91CF\r\n * @returns {Response}\r\n */\r\nexport function paginated(data, total, page, pageSize) {\r\n  return success(data, {\r\n    total,\r\n    page,\r\n    pageSize,\r\n    totalPages: Math.ceil(total / pageSize)\r\n  });\r\n}\r\n\r\n/**\r\n * \u5217\u8868\u97FF\u61C9\uFF08\u4E0D\u5206\u9801\uFF09\r\n * @param {Array} data - \u6578\u64DA\u6578\u7D44\r\n * @returns {Response}\r\n */\r\nexport function list(data) {\r\n  return success(data, {\r\n    total: data.length\r\n  });\r\n}\r\n\r\nexport default {\r\n  success,\r\n  created,\r\n  noContent,\r\n  error,\r\n  paginated,\r\n  list\r\n};\r\n\r\n", "/**\r\n * Clients API Handler\r\n * \u8655\u7406\u5BA2\u6236\u76F8\u95DC\u7684 HTTP \u8ACB\u6C42\r\n */\r\n\r\nimport { ClientService } from '../services/ClientService.js';\r\nimport { success, created, noContent, paginated } from '../utils/response.util.js';\r\n\r\n/**\r\n * \u7372\u53D6\u5BA2\u6236\u5217\u8868\r\n * GET /api/clients\r\n */\r\nexport async function getClientList(env, request) {\r\n  const url = new URL(request.url);\r\n  \r\n  const options = {\r\n    page: parseInt(url.searchParams.get('page')) || 1,\r\n    pageSize: parseInt(url.searchParams.get('pageSize')) || 20,\r\n    status: url.searchParams.get('status'),\r\n    region: url.searchParams.get('region'),\r\n    search: url.searchParams.get('search')\r\n  };\r\n\r\n  const service = new ClientService(env.DB);\r\n  const result = await service.getList(options);\r\n\r\n  return paginated(\r\n    result.data,\r\n    result.meta.total,\r\n    result.meta.page,\r\n    result.meta.pageSize\r\n  );\r\n}\r\n\r\n/**\r\n * \u7372\u53D6\u5BA2\u6236\u8A73\u60C5\r\n * GET /api/clients/:id\r\n */\r\nexport async function getClientDetail(env, request) {\r\n  const id = parseInt(request.params.id);\r\n\r\n  const service = new ClientService(env.DB);\r\n  const client = await service.getDetail(id);\r\n\r\n  return success(client);\r\n}\r\n\r\n/**\r\n * \u5275\u5EFA\u5BA2\u6236\r\n * POST /api/clients\r\n */\r\nexport async function createClient(env, request) {\r\n  const data = await request.json();\r\n  const user = request.user;\r\n\r\n  const service = new ClientService(env.DB);\r\n  const client = await service.create(data, { user });\r\n\r\n  return created(client, '\u5BA2\u6236\u5275\u5EFA\u6210\u529F');\r\n}\r\n\r\n/**\r\n * \u66F4\u65B0\u5BA2\u6236\r\n * PUT /api/clients/:id\r\n */\r\nexport async function updateClient(env, request) {\r\n  const id = parseInt(request.params.id);\r\n  const data = await request.json();\r\n  const user = request.user;\r\n\r\n  const service = new ClientService(env.DB);\r\n  const client = await service.update(id, data, { user });\r\n\r\n  return success(client);\r\n}\r\n\r\n/**\r\n * \u522A\u9664\u5BA2\u6236\r\n * DELETE /api/clients/:id\r\n */\r\nexport async function deleteClient(env, request) {\r\n  const id = parseInt(request.params.id);\r\n  const user = request.user;\r\n\r\n  const service = new ClientService(env.DB);\r\n  await service.delete(id, { user });\r\n\r\n  return noContent();\r\n}\r\n\r\n/**\r\n * \u7372\u53D6\u5BA2\u6236\u670D\u52D9\u914D\u7F6E\r\n * GET /api/client-services\r\n */\r\nexport async function getClientServices(env, request) {\r\n  const url = new URL(request.url);\r\n  const clientId = url.searchParams.get('client_id');\r\n\r\n  let query = `\r\n    SELECT \r\n      cs.*,\r\n      c.name as client_name\r\n    FROM client_services cs\r\n    JOIN clients c ON cs.client_id = c.id\r\n    WHERE 1=1\r\n  `;\r\n  const params = [];\r\n\r\n  if (clientId) {\r\n    query += ` AND cs.client_id = ?`;\r\n    params.push(clientId);\r\n  }\r\n\r\n  query += ` ORDER BY c.name, cs.service_type`;\r\n\r\n  const result = await env.DB.prepare(query).bind(...params).all();\r\n\r\n  return success({ data: result.results || [] });\r\n}\r\n\r\n/**\r\n * \u7372\u53D6\u5BA2\u6236\u4E92\u52D5\u8A18\u9304\r\n * GET /api/client-interactions\r\n */\r\nexport async function getClientInteractions(env, request) {\r\n  const url = new URL(request.url);\r\n  const clientId = url.searchParams.get('client_id');\r\n\r\n  let query = `\r\n    SELECT \r\n      ci.*,\r\n      c.name as client_name\r\n    FROM client_interactions ci\r\n    JOIN clients c ON ci.client_id = c.id\r\n    WHERE 1=1\r\n  `;\r\n  const params = [];\r\n\r\n  if (clientId) {\r\n    query += ` AND ci.client_id = ?`;\r\n    params.push(clientId);\r\n  }\r\n\r\n  query += ` ORDER BY ci.interaction_date DESC`;\r\n\r\n  const result = await env.DB.prepare(query).bind(...params).all();\r\n\r\n  return success({ data: result.results || [] });\r\n}\r\n\r\nexport default {\r\n  getClientList,\r\n  getClientDetail,\r\n  createClient,\r\n  updateClient,\r\n  deleteClient,\r\n  getClientServices,\r\n  getClientInteractions\r\n};\r\n\r\n", "/**\r\n * Clients Routes\r\n * \u8A3B\u518A\u5BA2\u6236\u76F8\u95DC\u7684\u6240\u6709\u8DEF\u7531\r\n */\r\n\r\nimport {\r\n  getClientList,\r\n  getClientDetail,\r\n  createClient,\r\n  updateClient,\r\n  deleteClient,\r\n  getClientServices,\r\n  getClientInteractions\r\n} from '../handlers/clients.handler.js';\r\n\r\nimport { withAuth, withAdmin } from '../middleware/auth.middleware.js';\r\nimport { withErrorHandler } from '../middleware/error.middleware.js';\r\n\r\n/**\r\n * \u7D44\u5408\u4E2D\u9593\u4EF6\r\n * \u4F7F\u7528\u51FD\u6578\u7D44\u5408\u6A21\u5F0F\uFF0C\u5F9E\u53F3\u5230\u5DE6\u57F7\u884C\r\n */\r\nfunction compose(...middlewares) {\r\n  return (handler) => {\r\n    return middlewares.reduceRight(\r\n      (wrapped, middleware) => middleware(wrapped),\r\n      handler\r\n    );\r\n  };\r\n}\r\n\r\n/**\r\n * \u8A3B\u518A\u5BA2\u6236\u8DEF\u7531\r\n * @param {Router} router - \u8DEF\u7531\u5668\u5BE6\u4F8B\r\n */\r\nexport function registerClientRoutes(router) {\r\n  // \u6240\u6709\u5BA2\u6236\u8DEF\u7531\u90FD\u9700\u8981\u8A8D\u8B49\u548C\u932F\u8AA4\u8655\u7406\r\n  const authHandler = compose(withErrorHandler, withAuth);\r\n  const adminHandler = compose(withErrorHandler, withAdmin);\r\n\r\n  // GET /api/clients - \u7372\u53D6\u5BA2\u6236\u5217\u8868\uFF08\u6240\u6709\u7528\u6236\uFF09\r\n  router.get('/api/clients', authHandler(getClientList));\r\n\r\n  // GET /api/clients/:id - \u7372\u53D6\u5BA2\u6236\u8A73\u60C5\uFF08\u6240\u6709\u7528\u6236\uFF09\r\n  router.get('/api/clients/:id', authHandler(getClientDetail));\r\n\r\n  // POST /api/clients - \u5275\u5EFA\u5BA2\u6236\uFF08\u7BA1\u7406\u54E1\uFF09\r\n  router.post('/api/clients', adminHandler(createClient));\r\n\r\n  // PUT /api/clients/:id - \u66F4\u65B0\u5BA2\u6236\uFF08\u7BA1\u7406\u54E1\uFF09\r\n  router.put('/api/clients/:id', adminHandler(updateClient));\r\n\r\n  // DELETE /api/clients/:id - \u522A\u9664\u5BA2\u6236\uFF08\u7BA1\u7406\u54E1\uFF09\r\n  router.delete('/api/clients/:id', adminHandler(deleteClient));\r\n\r\n  // GET /api/client-services - \u7372\u53D6\u5BA2\u6236\u670D\u52D9\u914D\u7F6E\uFF08\u6240\u6709\u7528\u6236\uFF09\r\n  router.get('/api/client-services', authHandler(getClientServices));\r\n\r\n  // GET /api/client-interactions - \u7372\u53D6\u5BA2\u6236\u4E92\u52D5\u8A18\u9304\uFF08\u6240\u6709\u7528\u6236\uFF09\r\n  router.get('/api/client-interactions', authHandler(getClientInteractions));\r\n}\r\n\r\nexport default registerClientRoutes;\r\n\r\n", "/**\r\n * Task Repository\r\n * \u8CA0\u8CAC\u4EFB\u52D9\u8868\u7684\u6240\u6709\u8CC7\u6599\u5EAB\u64CD\u4F5C\r\n */\r\n\r\nimport { BaseRepository } from './BaseRepository.js';\r\nimport { TABLES, FIELDS } from '../config/constants.js';\r\n\r\nexport class TaskRepository extends BaseRepository {\r\n  constructor(db) {\r\n    super(db, TABLES.TASKS);\r\n  }\r\n\r\n  /**\r\n   * \u67E5\u8A62\u4EFB\u52D9\uFF08\u5E36\u5275\u5EFA\u8005\u548C\u5206\u914D\u8005\u4FE1\u606F\uFF09\r\n   * @param {number} id - \u4EFB\u52D9 ID\r\n   * @returns {Promise<Object|null>}\r\n   */\r\n  async findByIdWithUsers(id) {\r\n    const query = `\r\n      SELECT \r\n        t.*,\r\n        u_assigned.username as assigned_user_name,\r\n        u_created.username as created_by_user_name,\r\n        c.name as client_name\r\n      FROM ${TABLES.TASKS} t\r\n      LEFT JOIN ${TABLES.USERS} u_assigned ON t.${FIELDS.ASSIGNED_USER_ID} = u_assigned.id\r\n      LEFT JOIN ${TABLES.USERS} u_created ON t.${FIELDS.CREATED_BY_USER_ID} = u_created.id\r\n      LEFT JOIN ${TABLES.CLIENTS} c ON t.${FIELDS.CLIENT_ID} = c.id\r\n      WHERE t.${FIELDS.ID} = ?\r\n    `;\r\n\r\n    return this.rawFirst(query, [id]);\r\n  }\r\n\r\n  /**\r\n   * \u67E5\u8A62\u4EFB\u52D9\u5217\u8868\uFF08\u5E36\u95DC\u806F\u4FE1\u606F\uFF09\r\n   * @param {Object} filters - \u904E\u6FFE\u689D\u4EF6\r\n   * @param {Object} options - \u67E5\u8A62\u9078\u9805\r\n   * @returns {Promise<Array>}\r\n   */\r\n  async findAllWithUsers(filters = {}, options = {}) {\r\n    let query = `\r\n      SELECT \r\n        t.*,\r\n        u_assigned.username as assigned_user_name,\r\n        u_created.username as created_by_user_name,\r\n        c.name as client_name\r\n      FROM ${TABLES.TASKS} t\r\n      LEFT JOIN ${TABLES.USERS} u_assigned ON t.${FIELDS.ASSIGNED_USER_ID} = u_assigned.id\r\n      LEFT JOIN ${TABLES.USERS} u_created ON t.${FIELDS.CREATED_BY_USER_ID} = u_created.id\r\n      LEFT JOIN ${TABLES.CLIENTS} c ON t.${FIELDS.CLIENT_ID} = c.id\r\n    `;\r\n\r\n    const conditions = [];\r\n    const params = [];\r\n\r\n    // \u69CB\u5EFA\u904E\u6FFE\u689D\u4EF6\r\n    if (filters.status) {\r\n      conditions.push(`t.status = ?`);\r\n      params.push(filters.status);\r\n    }\r\n\r\n    if (filters.task_type) {\r\n      conditions.push(`t.task_type = ?`);\r\n      params.push(filters.task_type);\r\n    }\r\n\r\n    if (filters.category) {\r\n      conditions.push(`t.category = ?`);\r\n      params.push(filters.category);\r\n    }\r\n\r\n    if (filters.assigned_user_id) {\r\n      conditions.push(`t.${FIELDS.ASSIGNED_USER_ID} = ?`);\r\n      params.push(filters.assigned_user_id);\r\n    }\r\n\r\n    if (filters.client_id) {\r\n      conditions.push(`t.${FIELDS.CLIENT_ID} = ?`);\r\n      params.push(filters.client_id);\r\n    }\r\n\r\n    if (conditions.length > 0) {\r\n      query += ` WHERE ${conditions.join(' AND ')}`;\r\n    }\r\n\r\n    // \u6392\u5E8F\r\n    const { orderBy = FIELDS.CREATED_AT, order = 'DESC' } = options;\r\n    query += ` ORDER BY t.${orderBy} ${order}`;\r\n\r\n    return this.raw(query, params);\r\n  }\r\n\r\n  /**\r\n   * \u67E5\u8A62\u7528\u6236\u7684\u4EFB\u52D9\u7D71\u8A08\r\n   * @param {number} userId - \u7528\u6236 ID\r\n   * @returns {Promise<Object>}\r\n   */\r\n  async getUserTaskStats(userId) {\r\n    const query = `\r\n      SELECT \r\n        COUNT(*) as total_tasks,\r\n        SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as completed_tasks,\r\n        SUM(CASE WHEN status = 'in_progress' THEN 1 ELSE 0 END) as in_progress_tasks,\r\n        SUM(CASE WHEN status = 'pending' THEN 1 ELSE 0 END) as pending_tasks\r\n      FROM ${TABLES.TASKS}\r\n      WHERE ${FIELDS.ASSIGNED_USER_ID} = ?\r\n    `;\r\n\r\n    return this.rawFirst(query, [userId]);\r\n  }\r\n\r\n  /**\r\n   * \u67E5\u8A62\u5373\u5C07\u5230\u671F\u7684\u4EFB\u52D9\r\n   * @param {number} days - \u5E7E\u5929\u5167\u5230\u671F\r\n   * @returns {Promise<Array>}\r\n   */\r\n  async findDueSoon(days = 3) {\r\n    const query = `\r\n      SELECT t.*, c.name as client_name\r\n      FROM ${TABLES.TASKS} t\r\n      LEFT JOIN ${TABLES.CLIENTS} c ON t.${FIELDS.CLIENT_ID} = c.id\r\n      WHERE t.status NOT IN ('completed', 'cancelled')\r\n        AND t.due_date IS NOT NULL\r\n        AND t.due_date <= datetime('now', '+${days} days')\r\n        AND t.due_date >= datetime('now')\r\n      ORDER BY t.due_date ASC\r\n    `;\r\n\r\n    return this.raw(query);\r\n  }\r\n\r\n  /**\r\n   * \u67E5\u8A62\u903E\u671F\u7684\u4EFB\u52D9\r\n   * @returns {Promise<Array>}\r\n   */\r\n  async findOverdue() {\r\n    const query = `\r\n      SELECT t.*, c.name as client_name\r\n      FROM ${TABLES.TASKS} t\r\n      LEFT JOIN ${TABLES.CLIENTS} c ON t.${FIELDS.CLIENT_ID} = c.id\r\n      WHERE t.status NOT IN ('completed', 'cancelled')\r\n        AND t.due_date IS NOT NULL\r\n        AND t.due_date < datetime('now')\r\n      ORDER BY t.due_date ASC\r\n    `;\r\n\r\n    return this.raw(query);\r\n  }\r\n}\r\n\r\nexport default TaskRepository;\r\n\r\n", "/**\r\n * Task Service\r\n * \u8CA0\u8CAC\u4EFB\u52D9\u76F8\u95DC\u7684\u696D\u52D9\u908F\u8F2F\r\n */\r\n\r\nimport { TaskRepository } from '../repositories/TaskRepository.js';\r\nimport { ValidationError, NotFoundError, ConflictError } from '../middleware/error.middleware.js';\r\nimport { validate } from '../utils/validation.util.js';\r\nimport { TASK_STATUS, TASK_TYPE, TASK_CATEGORY } from '../config/constants.js';\r\n\r\nexport class TaskService {\r\n  constructor(db) {\r\n    this.repository = new TaskRepository(db);\r\n  }\r\n\r\n  /**\r\n   * \u7372\u53D6\u4EFB\u52D9\u5217\u8868\r\n   * @param {Object} options - \u67E5\u8A62\u9078\u9805\r\n   * @returns {Promise<Object>}\r\n   */\r\n  async getList(options = {}) {\r\n    const {\r\n      page = 1,\r\n      pageSize = 20,\r\n      status,\r\n      task_type,\r\n      category,\r\n      assigned_user_id,\r\n      client_id,\r\n      search\r\n    } = options;\r\n\r\n    // \u69CB\u5EFA\u904E\u6FFE\u689D\u4EF6\r\n    const filters = {};\r\n    if (status) filters.status = status;\r\n    if (task_type) filters.task_type = task_type;\r\n    if (category) filters.category = category;\r\n    if (assigned_user_id) filters.assigned_user_id = assigned_user_id;\r\n    if (client_id) filters.client_id = client_id;\r\n\r\n    // \u67E5\u8A62\u6578\u64DA\r\n    let allTasks = await this.repository.findAllWithUsers(filters);\r\n\r\n    // \u641C\u5C0B\u904E\u6FFE\r\n    if (search) {\r\n      const searchLower = search.toLowerCase();\r\n      allTasks = allTasks.filter(task =>\r\n        task.title.toLowerCase().includes(searchLower) ||\r\n        (task.description && task.description.toLowerCase().includes(searchLower))\r\n      );\r\n    }\r\n\r\n    // \u5206\u9801\r\n    const total = allTasks.length;\r\n    const start = (page - 1) * pageSize;\r\n    const end = start + pageSize;\r\n    const tasks = allTasks.slice(start, end);\r\n\r\n    return {\r\n      data: tasks,\r\n      meta: {\r\n        total,\r\n        page,\r\n        pageSize,\r\n        totalPages: Math.ceil(total / pageSize)\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * \u7372\u53D6\u4EFB\u52D9\u8A73\u60C5\r\n   * @param {number} id - \u4EFB\u52D9 ID\r\n   * @returns {Promise<Object>}\r\n   */\r\n  async getDetail(id) {\r\n    const task = await this.repository.findByIdWithUsers(id);\r\n    \r\n    if (!task) {\r\n      throw new NotFoundError('\u4EFB\u52D9\u4E0D\u5B58\u5728');\r\n    }\r\n\r\n    return task;\r\n  }\r\n\r\n  /**\r\n   * \u5275\u5EFA\u4EFB\u52D9\r\n   * @param {Object} data - \u4EFB\u52D9\u6578\u64DA\r\n   * @param {Object} context - \u4E0A\u4E0B\u6587\uFF08\u7576\u524D\u7528\u6236\u7B49\uFF09\r\n   * @returns {Promise<Object>}\r\n   */\r\n  async create(data, context) {\r\n    // \u9A57\u8B49\u6578\u64DA\r\n    this._validateTaskData(data);\r\n\r\n    // \u8A2D\u7F6E\u9ED8\u8A8D\u503C\r\n    if (!data.status) {\r\n      data.status = TASK_STATUS.PENDING;\r\n    }\r\n    if (!data.task_type) {\r\n      data.task_type = TASK_TYPE.TASK;\r\n    }\r\n    if (!data.priority) {\r\n      data.priority = 'medium';\r\n    }\r\n\r\n    // \u8A2D\u7F6E\u5275\u5EFA\u8005\r\n    if (context?.user?.id) {\r\n      data.created_by_user_id = context.user.id;\r\n    }\r\n\r\n    // \u5275\u5EFA\u8A18\u9304\r\n    const id = await this.repository.create(data);\r\n\r\n    // \u8A18\u9304\u64CD\u4F5C\u65E5\u8A8C\r\n    console.log(`[TaskService] Task created: ${id} by user ${context?.user?.id}`);\r\n\r\n    // \u8FD4\u56DE\u5B8C\u6574\u8A18\u9304\r\n    return this.repository.findByIdWithUsers(id);\r\n  }\r\n\r\n  /**\r\n   * \u66F4\u65B0\u4EFB\u52D9\r\n   * @param {number} id - \u4EFB\u52D9 ID\r\n   * @param {Object} data - \u66F4\u65B0\u6578\u64DA\r\n   * @param {Object} context - \u4E0A\u4E0B\u6587\r\n   * @returns {Promise<Object>}\r\n   */\r\n  async update(id, data, context) {\r\n    // \u6AA2\u67E5\u4EFB\u52D9\u662F\u5426\u5B58\u5728\r\n    const existing = await this.repository.findById(id);\r\n    if (!existing) {\r\n      throw new NotFoundError('\u4EFB\u52D9\u4E0D\u5B58\u5728');\r\n    }\r\n\r\n    // \u9A57\u8B49\u6578\u64DA\uFF08\u90E8\u5206\u9A57\u8B49\uFF09\r\n    if (data.title) {\r\n      validate(data).required('title', '\u4EFB\u52D9\u6A19\u984C\u70BA\u5FC5\u586B').throwIfFailed();\r\n    }\r\n\r\n    if (data.status) {\r\n      validate(data)\r\n        .enum('status', Object.values(TASK_STATUS))\r\n        .throwIfFailed();\r\n    }\r\n\r\n    // \u5982\u679C\u6A19\u8A18\u70BA\u5B8C\u6210\uFF0C\u8A18\u9304\u5B8C\u6210\u6642\u9593\r\n    if (data.status === TASK_STATUS.COMPLETED && !data.completed_date) {\r\n      data.completed_date = new Date().toISOString();\r\n    }\r\n\r\n    // \u57F7\u884C\u66F4\u65B0\r\n    const updated = await this.repository.update(id, data);\r\n\r\n    // \u8A18\u9304\u64CD\u4F5C\u65E5\u8A8C\r\n    console.log(`[TaskService] Task updated: ${id} by user ${context?.user?.id}`);\r\n\r\n    return this.repository.findByIdWithUsers(id);\r\n  }\r\n\r\n  /**\r\n   * \u522A\u9664\u4EFB\u52D9\r\n   * @param {number} id - \u4EFB\u52D9 ID\r\n   * @param {Object} context - \u4E0A\u4E0B\u6587\r\n   * @returns {Promise<boolean>}\r\n   */\r\n  async delete(id, context) {\r\n    // \u6AA2\u67E5\u4EFB\u52D9\u662F\u5426\u5B58\u5728\r\n    const existing = await this.repository.findById(id);\r\n    if (!existing) {\r\n      throw new NotFoundError('\u4EFB\u52D9\u4E0D\u5B58\u5728');\r\n    }\r\n\r\n    // \u57F7\u884C\u8EDF\u522A\u9664\r\n    await this.repository.softDelete(id);\r\n\r\n    // \u8A18\u9304\u64CD\u4F5C\u65E5\u8A8C\r\n    console.log(`[TaskService] Task deleted: ${id} by user ${context?.user?.id}`);\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * \u7372\u53D6\u7528\u6236\u4EFB\u52D9\u7D71\u8A08\r\n   * @param {number} userId - \u7528\u6236 ID\r\n   * @returns {Promise<Object>}\r\n   */\r\n  async getUserStats(userId) {\r\n    return this.repository.getUserTaskStats(userId);\r\n  }\r\n\r\n  /**\r\n   * \u7372\u53D6\u5373\u5C07\u5230\u671F\u7684\u4EFB\u52D9\r\n   * @param {number} days - \u5929\u6578\r\n   * @returns {Promise<Array>}\r\n   */\r\n  async getDueSoonTasks(days = 3) {\r\n    return this.repository.findDueSoon(days);\r\n  }\r\n\r\n  /**\r\n   * \u7372\u53D6\u903E\u671F\u4EFB\u52D9\r\n   * @returns {Promise<Array>}\r\n   */\r\n  async getOverdueTasks() {\r\n    return this.repository.findOverdue();\r\n  }\r\n\r\n  /**\r\n   * \u9A57\u8B49\u4EFB\u52D9\u6578\u64DA\r\n   * @private\r\n   */\r\n  _validateTaskData(data) {\r\n    const validator = validate(data)\r\n      .required('title', '\u4EFB\u52D9\u6A19\u984C\u70BA\u5FC5\u586B');\r\n\r\n    // \u9A57\u8B49\u72C0\u614B\r\n    if (data.status) {\r\n      validator.enum('status', Object.values(TASK_STATUS));\r\n    }\r\n\r\n    // \u9A57\u8B49\u4EFB\u52D9\u985E\u578B\r\n    if (data.task_type) {\r\n      validator.enum('task_type', Object.values(TASK_TYPE));\r\n    }\r\n\r\n    // \u9A57\u8B49\u5206\u985E\r\n    if (data.category) {\r\n      validator.enum('category', Object.values(TASK_CATEGORY));\r\n    }\r\n\r\n    validator.throwIfFailed();\r\n  }\r\n}\r\n\r\nexport default TaskService;\r\n\r\n", "/**\r\n * Tasks API Handler\r\n * \u8655\u7406\u4EFB\u52D9\u76F8\u95DC\u7684 HTTP \u8ACB\u6C42\r\n */\r\n\r\nimport { TaskService } from '../services/TaskService.js';\r\nimport { success, created, noContent, paginated } from '../utils/response.util.js';\r\n\r\n/**\r\n * \u7372\u53D6\u4EFB\u52D9\u5217\u8868\r\n * GET /api/tasks\r\n */\r\nexport async function getTaskList(env, request) {\r\n  const url = new URL(request.url);\r\n  \r\n  const options = {\r\n    page: parseInt(url.searchParams.get('page')) || 1,\r\n    pageSize: parseInt(url.searchParams.get('pageSize')) || 20,\r\n    status: url.searchParams.get('status'),\r\n    task_type: url.searchParams.get('task_type'),\r\n    category: url.searchParams.get('category'),\r\n    assigned_user_id: url.searchParams.get('assigned_user_id') ? parseInt(url.searchParams.get('assigned_user_id')) : null,\r\n    client_id: url.searchParams.get('client_id') ? parseInt(url.searchParams.get('client_id')) : null,\r\n    search: url.searchParams.get('search')\r\n  };\r\n\r\n  const service = new TaskService(env.DB);\r\n  const result = await service.getList(options);\r\n\r\n  return paginated(\r\n    result.data,\r\n    result.meta.total,\r\n    result.meta.page,\r\n    result.meta.pageSize\r\n  );\r\n}\r\n\r\n/**\r\n * \u7372\u53D6\u4EFB\u52D9\u8A73\u60C5\r\n * GET /api/tasks/:id\r\n */\r\nexport async function getTaskDetail(env, request) {\r\n  const id = parseInt(request.params.id);\r\n\r\n  const service = new TaskService(env.DB);\r\n  const task = await service.getDetail(id);\r\n\r\n  return success(task);\r\n}\r\n\r\n/**\r\n * \u5275\u5EFA\u4EFB\u52D9\r\n * POST /api/tasks\r\n */\r\nexport async function createTask(env, request) {\r\n  const data = await request.json();\r\n  const user = request.user;\r\n\r\n  const service = new TaskService(env.DB);\r\n  const task = await service.create(data, { user });\r\n\r\n  return created(task, '\u4EFB\u52D9\u5275\u5EFA\u6210\u529F');\r\n}\r\n\r\n/**\r\n * \u66F4\u65B0\u4EFB\u52D9\r\n * PUT /api/tasks/:id\r\n */\r\nexport async function updateTask(env, request) {\r\n  const id = parseInt(request.params.id);\r\n  const data = await request.json();\r\n  const user = request.user;\r\n\r\n  const service = new TaskService(env.DB);\r\n  const task = await service.update(id, data, { user });\r\n\r\n  return success(task);\r\n}\r\n\r\n/**\r\n * \u522A\u9664\u4EFB\u52D9\r\n * DELETE /api/tasks/:id\r\n */\r\nexport async function deleteTask(env, request) {\r\n  const id = parseInt(request.params.id);\r\n  const user = request.user;\r\n\r\n  const service = new TaskService(env.DB);\r\n  await service.delete(id, { user });\r\n\r\n  return noContent();\r\n}\r\n\r\n/**\r\n * \u7372\u53D6\u7528\u6236\u4EFB\u52D9\u7D71\u8A08\r\n * GET /api/tasks/stats/user/:userId\r\n */\r\nexport async function getUserTaskStats(env, request) {\r\n  const userId = parseInt(request.params.userId);\r\n\r\n  const service = new TaskService(env.DB);\r\n  const stats = await service.getUserStats(userId);\r\n\r\n  return success(stats);\r\n}\r\n\r\n/**\r\n * \u7372\u53D6\u5373\u5C07\u5230\u671F\u7684\u4EFB\u52D9\r\n * GET /api/tasks/due-soon\r\n */\r\nexport async function getDueSoonTasks(env, request) {\r\n  const url = new URL(request.url);\r\n  const days = parseInt(url.searchParams.get('days')) || 3;\r\n\r\n  const service = new TaskService(env.DB);\r\n  const tasks = await service.getDueSoonTasks(days);\r\n\r\n  return success(tasks);\r\n}\r\n\r\n/**\r\n * \u7372\u53D6\u903E\u671F\u4EFB\u52D9\r\n * GET /api/tasks/overdue\r\n */\r\nexport async function getOverdueTasks(env, request) {\r\n  const service = new TaskService(env.DB);\r\n  const tasks = await service.getOverdueTasks();\r\n\r\n  return success(tasks);\r\n}\r\n\r\n/**\r\n * \u83B7\u53D6\u591A\u9636\u6BB5\u4EFB\u52A1\r\n * GET /api/tasks/multi-stage\r\n */\r\nexport async function getMultiStageTasks(env, request) {\r\n  const url = new URL(request.url);\r\n  const status = url.searchParams.get('status');\r\n  const assignedUserId = url.searchParams.get('assigned_user_id');\r\n\r\n  const options = {\r\n    task_type: 'task',  // \u6682\u65F6\u8FD4\u56DE\u666E\u901A\u4EFB\u52A1\r\n    status,\r\n    assigned_user_id: assignedUserId ? parseInt(assignedUserId) : null\r\n  };\r\n\r\n  const service = new TaskService(env.DB);\r\n  const result = await service.getList(options);\r\n\r\n  return success({ tasks: result.data, meta: result.meta });\r\n}\r\n\r\n/**\r\n * \u83B7\u53D6\u5468\u671F\u4EFB\u52A1\r\n * GET /api/tasks/recurring\r\n */\r\nexport async function getRecurringTasks(env, request) {\r\n  const url = new URL(request.url);\r\n  const year = url.searchParams.get('year');\r\n  const month = url.searchParams.get('month');\r\n\r\n  const options = {\r\n    task_type: 'recurring',\r\n    category: 'recurring'\r\n  };\r\n\r\n  const service = new TaskService(env.DB);\r\n  const result = await service.getList(options);\r\n\r\n  return success(result.data);\r\n}\r\n\r\nexport default {\r\n  getTaskList,\r\n  getTaskDetail,\r\n  createTask,\r\n  updateTask,\r\n  deleteTask,\r\n  getUserTaskStats,\r\n  getDueSoonTasks,\r\n  getOverdueTasks,\r\n  getMultiStageTasks,\r\n  getRecurringTasks\r\n};\r\n\r\n", "/**\r\n * Tasks Routes\r\n * \u8A3B\u518A\u4EFB\u52D9\u76F8\u95DC\u7684\u6240\u6709\u8DEF\u7531\r\n */\r\n\r\nimport {\r\n  getTaskList,\r\n  getTaskDetail,\r\n  createTask,\r\n  updateTask,\r\n  deleteTask,\r\n  getUserTaskStats,\r\n  getDueSoonTasks,\r\n  getOverdueTasks,\r\n  getMultiStageTasks,\r\n  getRecurringTasks\r\n} from '../handlers/tasks.handler.js';\r\n\r\nimport { withAuth, withAdmin } from '../middleware/auth.middleware.js';\r\nimport { withErrorHandler } from '../middleware/error.middleware.js';\r\n\r\n/**\r\n * \u7D44\u5408\u4E2D\u9593\u4EF6\r\n */\r\nfunction compose(...middlewares) {\r\n  return (handler) => {\r\n    return middlewares.reduceRight(\r\n      (wrapped, middleware) => middleware(wrapped),\r\n      handler\r\n    );\r\n  };\r\n}\r\n\r\n/**\r\n * \u8A3B\u518A\u4EFB\u52D9\u8DEF\u7531\r\n * @param {Router} router - \u8DEF\u7531\u5668\u5BE6\u4F8B\r\n */\r\nexport function registerTaskRoutes(router) {\r\n  // \u6240\u6709\u4EFB\u52D9\u8DEF\u7531\u90FD\u9700\u8981\u8A8D\u8B49\u548C\u932F\u8AA4\u8655\u7406\r\n  const authHandler = compose(withErrorHandler, withAuth);\r\n  const adminHandler = compose(withErrorHandler, withAdmin);\r\n\r\n  // GET /api/tasks - \u7372\u53D6\u4EFB\u52D9\u5217\u8868\uFF08\u6240\u6709\u7528\u6236\uFF09\r\n  router.get('/api/tasks', authHandler(getTaskList));\r\n\r\n  // GET /api/tasks/multi-stage - \u7372\u53D6\u591A\u968E\u6BB5\u4EFB\u52D9\uFF08\u6240\u6709\u7528\u6236\uFF09\r\n  router.get('/api/tasks/multi-stage', authHandler(getMultiStageTasks));\r\n\r\n  // GET /api/tasks/recurring - \u7372\u53D6\u5468\u671F\u4EFB\u52D9\uFF08\u6240\u6709\u7528\u6236\uFF09\r\n  router.get('/api/tasks/recurring', authHandler(getRecurringTasks));\r\n\r\n  // GET /api/tasks/due-soon - \u7372\u53D6\u5373\u5C07\u5230\u671F\u7684\u4EFB\u52D9\uFF08\u6240\u6709\u7528\u6236\uFF09\r\n  router.get('/api/tasks/due-soon', authHandler(getDueSoonTasks));\r\n\r\n  // GET /api/tasks/overdue - \u7372\u53D6\u903E\u671F\u4EFB\u52D9\uFF08\u6240\u6709\u7528\u6236\uFF09\r\n  router.get('/api/tasks/overdue', authHandler(getOverdueTasks));\r\n\r\n  // GET /api/tasks/stats/user/:userId - \u7372\u53D6\u7528\u6236\u4EFB\u52D9\u7D71\u8A08\uFF08\u6240\u6709\u7528\u6236\uFF09\r\n  router.get('/api/tasks/stats/user/:userId', authHandler(getUserTaskStats));\r\n\r\n  // GET /api/tasks/:id - \u7372\u53D6\u4EFB\u52D9\u8A73\u60C5\uFF08\u6240\u6709\u7528\u6236\uFF09\r\n  router.get('/api/tasks/:id', authHandler(getTaskDetail));\r\n\r\n  // POST /api/tasks - \u5275\u5EFA\u4EFB\u52D9\uFF08\u6240\u6709\u7528\u6236\uFF09\r\n  router.post('/api/tasks', authHandler(createTask));\r\n\r\n  // PUT /api/tasks/:id - \u66F4\u65B0\u4EFB\u52D9\uFF08\u6240\u6709\u7528\u6236\uFF09\r\n  router.put('/api/tasks/:id', authHandler(updateTask));\r\n\r\n  // DELETE /api/tasks/:id - \u522A\u9664\u4EFB\u52D9\uFF08\u7BA1\u7406\u54E1\uFF09\r\n  router.delete('/api/tasks/:id', adminHandler(deleteTask));\r\n}\r\n\r\nexport default registerTaskRoutes;\r\n\r\n", "/**\r\n * Employee Repository\r\n * \u8CA0\u8CAC\u54E1\u5DE5\u8868\u7684\u6240\u6709\u8CC7\u6599\u5EAB\u64CD\u4F5C\r\n */\r\n\r\nimport { BaseRepository } from './BaseRepository.js';\r\nimport { TABLES, FIELDS } from '../config/constants.js';\r\n\r\nexport class EmployeeRepository extends BaseRepository {\r\n  constructor(db) {\r\n    super(db, TABLES.EMPLOYEES);\r\n  }\r\n\r\n  /**\r\n   * \u6839\u64DA\u540D\u7A31\u67E5\u8A62\u54E1\u5DE5\r\n   * @param {string} name - \u54E1\u5DE5\u59D3\u540D\r\n   * @returns {Promise<Object|null>}\r\n   */\r\n  async findByName(name) {\r\n    return this.findOne({ name });\r\n  }\r\n\r\n  /**\r\n   * \u6AA2\u67E5\u540D\u7A31\u662F\u5426\u5DF2\u5B58\u5728\r\n   * @param {string} name - \u54E1\u5DE5\u59D3\u540D\r\n   * @param {number} excludeId - \u6392\u9664\u7684 ID\r\n   * @returns {Promise<boolean>}\r\n   */\r\n  async nameExists(name, excludeId = null) {\r\n    let query = `SELECT ${FIELDS.ID} FROM ${this.tableName} WHERE name = ?`;\r\n    const params = [name];\r\n\r\n    if (excludeId) {\r\n      query += ` AND ${FIELDS.ID} != ?`;\r\n      params.push(excludeId);\r\n    }\r\n\r\n    const result = await this.db.prepare(query).bind(...params).first();\r\n    return !!result;\r\n  }\r\n\r\n  /**\r\n   * \u7372\u53D6\u555F\u7528\u7684\u54E1\u5DE5\r\n   * @returns {Promise<Array>}\r\n   */\r\n  async findActive() {\r\n    return this.findAll({ is_active: 1 }, { orderBy: 'name', order: 'ASC' });\r\n  }\r\n\r\n  /**\r\n   * \u7372\u53D6\u54E1\u5DE5\u53CA\u5176\u95DC\u806F\u7684\u7528\u6236\u4FE1\u606F\r\n   * @param {number} id - \u54E1\u5DE5 ID\r\n   * @returns {Promise<Object|null>}\r\n   */\r\n  async findByIdWithUser(id) {\r\n    const query = `\r\n      SELECT \r\n        e.*,\r\n        u.id as user_id,\r\n        u.username,\r\n        u.role\r\n      FROM ${TABLES.EMPLOYEES} e\r\n      LEFT JOIN ${TABLES.USERS} u ON e.id = u.employee_id\r\n      WHERE e.${FIELDS.ID} = ?\r\n    `;\r\n\r\n    return this.rawFirst(query, [id]);\r\n  }\r\n}\r\n\r\nexport default EmployeeRepository;\r\n\r\n", "/**\r\n * Employee Service\r\n * \u8CA0\u8CAC\u54E1\u5DE5\u76F8\u95DC\u7684\u696D\u52D9\u908F\u8F2F\r\n */\r\n\r\nimport { EmployeeRepository } from '../repositories/EmployeeRepository.js';\r\nimport { ValidationError, NotFoundError, ConflictError } from '../middleware/error.middleware.js';\r\nimport { validate } from '../utils/validation.util.js';\r\n\r\nexport class EmployeeService {\r\n  constructor(db) {\r\n    this.repository = new EmployeeRepository(db);\r\n  }\r\n\r\n  /**\r\n   * \u7372\u53D6\u54E1\u5DE5\u5217\u8868\r\n   * @param {Object} options - \u67E5\u8A62\u9078\u9805\r\n   * @returns {Promise<Array>}\r\n   */\r\n  async getList(options = {}) {\r\n    const { activeOnly = false } = options;\r\n\r\n    if (activeOnly) {\r\n      return this.repository.findActive();\r\n    }\r\n\r\n    return this.repository.findAll({}, { orderBy: 'name', order: 'ASC' });\r\n  }\r\n\r\n  /**\r\n   * \u7372\u53D6\u54E1\u5DE5\u8A73\u60C5\r\n   * @param {number} id - \u54E1\u5DE5 ID\r\n   * @returns {Promise<Object>}\r\n   */\r\n  async getDetail(id) {\r\n    const employee = await this.repository.findByIdWithUser(id);\r\n    \r\n    if (!employee) {\r\n      throw new NotFoundError('\u54E1\u5DE5\u4E0D\u5B58\u5728');\r\n    }\r\n\r\n    return employee;\r\n  }\r\n\r\n  /**\r\n   * \u5275\u5EFA\u54E1\u5DE5\r\n   * @param {Object} data - \u54E1\u5DE5\u6578\u64DA\r\n   * @param {Object} context - \u4E0A\u4E0B\u6587\r\n   * @returns {Promise<Object>}\r\n   */\r\n  async create(data, context) {\r\n    // \u9A57\u8B49\u6578\u64DA\r\n    this._validateEmployeeData(data);\r\n\r\n    // \u6AA2\u67E5\u540D\u7A31\u662F\u5426\u91CD\u8907\r\n    if (await this.repository.nameExists(data.name)) {\r\n      throw new ConflictError(`\u54E1\u5DE5\u59D3\u540D\u300C${data.name}\u300D\u5DF2\u5B58\u5728`);\r\n    }\r\n\r\n    // \u8A2D\u7F6E\u9ED8\u8A8D\u503C\r\n    if (data.is_active === undefined) {\r\n      data.is_active = true;\r\n    }\r\n\r\n    // \u5275\u5EFA\u8A18\u9304\r\n    const id = await this.repository.create(data);\r\n\r\n    console.log(`[EmployeeService] Employee created: ${id} by user ${context?.user?.id}`);\r\n\r\n    return this.repository.findById(id);\r\n  }\r\n\r\n  /**\r\n   * \u66F4\u65B0\u54E1\u5DE5\r\n   * @param {number} id - \u54E1\u5DE5 ID\r\n   * @param {Object} data - \u66F4\u65B0\u6578\u64DA\r\n   * @param {Object} context - \u4E0A\u4E0B\u6587\r\n   * @returns {Promise<Object>}\r\n   */\r\n  async update(id, data, context) {\r\n    const existing = await this.repository.findById(id);\r\n    if (!existing) {\r\n      throw new NotFoundError('\u54E1\u5DE5\u4E0D\u5B58\u5728');\r\n    }\r\n\r\n    // \u6AA2\u67E5\u540D\u7A31\u662F\u5426\u91CD\u8907\r\n    if (data.name && await this.repository.nameExists(data.name, id)) {\r\n      throw new ConflictError(`\u54E1\u5DE5\u59D3\u540D\u300C${data.name}\u300D\u5DF2\u5B58\u5728`);\r\n    }\r\n\r\n    const updated = await this.repository.update(id, data);\r\n\r\n    console.log(`[EmployeeService] Employee updated: ${id} by user ${context?.user?.id}`);\r\n\r\n    return updated;\r\n  }\r\n\r\n  /**\r\n   * \u522A\u9664\u54E1\u5DE5\uFF08\u8EDF\u522A\u9664\uFF09\r\n   * @param {number} id - \u54E1\u5DE5 ID\r\n   * @param {Object} context - \u4E0A\u4E0B\u6587\r\n   * @returns {Promise<boolean>}\r\n   */\r\n  async delete(id, context) {\r\n    const existing = await this.repository.findById(id);\r\n    if (!existing) {\r\n      throw new NotFoundError('\u54E1\u5DE5\u4E0D\u5B58\u5728');\r\n    }\r\n\r\n    // \u57F7\u884C\u8EDF\u522A\u9664\r\n    await this.repository.update(id, { is_active: false });\r\n\r\n    console.log(`[EmployeeService] Employee deactivated: ${id} by user ${context?.user?.id}`);\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * \u9A57\u8B49\u54E1\u5DE5\u6578\u64DA\r\n   * @private\r\n   */\r\n  _validateEmployeeData(data) {\r\n    const validator = validate(data)\r\n      .required('name', '\u54E1\u5DE5\u59D3\u540D\u70BA\u5FC5\u586B');\r\n\r\n    // \u9A57\u8B49 Email\uFF08\u5982\u679C\u63D0\u4F9B\uFF09\r\n    if (data.email) {\r\n      validator.email('email');\r\n    }\r\n\r\n    validator.throwIfFailed();\r\n  }\r\n}\r\n\r\nexport default EmployeeService;\r\n\r\n", "/**\r\n * Employees API Handler\r\n * \u8655\u7406\u54E1\u5DE5\u76F8\u95DC\u7684 HTTP \u8ACB\u6C42\r\n */\r\n\r\nimport { EmployeeService } from '../services/EmployeeService.js';\r\nimport { success, created, noContent, list } from '../utils/response.util.js';\r\n\r\n/**\r\n * \u7372\u53D6\u54E1\u5DE5\u5217\u8868\r\n * GET /api/employees\r\n */\r\nexport async function getEmployeeList(env, request) {\r\n  const url = new URL(request.url);\r\n  const activeOnly = url.searchParams.get('active') === 'true';\r\n\r\n  const service = new EmployeeService(env.DB);\r\n  const employees = await service.getList({ activeOnly });\r\n\r\n  return list(employees);\r\n}\r\n\r\n/**\r\n * \u7372\u53D6\u54E1\u5DE5\u8A73\u60C5\r\n * GET /api/employees/:id\r\n */\r\nexport async function getEmployeeDetail(env, request) {\r\n  const id = parseInt(request.params.id);\r\n\r\n  const service = new EmployeeService(env.DB);\r\n  const employee = await service.getDetail(id);\r\n\r\n  return success(employee);\r\n}\r\n\r\n/**\r\n * \u5275\u5EFA\u54E1\u5DE5\r\n * POST /api/employees\r\n */\r\nexport async function createEmployee(env, request) {\r\n  const data = await request.json();\r\n  const user = request.user;\r\n\r\n  const service = new EmployeeService(env.DB);\r\n  const employee = await service.create(data, { user });\r\n\r\n  return created(employee, '\u54E1\u5DE5\u5275\u5EFA\u6210\u529F');\r\n}\r\n\r\n/**\r\n * \u66F4\u65B0\u54E1\u5DE5\r\n * PUT /api/employees/:id\r\n */\r\nexport async function updateEmployee(env, request) {\r\n  const id = parseInt(request.params.id);\r\n  const data = await request.json();\r\n  const user = request.user;\r\n\r\n  const service = new EmployeeService(env.DB);\r\n  const employee = await service.update(id, data, { user });\r\n\r\n  return success(employee);\r\n}\r\n\r\n/**\r\n * \u522A\u9664\u54E1\u5DE5\uFF08\u505C\u7528\uFF09\r\n * DELETE /api/employees/:id\r\n */\r\nexport async function deleteEmployee(env, request) {\r\n  const id = parseInt(request.params.id);\r\n  const user = request.user;\r\n\r\n  const service = new EmployeeService(env.DB);\r\n  await service.delete(id, { user });\r\n\r\n  return noContent();\r\n}\r\n\r\nexport default {\r\n  getEmployeeList,\r\n  getEmployeeDetail,\r\n  createEmployee,\r\n  updateEmployee,\r\n  deleteEmployee\r\n};\r\n\r\n", "/**\r\n * Employees Routes\r\n * \u8A3B\u518A\u54E1\u5DE5\u76F8\u95DC\u7684\u6240\u6709\u8DEF\u7531\r\n */\r\n\r\nimport {\r\n  getEmployeeList,\r\n  getEmployeeDetail,\r\n  createEmployee,\r\n  updateEmployee,\r\n  deleteEmployee\r\n} from '../handlers/employees.handler.js';\r\n\r\nimport { withAuth, withAdmin } from '../middleware/auth.middleware.js';\r\nimport { withErrorHandler } from '../middleware/error.middleware.js';\r\n\r\n/**\r\n * \u7D44\u5408\u4E2D\u9593\u4EF6\r\n */\r\nfunction compose(...middlewares) {\r\n  return (handler) => {\r\n    return middlewares.reduceRight(\r\n      (wrapped, middleware) => middleware(wrapped),\r\n      handler\r\n    );\r\n  };\r\n}\r\n\r\n/**\r\n * \u8A3B\u518A\u54E1\u5DE5\u8DEF\u7531\r\n * @param {Router} router - \u8DEF\u7531\u5668\u5BE6\u4F8B\r\n */\r\nexport function registerEmployeeRoutes(router) {\r\n  const authHandler = compose(withErrorHandler, withAuth);\r\n  const adminHandler = compose(withErrorHandler, withAdmin);\r\n\r\n  // GET /api/employees - \u7372\u53D6\u54E1\u5DE5\u5217\u8868\uFF08\u6240\u6709\u7528\u6236\uFF09\r\n  router.get('/api/employees', authHandler(getEmployeeList));\r\n\r\n  // GET /api/employees/:id - \u7372\u53D6\u54E1\u5DE5\u8A73\u60C5\uFF08\u6240\u6709\u7528\u6236\uFF09\r\n  router.get('/api/employees/:id', authHandler(getEmployeeDetail));\r\n\r\n  // POST /api/employees - \u5275\u5EFA\u54E1\u5DE5\uFF08\u7BA1\u7406\u54E1\uFF09\r\n  router.post('/api/employees', adminHandler(createEmployee));\r\n\r\n  // PUT /api/employees/:id - \u66F4\u65B0\u54E1\u5DE5\uFF08\u7BA1\u7406\u54E1\uFF09\r\n  router.put('/api/employees/:id', adminHandler(updateEmployee));\r\n\r\n  // DELETE /api/employees/:id - \u505C\u7528\u54E1\u5DE5\uFF08\u7BA1\u7406\u54E1\uFF09\r\n  router.delete('/api/employees/:id', adminHandler(deleteEmployee));\r\n}\r\n\r\nexport default registerEmployeeRoutes;\r\n\r\n", "/**\r\n * Report Repository\r\n * \u8CA0\u8CAC\u5831\u8868\u76F8\u95DC\u7684\u8CC7\u6599\u5EAB\u67E5\u8A62\r\n */\r\n\r\nimport { TABLES, FIELDS } from '../config/constants.js';\r\n\r\nexport class ReportRepository {\r\n  constructor(db) {\r\n    this.db = db;\r\n  }\r\n\r\n  /**\r\n   * \u7372\u53D6\u5E74\u5047\u5831\u8868\u6578\u64DA\r\n   * @param {string} employeeName - \u54E1\u5DE5\u59D3\u540D\r\n   * @param {number} year - \u5E74\u5EA6\r\n   * @returns {Promise<Object>}\r\n   */\r\n  async getAnnualLeaveReport(employeeName, year) {\r\n    // \u7372\u53D6\u54E1\u5DE5\u4FE1\u606F\r\n    const employee = await this.db.prepare(`\r\n      SELECT id, name, hire_date FROM ${TABLES.EMPLOYEES}\r\n      WHERE name = ?\r\n    `).bind(employeeName).first();\r\n\r\n    if (!employee) {\r\n      return null;\r\n    }\r\n\r\n    // \u7372\u53D6\u8ACB\u5047\u8A18\u9304\r\n    const leaveEvents = await this.db.prepare(`\r\n      SELECT \r\n        le.*,\r\n        lt.type_name,\r\n        lt.is_paid\r\n      FROM ${TABLES.LEAVE_EVENTS} le\r\n      JOIN ${TABLES.LEAVE_TYPES} lt ON le.leave_type_id = lt.id\r\n      WHERE le.employee_id = ? \r\n        AND strftime('%Y', le.date) = ?\r\n        AND le.status = 'approved'\r\n      ORDER BY le.date\r\n    `).bind(employee.id, year.toString()).all();\r\n\r\n    return {\r\n      employee,\r\n      leave_events: leaveEvents.results || [],\r\n      year\r\n    };\r\n  }\r\n\r\n  /**\r\n   * \u7372\u53D6\u5DE5\u6642\u5206\u6790\u5831\u8868\r\n   * @param {Object} params - \u67E5\u8A62\u53C3\u6578\r\n   * @returns {Promise<Object>}\r\n   */\r\n  async getWorkAnalysisReport(params) {\r\n    const { employee, year, month } = params;\r\n\r\n    let query = `\r\n      SELECT \r\n        t.date,\r\n        t.regular_hours,\r\n        t.overtime_hours,\r\n        t.work_type,\r\n        t.business_type,\r\n        c.name as client_name\r\n      FROM ${TABLES.TIMESHEETS} t\r\n      LEFT JOIN ${TABLES.CLIENTS} c ON t.client_id = c.id\r\n      LEFT JOIN ${TABLES.EMPLOYEES} e ON t.employee_id = e.id\r\n      WHERE 1=1\r\n    `;\r\n\r\n    const bindings = [];\r\n\r\n    if (employee) {\r\n      query += ` AND e.name = ?`;\r\n      bindings.push(employee);\r\n    }\r\n\r\n    if (year) {\r\n      query += ` AND strftime('%Y', t.date) = ?`;\r\n      bindings.push(year.toString());\r\n    }\r\n\r\n    if (month) {\r\n      query += ` AND strftime('%m', t.date) = ?`;\r\n      bindings.push(month.toString().padStart(2, '0'));\r\n    }\r\n\r\n    query += ` ORDER BY t.date DESC`;\r\n\r\n    const result = await this.db.prepare(query).bind(...bindings).all();\r\n\r\n    return {\r\n      timesheets: result.results || [],\r\n      params\r\n    };\r\n  }\r\n\r\n  /**\r\n   * \u4FDD\u5B58\u5831\u8868\u5FEB\u53D6\r\n   * @param {string} cacheKey - \u5FEB\u53D6\u9375\r\n   * @param {string} reportType - \u5831\u8868\u985E\u578B\r\n   * @param {Object} data - \u5831\u8868\u6578\u64DA\r\n   * @param {number} expiryHours - \u904E\u671F\u6642\u9593\uFF08\u5C0F\u6642\uFF09\r\n   */\r\n  async saveCache(cacheKey, reportType, data, expiryHours = 24) {\r\n    const expiresAt = new Date(Date.now() + expiryHours * 60 * 60 * 1000);\r\n\r\n    await this.db.prepare(`\r\n      INSERT OR REPLACE INTO ${TABLES.REPORT_CACHE} \r\n        (cache_key, report_type, cache_data, expires_at)\r\n      VALUES (?, ?, ?, ?)\r\n    `).bind(\r\n      cacheKey,\r\n      reportType,\r\n      JSON.stringify(data),\r\n      expiresAt.toISOString()\r\n    ).run();\r\n  }\r\n\r\n  /**\r\n   * \u7372\u53D6\u5831\u8868\u5FEB\u53D6\r\n   * @param {string} cacheKey - \u5FEB\u53D6\u9375\r\n   * @returns {Promise<Object|null>}\r\n   */\r\n  async getCache(cacheKey) {\r\n    const cache = await this.db.prepare(`\r\n      SELECT cache_data, expires_at\r\n      FROM ${TABLES.REPORT_CACHE}\r\n      WHERE cache_key = ? AND expires_at > datetime('now')\r\n    `).bind(cacheKey).first();\r\n\r\n    if (!cache) {\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      return JSON.parse(cache.cache_data);\r\n    } catch (e) {\r\n      console.error('Failed to parse cache data:', e);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u6E05\u9664\u904E\u671F\u5FEB\u53D6\r\n   */\r\n  async clearExpiredCache() {\r\n    await this.db.prepare(`\r\n      DELETE FROM ${TABLES.REPORT_CACHE}\r\n      WHERE expires_at < datetime('now')\r\n    `).run();\r\n  }\r\n}\r\n\r\nexport default ReportRepository;\r\n\r\n", "/**\r\n * Report Service\r\n * \u8CA0\u8CAC\u5831\u8868\u76F8\u95DC\u7684\u696D\u52D9\u908F\u8F2F\r\n */\r\n\r\nimport { ReportRepository } from '../repositories/ReportRepository.js';\r\nimport { NotFoundError } from '../middleware/error.middleware.js';\r\n\r\nexport class ReportService {\r\n  constructor(db) {\r\n    this.repository = new ReportRepository(db);\r\n  }\r\n\r\n  /**\r\n   * \u7372\u53D6\u5E74\u5047\u5831\u8868\r\n   * @param {string} employeeName - \u54E1\u5DE5\u59D3\u540D\r\n   * @param {number} year - \u5E74\u5EA6\r\n   * @param {boolean} useCache - \u662F\u5426\u4F7F\u7528\u5FEB\u53D6\r\n   * @returns {Promise<Object>}\r\n   */\r\n  async getAnnualLeaveReport(employeeName, year, useCache = true) {\r\n    const cacheKey = `annual_leave_${employeeName}_${year}`;\r\n\r\n    // \u5617\u8A66\u5F9E\u5FEB\u53D6\u7372\u53D6\r\n    if (useCache) {\r\n      const cached = await this.repository.getCache(cacheKey);\r\n      if (cached) {\r\n        return { ...cached, from_cache: true };\r\n      }\r\n    }\r\n\r\n    // \u751F\u6210\u5831\u8868\r\n    const report = await this.repository.getAnnualLeaveReport(employeeName, year);\r\n\r\n    if (!report) {\r\n      throw new NotFoundError('\u54E1\u5DE5\u4E0D\u5B58\u5728');\r\n    }\r\n\r\n    // \u8A08\u7B97\u7D71\u8A08\u6578\u64DA\r\n    const leaveStats = this._calculateLeaveStats(report.leave_events);\r\n\r\n    const result = {\r\n      employee: report.employee,\r\n      year: report.year,\r\n      leave_stats: leaveStats,\r\n      leave_events: report.leave_events,\r\n      from_cache: false\r\n    };\r\n\r\n    // \u4FDD\u5B58\u5FEB\u53D6\r\n    await this.repository.saveCache(cacheKey, 'annual_leave', result, 24);\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * \u7372\u53D6\u5DE5\u6642\u5206\u6790\u5831\u8868\r\n   * @param {Object} params - \u67E5\u8A62\u53C3\u6578\r\n   * @param {boolean} useCache - \u662F\u5426\u4F7F\u7528\u5FEB\u53D6\r\n   * @returns {Promise<Object>}\r\n   */\r\n  async getWorkAnalysisReport(params, useCache = true) {\r\n    const { employee, year, month } = params;\r\n    const cacheKey = `work_analysis_${employee || 'all'}_${year}_${month || 'all'}`;\r\n\r\n    // \u5617\u8A66\u5F9E\u5FEB\u53D6\u7372\u53D6\r\n    if (useCache) {\r\n      const cached = await this.repository.getCache(cacheKey);\r\n      if (cached) {\r\n        return { ...cached, from_cache: true };\r\n      }\r\n    }\r\n\r\n    // \u751F\u6210\u5831\u8868\r\n    const report = await this.repository.getWorkAnalysisReport(params);\r\n\r\n    // \u8A08\u7B97\u7D71\u8A08\u6578\u64DA\r\n    const stats = this._calculateWorkStats(report.timesheets);\r\n\r\n    const result = {\r\n      timesheets: report.timesheets,\r\n      stats,\r\n      params: report.params,\r\n      from_cache: false\r\n    };\r\n\r\n    // \u4FDD\u5B58\u5FEB\u53D6\r\n    await this.repository.saveCache(cacheKey, 'work_analysis', result, 24);\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * \u6E05\u9664\u5831\u8868\u5FEB\u53D6\r\n   * @param {string} reportType - \u5831\u8868\u985E\u578B\uFF08\u53EF\u9078\uFF09\r\n   */\r\n  async clearCache(reportType = null) {\r\n    // \u5148\u6E05\u9664\u904E\u671F\u5FEB\u53D6\r\n    await this.repository.clearExpiredCache();\r\n\r\n    // TODO: \u5982\u679C\u9700\u8981\u6E05\u9664\u7279\u5B9A\u985E\u578B\u7684\u5FEB\u53D6\uFF0C\u9700\u8981\u6DFB\u52A0\u76F8\u61C9\u65B9\u6CD5\r\n\r\n    return { success: true, message: '\u5FEB\u53D6\u5DF2\u6E05\u9664' };\r\n  }\r\n\r\n  /**\r\n   * \u8A08\u7B97\u8ACB\u5047\u7D71\u8A08\r\n   * @private\r\n   */\r\n  _calculateLeaveStats(leaveEvents) {\r\n    const stats = {};\r\n\r\n    leaveEvents.forEach(event => {\r\n      const type = event.type_name;\r\n      if (!stats[type]) {\r\n        stats[type] = 0;\r\n      }\r\n      stats[type] += event.hours;\r\n    });\r\n\r\n    return stats;\r\n  }\r\n\r\n  /**\r\n   * \u8A08\u7B97\u5DE5\u6642\u7D71\u8A08\r\n   * @private\r\n   */\r\n  _calculateWorkStats(timesheets) {\r\n    let totalRegular = 0;\r\n    let totalOvertime = 0;\r\n    const byClient = {};\r\n    const byType = {};\r\n\r\n    timesheets.forEach(ts => {\r\n      totalRegular += ts.regular_hours || 0;\r\n      totalOvertime += ts.overtime_hours || 0;\r\n\r\n      // \u6309\u5BA2\u6236\u7D71\u8A08\r\n      if (ts.client_name) {\r\n        if (!byClient[ts.client_name]) {\r\n          byClient[ts.client_name] = 0;\r\n        }\r\n        byClient[ts.client_name] += (ts.regular_hours || 0) + (ts.overtime_hours || 0);\r\n      }\r\n\r\n      // \u6309\u696D\u52D9\u985E\u578B\u7D71\u8A08\r\n      if (ts.business_type) {\r\n        if (!byType[ts.business_type]) {\r\n          byType[ts.business_type] = 0;\r\n        }\r\n        byType[ts.business_type] += (ts.regular_hours || 0) + (ts.overtime_hours || 0);\r\n      }\r\n    });\r\n\r\n    return {\r\n      total_regular: totalRegular,\r\n      total_overtime: totalOvertime,\r\n      total_hours: totalRegular + totalOvertime,\r\n      by_client: byClient,\r\n      by_type: byType\r\n    };\r\n  }\r\n}\r\n\r\nexport default ReportService;\r\n\r\n", "/**\r\n * Reports API Handler\r\n * \u8655\u7406\u5831\u8868\u76F8\u95DC\u7684 HTTP \u8ACB\u6C42\r\n */\r\n\r\nimport { ReportService } from '../services/ReportService.js';\r\nimport { success } from '../utils/response.util.js';\r\n\r\n/**\r\n * \u7372\u53D6\u5E74\u5047\u5831\u8868\r\n * GET /api/reports/annual-leave\r\n */\r\nexport async function getAnnualLeaveReport(env, request) {\r\n  const url = new URL(request.url);\r\n  const employee = url.searchParams.get('employee');\r\n  const year = parseInt(url.searchParams.get('year')) || new Date().getFullYear();\r\n  const useCache = url.searchParams.get('cache') !== 'false';\r\n\r\n  if (!employee) {\r\n    return success({ error: '\u9700\u8981\u63D0\u4F9B\u54E1\u5DE5\u59D3\u540D' }, null, 400);\r\n  }\r\n\r\n  const service = new ReportService(env.DB);\r\n  const report = await service.getAnnualLeaveReport(employee, year, useCache);\r\n\r\n  return success(report);\r\n}\r\n\r\n/**\r\n * \u7372\u53D6\u5DE5\u6642\u5206\u6790\u5831\u8868\r\n * GET /api/reports/work-analysis\r\n */\r\nexport async function getWorkAnalysisReport(env, request) {\r\n  const url = new URL(request.url);\r\n  const params = {\r\n    employee: url.searchParams.get('employee'),\r\n    year: url.searchParams.get('year') ? parseInt(url.searchParams.get('year')) : null,\r\n    month: url.searchParams.get('month') ? parseInt(url.searchParams.get('month')) : null\r\n  };\r\n  const useCache = url.searchParams.get('cache') !== 'false';\r\n\r\n  const service = new ReportService(env.DB);\r\n  const report = await service.getWorkAnalysisReport(params, useCache);\r\n\r\n  return success(report);\r\n}\r\n\r\n/**\r\n * \u6E05\u9664\u5831\u8868\u5FEB\u53D6\r\n * POST /api/reports/clear-cache\r\n */\r\nexport async function clearReportCache(env, request) {\r\n  const service = new ReportService(env.DB);\r\n  const result = await service.clearCache();\r\n\r\n  return success(result);\r\n}\r\n\r\nexport default {\r\n  getAnnualLeaveReport,\r\n  getWorkAnalysisReport,\r\n  clearReportCache\r\n};\r\n\r\n", "/**\r\n * Reports Routes\r\n * \u8A3B\u518A\u5831\u8868\u76F8\u95DC\u7684\u6240\u6709\u8DEF\u7531\r\n */\r\n\r\nimport {\r\n  getAnnualLeaveReport,\r\n  getWorkAnalysisReport,\r\n  clearReportCache\r\n} from '../handlers/reports.handler.js';\r\n\r\nimport { withAuth, withAdmin } from '../middleware/auth.middleware.js';\r\nimport { withErrorHandler } from '../middleware/error.middleware.js';\r\n\r\n/**\r\n * \u7D44\u5408\u4E2D\u9593\u4EF6\r\n */\r\nfunction compose(...middlewares) {\r\n  return (handler) => {\r\n    return middlewares.reduceRight(\r\n      (wrapped, middleware) => middleware(wrapped),\r\n      handler\r\n    );\r\n  };\r\n}\r\n\r\n/**\r\n * \u8A3B\u518A\u5831\u8868\u8DEF\u7531\r\n * @param {Router} router - \u8DEF\u7531\u5668\u5BE6\u4F8B\r\n */\r\nexport function registerReportRoutes(router) {\r\n  const authHandler = compose(withErrorHandler, withAuth);\r\n  const adminHandler = compose(withErrorHandler, withAdmin);\r\n\r\n  // GET /api/reports/annual-leave - \u5E74\u5047\u5831\u8868\uFF08\u6240\u6709\u7528\u6236\uFF09\r\n  router.get('/api/reports/annual-leave', authHandler(getAnnualLeaveReport));\r\n\r\n  // GET /api/reports/work-analysis - \u5DE5\u6642\u5206\u6790\u5831\u8868\uFF08\u6240\u6709\u7528\u6236\uFF09\r\n  router.get('/api/reports/work-analysis', authHandler(getWorkAnalysisReport));\r\n\r\n  // POST /api/reports/clear-cache - \u6E05\u9664\u5FEB\u53D6\uFF08\u7BA1\u7406\u54E1\uFF09\r\n  router.post('/api/reports/clear-cache', adminHandler(clearReportCache));\r\n}\r\n\r\nexport default registerReportRoutes;\r\n\r\n", "/**\r\n * Timesheet Repository\r\n * \u8CA0\u8CAC\u5DE5\u6642\u8868\u7684\u6240\u6709\u8CC7\u6599\u5EAB\u64CD\u4F5C\r\n */\r\n\r\nimport { BaseRepository } from './BaseRepository.js';\r\nimport { TABLES, FIELDS } from '../config/constants.js';\r\n\r\nexport class TimesheetRepository extends BaseRepository {\r\n  constructor(db) {\r\n    super(db, TABLES.TIMESHEETS);\r\n  }\r\n\r\n  /**\r\n   * \u7372\u53D6\u54E1\u5DE5\u7684\u5DE5\u6642\u8A18\u9304\r\n   * @param {string} employeeName - \u54E1\u5DE5\u59D3\u540D\r\n   * @param {Object} filters - \u904E\u6FFE\u689D\u4EF6\r\n   * @returns {Promise<Array>}\r\n   */\r\n  async findByEmployee(employeeName, filters = {}) {\r\n    const { year, month } = filters;\r\n\r\n    let query = `\r\n      SELECT \r\n        t.*,\r\n        e.name as employee_name,\r\n        c.name as client_name\r\n      FROM ${TABLES.TIMESHEETS} t\r\n      JOIN ${TABLES.EMPLOYEES} e ON t.employee_id = e.id\r\n      LEFT JOIN ${TABLES.CLIENTS} c ON t.client_id = c.id\r\n      WHERE e.name = ?\r\n    `;\r\n\r\n    const params = [employeeName];\r\n\r\n    if (year) {\r\n      query += ` AND strftime('%Y', t.date) = ?`;\r\n      params.push(year.toString());\r\n    }\r\n\r\n    if (month) {\r\n      query += ` AND strftime('%m', t.date) = ?`;\r\n      params.push(month.toString().padStart(2, '0'));\r\n    }\r\n\r\n    query += ` ORDER BY t.date DESC`;\r\n\r\n    return this.raw(query, params);\r\n  }\r\n\r\n  /**\r\n   * \u67E5\u8A62\u7279\u5B9A\u65E5\u671F\u7684\u5DE5\u6642\u8A18\u9304\r\n   * @param {number} employeeId - \u54E1\u5DE5 ID\r\n   * @param {string} date - \u65E5\u671F\r\n   * @returns {Promise<Array>}\r\n   */\r\n  async findByDate(employeeId, date) {\r\n    return this.findAll({ \r\n      employee_id: employeeId,\r\n      date \r\n    });\r\n  }\r\n}\r\n\r\nexport default TimesheetRepository;\r\n\r\n", "/**\r\n * Timesheet Service\r\n * \u8CA0\u8CAC\u5DE5\u6642\u76F8\u95DC\u7684\u696D\u52D9\u908F\u8F2F\r\n */\r\n\r\nimport { TimesheetRepository } from '../repositories/TimesheetRepository.js';\r\nimport { EmployeeRepository } from '../repositories/EmployeeRepository.js';\r\nimport { ValidationError, NotFoundError } from '../middleware/error.middleware.js';\r\nimport { validate } from '../utils/validation.util.js';\r\n\r\nexport class TimesheetService {\r\n  constructor(db) {\r\n    this.repository = new TimesheetRepository(db);\r\n    this.employeeRepository = new EmployeeRepository(db);\r\n  }\r\n\r\n  /**\r\n   * \u7372\u53D6\u5DE5\u6642\u6578\u64DA\r\n   * @param {string} employeeName - \u54E1\u5DE5\u59D3\u540D\r\n   * @param {Object} filters - \u904E\u6FFE\u689D\u4EF6\r\n   * @returns {Promise<Object>}\r\n   */\r\n  async getTimesheetData(employeeName, filters = {}) {\r\n    // \u9A57\u8B49\u54E1\u5DE5\u662F\u5426\u5B58\u5728\r\n    const employee = await this.employeeRepository.findByName(employeeName);\r\n    if (!employee) {\r\n      throw new NotFoundError('\u54E1\u5DE5\u4E0D\u5B58\u5728');\r\n    }\r\n\r\n    // \u7372\u53D6\u5DE5\u6642\u8A18\u9304\r\n    const timesheets = await this.repository.findByEmployee(employeeName, filters);\r\n\r\n    // \u5206\u985E\u6578\u64DA\r\n    const workEntries = timesheets.filter(t => t.regular_hours > 0 || t.overtime_hours > 0);\r\n    const leaveEntries = []; // TODO: \u5F9E leave_events \u8868\u7372\u53D6\r\n\r\n    return {\r\n      employee,\r\n      workEntries,\r\n      leaveEntries,\r\n      filters\r\n    };\r\n  }\r\n\r\n  /**\r\n   * \u5275\u5EFA\u5DE5\u6642\u8A18\u9304\r\n   * @param {Object} data - \u5DE5\u6642\u6578\u64DA\r\n   * @param {Object} context - \u4E0A\u4E0B\u6587\r\n   * @returns {Promise<Object>}\r\n   */\r\n  async create(data, context) {\r\n    // \u9A57\u8B49\u6578\u64DA\r\n    this._validateTimesheetData(data);\r\n\r\n    // \u7372\u53D6\u54E1\u5DE5 ID\r\n    if (data.employee_name) {\r\n      const employee = await this.employeeRepository.findByName(data.employee_name);\r\n      if (!employee) {\r\n        throw new NotFoundError('\u54E1\u5DE5\u4E0D\u5B58\u5728');\r\n      }\r\n      data.employee_id = employee.id;\r\n      delete data.employee_name;\r\n    }\r\n\r\n    // \u5275\u5EFA\u8A18\u9304\r\n    const id = await this.repository.create(data);\r\n\r\n    console.log(`[TimesheetService] Timesheet created: ${id}`);\r\n\r\n    return this.repository.findById(id);\r\n  }\r\n\r\n  /**\r\n   * \u66F4\u65B0\u5DE5\u6642\u8A18\u9304\r\n   * @param {number} id - \u5DE5\u6642 ID\r\n   * @param {Object} data - \u66F4\u65B0\u6578\u64DA\r\n   * @param {Object} context - \u4E0A\u4E0B\u6587\r\n   * @returns {Promise<Object>}\r\n   */\r\n  async update(id, data, context) {\r\n    const existing = await this.repository.findById(id);\r\n    if (!existing) {\r\n      throw new NotFoundError('\u5DE5\u6642\u8A18\u9304\u4E0D\u5B58\u5728');\r\n    }\r\n\r\n    const updated = await this.repository.update(id, data);\r\n\r\n    console.log(`[TimesheetService] Timesheet updated: ${id}`);\r\n\r\n    return updated;\r\n  }\r\n\r\n  /**\r\n   * \u9A57\u8B49\u5DE5\u6642\u6578\u64DA\r\n   * @private\r\n   */\r\n  _validateTimesheetData(data) {\r\n    const validator = validate(data)\r\n      .required('employee_id', '\u54E1\u5DE5\u70BA\u5FC5\u586B')\r\n      .required('date', '\u65E5\u671F\u70BA\u5FC5\u586B');\r\n\r\n    validator.throwIfFailed();\r\n  }\r\n}\r\n\r\nexport default TimesheetService;\r\n\r\n", "/**\r\n * Timesheets API Handler\r\n * \u8655\u7406\u5DE5\u6642\u76F8\u95DC\u7684 HTTP \u8ACB\u6C42\r\n */\r\n\r\nimport { TimesheetService } from '../services/TimesheetService.js';\r\nimport { success, created } from '../utils/response.util.js';\r\n\r\n/**\r\n * \u7372\u53D6\u5DE5\u6642\u6578\u64DA\r\n * GET /api/timesheet-data\r\n */\r\nexport async function getTimesheetData(env, request) {\r\n  const url = new URL(request.url);\r\n  const employee = url.searchParams.get('employee');\r\n  const year = url.searchParams.get('year') ? parseInt(url.searchParams.get('year')) : null;\r\n  const month = url.searchParams.get('month') ? parseInt(url.searchParams.get('month')) : null;\r\n\r\n  if (!employee) {\r\n    return success({ error: '\u9700\u8981\u63D0\u4F9B\u54E1\u5DE5\u59D3\u540D' }, null, 400);\r\n  }\r\n\r\n  const service = new TimesheetService(env.DB);\r\n  const data = await service.getTimesheetData(employee, { year, month });\r\n\r\n  return success(data);\r\n}\r\n\r\n/**\r\n * \u5275\u5EFA\u5DE5\u6642\u8A18\u9304\r\n * POST /api/timesheets\r\n */\r\nexport async function createTimesheet(env, request) {\r\n  const data = await request.json();\r\n  const user = request.user;\r\n\r\n  const service = new TimesheetService(env.DB);\r\n  const timesheet = await service.create(data, { user });\r\n\r\n  return created(timesheet, '\u5DE5\u6642\u8A18\u9304\u5275\u5EFA\u6210\u529F');\r\n}\r\n\r\n/**\r\n * \u66F4\u65B0\u5DE5\u6642\u8A18\u9304\r\n * PUT /api/timesheets/:id\r\n */\r\nexport async function updateTimesheet(env, request) {\r\n  const id = parseInt(request.params.id);\r\n  const data = await request.json();\r\n  const user = request.user;\r\n\r\n  const service = new TimesheetService(env.DB);\r\n  const timesheet = await service.update(id, data, { user });\r\n\r\n  return success(timesheet);\r\n}\r\n\r\n/**\r\n * \u7372\u53D6\u8ACB\u5047\u914D\u984D\r\n * GET /api/leave-quota\r\n */\r\nexport async function getLeaveQuota(env, request) {\r\n  const url = new URL(request.url);\r\n  const employee = url.searchParams.get('employee');\r\n  const year = parseInt(url.searchParams.get('year')) || new Date().getFullYear();\r\n\r\n  if (!employee) {\r\n    return success({ error: '\u9700\u8981\u63D0\u4F9B\u54E1\u5DE5\u59D3\u540D' }, null, 400);\r\n  }\r\n\r\n  // \u7C21\u5316\u7248\uFF1A\u8FD4\u56DE\u57FA\u672C\u914D\u984D\r\n  const quota = [\r\n    { type: '\u7279\u4F11', quota_hours: 56, used_hours: 0, remaining_hours: 56 },\r\n    { type: '\u75C5\u5047', quota_hours: 240, used_hours: 0, remaining_hours: 240 },\r\n    { type: '\u4E8B\u5047', quota_hours: 112, used_hours: 0, remaining_hours: 112 }\r\n  ];\r\n\r\n  return success({ quota, employee, year });\r\n}\r\n\r\nexport default {\r\n  getTimesheetData,\r\n  createTimesheet,\r\n  updateTimesheet,\r\n  getLeaveQuota\r\n};\r\n\r\n", "/**\r\n * Timesheets Routes\r\n * \u8A3B\u518A\u5DE5\u6642\u76F8\u95DC\u7684\u6240\u6709\u8DEF\u7531\r\n */\r\n\r\nimport {\r\n  getTimesheetData,\r\n  createTimesheet,\r\n  updateTimesheet,\r\n  getLeaveQuota\r\n} from '../handlers/timesheets.handler.js';\r\n\r\nimport { withAuth } from '../middleware/auth.middleware.js';\r\nimport { withErrorHandler } from '../middleware/error.middleware.js';\r\n\r\n/**\r\n * \u7D44\u5408\u4E2D\u9593\u4EF6\r\n */\r\nfunction compose(...middlewares) {\r\n  return (handler) => {\r\n    return middlewares.reduceRight(\r\n      (wrapped, middleware) => middleware(wrapped),\r\n      handler\r\n    );\r\n  };\r\n}\r\n\r\n/**\r\n * \u8A3B\u518A\u5DE5\u6642\u8DEF\u7531\r\n * @param {Router} router - \u8DEF\u7531\u5668\u5BE6\u4F8B\r\n */\r\nexport function registerTimesheetRoutes(router) {\r\n  const authHandler = compose(withErrorHandler, withAuth);\r\n\r\n  // GET /api/timesheet-data - \u7372\u53D6\u5DE5\u6642\u6578\u64DA\uFF08\u6240\u6709\u7528\u6236\uFF09\r\n  router.get('/api/timesheet-data', authHandler(getTimesheetData));\r\n\r\n  // GET /api/leave-quota - \u7372\u53D6\u8ACB\u5047\u914D\u984D\uFF08\u6240\u6709\u7528\u6236\uFF09\r\n  router.get('/api/leave-quota', authHandler(getLeaveQuota));\r\n\r\n  // POST /api/timesheets - \u5275\u5EFA\u5DE5\u6642\u8A18\u9304\uFF08\u6240\u6709\u7528\u6236\uFF09\r\n  router.post('/api/timesheets', authHandler(createTimesheet));\r\n\r\n  // PUT /api/timesheets/:id - \u66F4\u65B0\u5DE5\u6642\u8A18\u9304\uFF08\u6240\u6709\u7528\u6236\uFF09\r\n  router.put('/api/timesheets/:id', authHandler(updateTimesheet));\r\n}\r\n\r\nexport default registerTimesheetRoutes;\r\n\r\n", "/**\r\n * Reminder Repository\r\n * \u8CA0\u8CAC\u63D0\u9192\u8868\u7684\u6240\u6709\u8CC7\u6599\u5EAB\u64CD\u4F5C\r\n */\r\n\r\nimport { BaseRepository } from './BaseRepository.js';\r\nimport { TABLES, FIELDS } from '../config/constants.js';\r\n\r\nexport class ReminderRepository extends BaseRepository {\r\n  constructor(db) {\r\n    super(db, TABLES.TASK_REMINDERS);\r\n  }\r\n\r\n  /**\r\n   * \u7372\u53D6\u7528\u6236\u7684\u63D0\u9192\r\n   * @param {number} userId - \u7528\u6236 ID\r\n   * @param {Object} filters - \u904E\u6FFE\u689D\u4EF6\r\n   * @returns {Promise<Array>}\r\n   */\r\n  async findByUser(userId, filters = {}) {\r\n    const { is_read } = filters;\r\n\r\n    let query = `\r\n      SELECT \r\n        r.*,\r\n        t.title as task_title\r\n      FROM ${TABLES.TASK_REMINDERS} r\r\n      LEFT JOIN ${TABLES.TASKS} t ON r.task_id = t.id\r\n      WHERE r.user_id = ?\r\n    `;\r\n\r\n    const params = [userId];\r\n\r\n    if (is_read !== undefined) {\r\n      query += ` AND r.is_read = ?`;\r\n      params.push(is_read ? 1 : 0);\r\n    }\r\n\r\n    query += ` ORDER BY r.remind_at DESC`;\r\n\r\n    return this.raw(query, params);\r\n  }\r\n\r\n  /**\r\n   * \u6A19\u8A18\u70BA\u5DF2\u8B80\r\n   * @param {number} id - \u63D0\u9192 ID\r\n   * @returns {Promise<Object>}\r\n   */\r\n  async markAsRead(id) {\r\n    return this.update(id, {\r\n      is_read: true,\r\n      read_at: new Date().toISOString()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * \u6A19\u8A18\u7528\u6236\u6240\u6709\u63D0\u9192\u70BA\u5DF2\u8B80\r\n   * @param {number} userId - \u7528\u6236 ID\r\n   * @returns {Promise<number>} \u66F4\u65B0\u7684\u6578\u91CF\r\n   */\r\n  async markAllAsRead(userId) {\r\n    const query = `\r\n      UPDATE ${TABLES.TASK_REMINDERS}\r\n      SET is_read = 1, read_at = ?\r\n      WHERE user_id = ? AND is_read = 0\r\n    `;\r\n\r\n    const result = await this.db.prepare(query)\r\n      .bind(new Date().toISOString(), userId)\r\n      .run();\r\n\r\n    return result.meta?.changes || 0;\r\n  }\r\n}\r\n\r\nexport default ReminderRepository;\r\n\r\n", "/**\r\n * Reminder Service\r\n * \u8CA0\u8CAC\u63D0\u9192\u76F8\u95DC\u7684\u696D\u52D9\u908F\u8F2F\r\n */\r\n\r\nimport { ReminderRepository } from '../repositories/ReminderRepository.js';\r\nimport { NotFoundError } from '../middleware/error.middleware.js';\r\n\r\nexport class ReminderService {\r\n  constructor(db) {\r\n    this.repository = new ReminderRepository(db);\r\n  }\r\n\r\n  /**\r\n   * \u7372\u53D6\u7528\u6236\u63D0\u9192\u5217\u8868\r\n   * @param {number} userId - \u7528\u6236 ID\r\n   * @param {Object} filters - \u904E\u6FFE\u689D\u4EF6\r\n   * @returns {Promise<Array>}\r\n   */\r\n  async getUserReminders(userId, filters = {}) {\r\n    return this.repository.findByUser(userId, filters);\r\n  }\r\n\r\n  /**\r\n   * \u6A19\u8A18\u63D0\u9192\u70BA\u5DF2\u8B80\r\n   * @param {number} id - \u63D0\u9192 ID\r\n   * @param {Object} context - \u4E0A\u4E0B\u6587\r\n   * @returns {Promise<Object>}\r\n   */\r\n  async markAsRead(id, context) {\r\n    const existing = await this.repository.findById(id);\r\n    if (!existing) {\r\n      throw new NotFoundError('\u63D0\u9192\u4E0D\u5B58\u5728');\r\n    }\r\n\r\n    // \u6AA2\u67E5\u6B0A\u9650\uFF1A\u53EA\u80FD\u6A19\u8A18\u81EA\u5DF1\u7684\u63D0\u9192\r\n    if (context?.user?.role !== 'admin' && existing.user_id !== context?.user?.id) {\r\n      throw new Error('\u7121\u6B0A\u9650\u64CD\u4F5C\u6B64\u63D0\u9192');\r\n    }\r\n\r\n    return this.repository.markAsRead(id);\r\n  }\r\n\r\n  /**\r\n   * \u6A19\u8A18\u6240\u6709\u63D0\u9192\u70BA\u5DF2\u8B80\r\n   * @param {number} userId - \u7528\u6236 ID\r\n   * @returns {Promise<number>}\r\n   */\r\n  async markAllAsRead(userId) {\r\n    return this.repository.markAllAsRead(userId);\r\n  }\r\n\r\n  /**\r\n   * \u522A\u9664\u63D0\u9192\r\n   * @param {number} id - \u63D0\u9192 ID\r\n   * @param {Object} context - \u4E0A\u4E0B\u6587\r\n   * @returns {Promise<boolean>}\r\n   */\r\n  async delete(id, context) {\r\n    const existing = await this.repository.findById(id);\r\n    if (!existing) {\r\n      throw new NotFoundError('\u63D0\u9192\u4E0D\u5B58\u5728');\r\n    }\r\n\r\n    // \u6AA2\u67E5\u6B0A\u9650\r\n    if (context?.user?.role !== 'admin' && existing.user_id !== context?.user?.id) {\r\n      throw new Error('\u7121\u6B0A\u9650\u64CD\u4F5C\u6B64\u63D0\u9192');\r\n    }\r\n\r\n    return this.repository.delete(id);\r\n  }\r\n}\r\n\r\nexport default ReminderService;\r\n\r\n", "/**\r\n * Reminders API Handler\r\n * \u8655\u7406\u63D0\u9192\u76F8\u95DC\u7684 HTTP \u8ACB\u6C42\r\n */\r\n\r\nimport { ReminderService } from '../services/ReminderService.js';\r\nimport { success, noContent } from '../utils/response.util.js';\r\n\r\n/**\r\n * \u7372\u53D6\u63D0\u9192\u5217\u8868\r\n * GET /api/reminders\r\n */\r\nexport async function getReminders(env, request) {\r\n  const url = new URL(request.url);\r\n  const userId = url.searchParams.get('user_id') ? parseInt(url.searchParams.get('user_id')) : request.user.id;\r\n  const isRead = url.searchParams.get('is_read');\r\n\r\n  const filters = {};\r\n  if (isRead !== null && isRead !== undefined) {\r\n    filters.is_read = isRead === '1' || isRead === 'true';\r\n  }\r\n\r\n  const service = new ReminderService(env.DB);\r\n  const reminders = await service.getUserReminders(userId, filters);\r\n\r\n  return success({ reminders });\r\n}\r\n\r\n/**\r\n * \u6A19\u8A18\u63D0\u9192\u70BA\u5DF2\u8B80\r\n * PUT /api/reminders/:id/read\r\n */\r\nexport async function markReminderAsRead(env, request) {\r\n  const id = parseInt(request.params.id);\r\n  const user = request.user;\r\n\r\n  const service = new ReminderService(env.DB);\r\n  await service.markAsRead(id, { user });\r\n\r\n  return noContent();\r\n}\r\n\r\n/**\r\n * \u6A19\u8A18\u6240\u6709\u63D0\u9192\u70BA\u5DF2\u8B80\r\n * POST /api/reminders/mark-all-read\r\n */\r\nexport async function markAllRemindersAsRead(env, request) {\r\n  const userId = request.user.id;\r\n\r\n  const service = new ReminderService(env.DB);\r\n  const count = await service.markAllAsRead(userId);\r\n\r\n  return success({ count, message: `\u5DF2\u6A19\u8A18 ${count} \u500B\u63D0\u9192\u70BA\u5DF2\u8B80` });\r\n}\r\n\r\n/**\r\n * \u522A\u9664\u63D0\u9192\r\n * DELETE /api/reminders/:id\r\n */\r\nexport async function deleteReminder(env, request) {\r\n  const id = parseInt(request.params.id);\r\n  const user = request.user;\r\n\r\n  const service = new ReminderService(env.DB);\r\n  await service.delete(id, { user });\r\n\r\n  return noContent();\r\n}\r\n\r\nexport default {\r\n  getReminders,\r\n  markReminderAsRead,\r\n  markAllRemindersAsRead,\r\n  deleteReminder\r\n};\r\n\r\n", "/**\r\n * Reminders Routes\r\n * \u8A3B\u518A\u63D0\u9192\u76F8\u95DC\u7684\u6240\u6709\u8DEF\u7531\r\n */\r\n\r\nimport {\r\n  getReminders,\r\n  markReminderAsRead,\r\n  markAllRemindersAsRead,\r\n  deleteReminder\r\n} from '../handlers/reminders.handler.js';\r\n\r\nimport { withAuth } from '../middleware/auth.middleware.js';\r\nimport { withErrorHandler } from '../middleware/error.middleware.js';\r\n\r\n/**\r\n * \u7D44\u5408\u4E2D\u9593\u4EF6\r\n */\r\nfunction compose(...middlewares) {\r\n  return (handler) => {\r\n    return middlewares.reduceRight(\r\n      (wrapped, middleware) => middleware(wrapped),\r\n      handler\r\n    );\r\n  };\r\n}\r\n\r\n/**\r\n * \u8A3B\u518A\u63D0\u9192\u8DEF\u7531\r\n * @param {Router} router - \u8DEF\u7531\u5668\u5BE6\u4F8B\r\n */\r\nexport function registerReminderRoutes(router) {\r\n  const authHandler = compose(withErrorHandler, withAuth);\r\n\r\n  // GET /api/reminders - \u7372\u53D6\u63D0\u9192\u5217\u8868\uFF08\u6240\u6709\u7528\u6236\uFF09\r\n  router.get('/api/reminders', authHandler(getReminders));\r\n\r\n  // PUT /api/reminders/:id/read - \u6A19\u8A18\u70BA\u5DF2\u8B80\uFF08\u6240\u6709\u7528\u6236\uFF09\r\n  router.put('/api/reminders/:id/read', authHandler(markReminderAsRead));\r\n\r\n  // POST /api/reminders/mark-all-read - \u6A19\u8A18\u6240\u6709\u70BA\u5DF2\u8B80\uFF08\u6240\u6709\u7528\u6236\uFF09\r\n  router.post('/api/reminders/mark-all-read', authHandler(markAllRemindersAsRead));\r\n\r\n  // DELETE /api/reminders/:id - \u522A\u9664\u63D0\u9192\uFF08\u6240\u6709\u7528\u6236\uFF09\r\n  router.delete('/api/reminders/:id', authHandler(deleteReminder));\r\n}\r\n\r\nexport default registerReminderRoutes;\r\n\r\n", "/**\r\n * SOP Repository\r\n * \u8CA0\u8CAC\u77E5\u8B58\u5EAB\u7684\u6240\u6709\u8CC7\u6599\u5EAB\u64CD\u4F5C\r\n */\r\n\r\nimport { BaseRepository } from './BaseRepository.js';\r\nimport { TABLES, FIELDS } from '../config/constants.js';\r\n\r\nexport class SopRepository extends BaseRepository {\r\n  constructor(db) {\r\n    super(db, TABLES.SOPS);\r\n  }\r\n\r\n  /**\r\n   * \u67E5\u8A62 SOPs\uFF08\u5E36\u5206\u985E\u4FE1\u606F\uFF09\r\n   * @param {Object} filters - \u904E\u6FFE\u689D\u4EF6\r\n   * @returns {Promise<Array>}\r\n   */\r\n  async findAllWithCategory(filters = {}) {\r\n    let query = `\r\n      SELECT \r\n        s.*,\r\n        c.name as category_name\r\n      FROM ${TABLES.SOPS} s\r\n      LEFT JOIN ${TABLES.SOP_CATEGORIES} c ON s.category_id = c.id\r\n      WHERE 1=1\r\n    `;\r\n\r\n    const params = [];\r\n\r\n    if (filters.category_id) {\r\n      query += ` AND s.category_id = ?`;\r\n      params.push(filters.category_id);\r\n    }\r\n\r\n    if (filters.status) {\r\n      query += ` AND s.status = ?`;\r\n      params.push(filters.status);\r\n    }\r\n\r\n    if (filters.document_type) {\r\n      query += ` AND s.document_type = ?`;\r\n      params.push(filters.document_type);\r\n    }\r\n\r\n    query += ` ORDER BY s.${FIELDS.UPDATED_AT} DESC`;\r\n\r\n    return this.raw(query, params);\r\n  }\r\n\r\n  /**\r\n   * \u641C\u5C0B SOPs\r\n   * @param {string} keyword - \u641C\u5C0B\u95DC\u9375\u5B57\r\n   * @returns {Promise<Array>}\r\n   */\r\n  async search(keyword) {\r\n    const query = `\r\n      SELECT \r\n        s.*,\r\n        c.name as category_name\r\n      FROM ${TABLES.SOPS} s\r\n      LEFT JOIN ${TABLES.SOP_CATEGORIES} c ON s.category_id = c.id\r\n      WHERE s.status = 'published'\r\n        AND (s.title LIKE ? OR s.content LIKE ?)\r\n      ORDER BY s.${FIELDS.UPDATED_AT} DESC\r\n    `;\r\n\r\n    const searchPattern = `%${keyword}%`;\r\n    return this.raw(query, [searchPattern, searchPattern]);\r\n  }\r\n}\r\n\r\nexport default SopRepository;\r\n\r\n", "/**\r\n * SOP Service\r\n * \u8CA0\u8CAC\u77E5\u8B58\u5EAB\u76F8\u95DC\u7684\u696D\u52D9\u908F\u8F2F\r\n */\r\n\r\nimport { SopRepository } from '../repositories/SopRepository.js';\r\nimport { BaseRepository } from '../repositories/BaseRepository.js';\r\nimport { NotFoundError } from '../middleware/error.middleware.js';\r\nimport { validate } from '../utils/validation.util.js';\r\nimport { TABLES } from '../config/constants.js';\r\n\r\nexport class SopService {\r\n  constructor(db) {\r\n    this.repository = new SopRepository(db);\r\n    this.categoryRepository = new BaseRepository(db, TABLES.SOP_CATEGORIES);\r\n  }\r\n\r\n  /**\r\n   * \u7372\u53D6\u5206\u985E\u5217\u8868\r\n   * @returns {Promise<Array>}\r\n   */\r\n  async getCategories() {\r\n    return this.categoryRepository.findAll({}, { orderBy: 'sort_order', order: 'ASC' });\r\n  }\r\n\r\n  /**\r\n   * \u7372\u53D6 SOP \u5217\u8868\r\n   * @param {Object} filters - \u904E\u6FFE\u689D\u4EF6\r\n   * @returns {Promise<Array>}\r\n   */\r\n  async getList(filters = {}) {\r\n    return this.repository.findAllWithCategory(filters);\r\n  }\r\n\r\n  /**\r\n   * \u7372\u53D6 SOP \u8A73\u60C5\r\n   * @param {number} id - SOP ID\r\n   * @returns {Promise<Object>}\r\n   */\r\n  async getDetail(id) {\r\n    const sop = await this.repository.findById(id);\r\n    \r\n    if (!sop) {\r\n      throw new NotFoundError('\u6587\u6A94\u4E0D\u5B58\u5728');\r\n    }\r\n\r\n    return sop;\r\n  }\r\n\r\n  /**\r\n   * \u641C\u5C0B SOPs\r\n   * @param {string} keyword - \u95DC\u9375\u5B57\r\n   * @returns {Promise<Array>}\r\n   */\r\n  async search(keyword) {\r\n    if (!keyword || keyword.trim() === '') {\r\n      return [];\r\n    }\r\n\r\n    return this.repository.search(keyword.trim());\r\n  }\r\n\r\n  /**\r\n   * \u5275\u5EFA SOP\r\n   * @param {Object} data - SOP \u6578\u64DA\r\n   * @param {Object} context - \u4E0A\u4E0B\u6587\r\n   * @returns {Promise<Object>}\r\n   */\r\n  async create(data, context) {\r\n    this._validateSopData(data);\r\n\r\n    // \u8A2D\u7F6E\u5275\u5EFA\u8005\r\n    if (context?.user?.id) {\r\n      data.created_by_user_id = context.user.id;\r\n    }\r\n\r\n    // \u8A2D\u7F6E\u9ED8\u8A8D\u72C0\u614B\r\n    if (!data.status) {\r\n      data.status = 'draft';\r\n    }\r\n\r\n    const id = await this.repository.create(data);\r\n\r\n    console.log(`[SopService] SOP created: ${id}`);\r\n\r\n    return this.repository.findById(id);\r\n  }\r\n\r\n  /**\r\n   * \u66F4\u65B0 SOP\r\n   * @param {number} id - SOP ID\r\n   * @param {Object} data - \u66F4\u65B0\u6578\u64DA\r\n   * @param {Object} context - \u4E0A\u4E0B\u6587\r\n   * @returns {Promise<Object>}\r\n   */\r\n  async update(id, data, context) {\r\n    const existing = await this.repository.findById(id);\r\n    if (!existing) {\r\n      throw new NotFoundError('\u6587\u6A94\u4E0D\u5B58\u5728');\r\n    }\r\n\r\n    const updated = await this.repository.update(id, data);\r\n\r\n    console.log(`[SopService] SOP updated: ${id}`);\r\n\r\n    return updated;\r\n  }\r\n\r\n  /**\r\n   * \u522A\u9664 SOP\r\n   * @param {number} id - SOP ID\r\n   * @param {Object} context - \u4E0A\u4E0B\u6587\r\n   * @returns {Promise<boolean>}\r\n   */\r\n  async delete(id, context) {\r\n    const existing = await this.repository.findById(id);\r\n    if (!existing) {\r\n      throw new NotFoundError('\u6587\u6A94\u4E0D\u5B58\u5728');\r\n    }\r\n\r\n    await this.repository.delete(id);\r\n\r\n    console.log(`[SopService] SOP deleted: ${id}`);\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * \u9A57\u8B49 SOP \u6578\u64DA\r\n   * @private\r\n   */\r\n  _validateSopData(data) {\r\n    validate(data)\r\n      .required('title', '\u6A19\u984C\u70BA\u5FC5\u586B')\r\n      .throwIfFailed();\r\n  }\r\n}\r\n\r\nexport default SopService;\r\n\r\n", "/**\r\n * SOPs API Handler\r\n * \u8655\u7406\u77E5\u8B58\u5EAB\u76F8\u95DC\u7684 HTTP \u8ACB\u6C42\r\n */\r\n\r\nimport { SopService } from '../services/SopService.js';\r\nimport { success, created, noContent, list } from '../utils/response.util.js';\r\n\r\n/**\r\n * \u7372\u53D6 SOP \u5206\u985E\r\n * GET /api/sop-categories\r\n */\r\nexport async function getSopCategories(env, request) {\r\n  const service = new SopService(env.DB);\r\n  const categories = await service.getCategories();\r\n\r\n  return list(categories);\r\n}\r\n\r\n/**\r\n * \u7372\u53D6 SOP \u5217\u8868\r\n * GET /api/sops\r\n */\r\nexport async function getSops(env, request) {\r\n  const url = new URL(request.url);\r\n  \r\n  const filters = {\r\n    category_id: url.searchParams.get('category_id') ? parseInt(url.searchParams.get('category_id')) : null,\r\n    status: url.searchParams.get('status'),\r\n    document_type: url.searchParams.get('document_type')\r\n  };\r\n\r\n  // \u79FB\u9664 null \u503C\r\n  Object.keys(filters).forEach(key => {\r\n    if (filters[key] === null || filters[key] === undefined) {\r\n      delete filters[key];\r\n    }\r\n  });\r\n\r\n  const service = new SopService(env.DB);\r\n  const sops = await service.getList(filters);\r\n\r\n  return success(sops);\r\n}\r\n\r\n/**\r\n * \u7372\u53D6 SOP \u8A73\u60C5\r\n * GET /api/sops/:id\r\n */\r\nexport async function getSop(env, request) {\r\n  const id = parseInt(request.params.id);\r\n\r\n  const service = new SopService(env.DB);\r\n  const sop = await service.getDetail(id);\r\n\r\n  return success(sop);\r\n}\r\n\r\n/**\r\n * \u641C\u5C0B SOPs\r\n * GET /api/sops/search\r\n */\r\nexport async function searchSops(env, request) {\r\n  const url = new URL(request.url);\r\n  const keyword = url.searchParams.get('q') || url.searchParams.get('keyword');\r\n\r\n  const service = new SopService(env.DB);\r\n  const results = await service.search(keyword);\r\n\r\n  return success(results);\r\n}\r\n\r\n/**\r\n * \u5275\u5EFA SOP\r\n * POST /api/sops\r\n */\r\nexport async function createSop(env, request) {\r\n  const data = await request.json();\r\n  const user = request.user;\r\n\r\n  const service = new SopService(env.DB);\r\n  const sop = await service.create(data, { user });\r\n\r\n  return created(sop, 'SOP \u5275\u5EFA\u6210\u529F');\r\n}\r\n\r\n/**\r\n * \u66F4\u65B0 SOP\r\n * PUT /api/sops/:id\r\n */\r\nexport async function updateSop(env, request) {\r\n  const id = parseInt(request.params.id);\r\n  const data = await request.json();\r\n  const user = request.user;\r\n\r\n  const service = new SopService(env.DB);\r\n  const sop = await service.update(id, data, { user });\r\n\r\n  return success(sop);\r\n}\r\n\r\n/**\r\n * \u522A\u9664 SOP\r\n * DELETE /api/sops/:id\r\n */\r\nexport async function deleteSop(env, request) {\r\n  const id = parseInt(request.params.id);\r\n  const user = request.user;\r\n\r\n  const service = new SopService(env.DB);\r\n  await service.delete(id, { user });\r\n\r\n  return noContent();\r\n}\r\n\r\nexport default {\r\n  getSopCategories,\r\n  getSops,\r\n  getSop,\r\n  searchSops,\r\n  createSop,\r\n  updateSop,\r\n  deleteSop\r\n};\r\n\r\n", "/**\r\n * SOPs Routes\r\n * \u8A3B\u518A\u77E5\u8B58\u5EAB\u76F8\u95DC\u7684\u6240\u6709\u8DEF\u7531\r\n */\r\n\r\nimport {\r\n  getSopCategories,\r\n  getSops,\r\n  getSop,\r\n  searchSops,\r\n  createSop,\r\n  updateSop,\r\n  deleteSop\r\n} from '../handlers/sops.handler.js';\r\n\r\nimport { withAuth, withAdmin } from '../middleware/auth.middleware.js';\r\nimport { withErrorHandler } from '../middleware/error.middleware.js';\r\n\r\n/**\r\n * \u7D44\u5408\u4E2D\u9593\u4EF6\r\n */\r\nfunction compose(...middlewares) {\r\n  return (handler) => {\r\n    return middlewares.reduceRight(\r\n      (wrapped, middleware) => middleware(wrapped),\r\n      handler\r\n    );\r\n  };\r\n}\r\n\r\n/**\r\n * \u8A3B\u518A SOP \u8DEF\u7531\r\n * @param {Router} router - \u8DEF\u7531\u5668\u5BE6\u4F8B\r\n */\r\nexport function registerSopRoutes(router) {\r\n  const authHandler = compose(withErrorHandler, withAuth);\r\n  const adminHandler = compose(withErrorHandler, withAdmin);\r\n\r\n  // GET /api/sop-categories - \u7372\u53D6\u5206\u985E\uFF08\u6240\u6709\u7528\u6236\uFF09\r\n  router.get('/api/sop-categories', authHandler(getSopCategories));\r\n\r\n  // GET /api/sops/search - \u641C\u5C0B SOPs\uFF08\u6240\u6709\u7528\u6236\uFF09\r\n  router.get('/api/sops/search', authHandler(searchSops));\r\n\r\n  // GET /api/sops - \u7372\u53D6 SOP \u5217\u8868\uFF08\u6240\u6709\u7528\u6236\uFF09\r\n  router.get('/api/sops', authHandler(getSops));\r\n\r\n  // GET /api/sops/:id - \u7372\u53D6 SOP \u8A73\u60C5\uFF08\u6240\u6709\u7528\u6236\uFF09\r\n  router.get('/api/sops/:id', authHandler(getSop));\r\n\r\n  // POST /api/sops - \u5275\u5EFA SOP\uFF08\u7BA1\u7406\u54E1\uFF09\r\n  router.post('/api/sops', adminHandler(createSop));\r\n\r\n  // PUT /api/sops/:id - \u66F4\u65B0 SOP\uFF08\u7BA1\u7406\u54E1\uFF09\r\n  router.put('/api/sops/:id', adminHandler(updateSop));\r\n\r\n  // DELETE /api/sops/:id - \u522A\u9664 SOP\uFF08\u7BA1\u7406\u54E1\uFF09\r\n  router.delete('/api/sops/:id', adminHandler(deleteSop));\r\n}\r\n\r\nexport default registerSopRoutes;\r\n\r\n", "/**\r\n * System Config Service\r\n * \u8CA0\u8CAC\u7CFB\u7D71\u914D\u7F6E\u7684\u696D\u52D9\u908F\u8F2F\r\n */\r\n\r\nimport { BaseRepository } from '../repositories/BaseRepository.js';\r\nimport { TABLES } from '../config/constants.js';\r\n\r\nexport class SystemConfigService {\r\n  constructor(db) {\r\n    this.repository = new BaseRepository(db, TABLES.SYSTEM_PARAMETERS);\r\n  }\r\n\r\n  /**\r\n   * \u7372\u53D6\u6240\u6709\u914D\u7F6E\r\n   * @returns {Promise<Array>}\r\n   */\r\n  async getAllConfig() {\r\n    return this.repository.findAll({}, { orderBy: 'param_category', order: 'ASC' });\r\n  }\r\n\r\n  /**\r\n   * \u7372\u53D6\u7279\u5B9A\u5206\u985E\u7684\u914D\u7F6E\r\n   * @param {string} category - \u5206\u985E\r\n   * @returns {Promise<Array>}\r\n   */\r\n  async getByCategory(category) {\r\n    return this.repository.findAll({ param_category: category });\r\n  }\r\n\r\n  /**\r\n   * \u7372\u53D6\u55AE\u500B\u914D\u7F6E\u503C\r\n   * @param {string} category - \u5206\u985E\r\n   * @param {string} key - \u9375\r\n   * @returns {Promise<string|null>}\r\n   */\r\n  async getValue(category, key) {\r\n    const config = await this.repository.findOne({\r\n      param_category: category,\r\n      param_key: key\r\n    });\r\n\r\n    return config?.param_value || null;\r\n  }\r\n\r\n  /**\r\n   * \u66F4\u65B0\u914D\u7F6E\r\n   * @param {string} category - \u5206\u985E\r\n   * @param {string} key - \u9375\r\n   * @param {string} value - \u503C\r\n   * @param {Object} context - \u4E0A\u4E0B\u6587\r\n   * @returns {Promise<Object>}\r\n   */\r\n  async updateValue(category, key, value, context) {\r\n    const existing = await this.repository.findOne({\r\n      param_category: category,\r\n      param_key: key\r\n    });\r\n\r\n    if (!existing) {\r\n      // \u5275\u5EFA\u65B0\u914D\u7F6E\r\n      return this.repository.create({\r\n        param_category: category,\r\n        param_key: key,\r\n        param_value: value,\r\n        last_modified_by_user_id: context?.user?.id\r\n      });\r\n    }\r\n\r\n    // \u6AA2\u67E5\u662F\u5426\u53EF\u7DE8\u8F2F\r\n    if (existing.is_editable === false || existing.is_editable === 0) {\r\n      throw new Error('\u6B64\u914D\u7F6E\u4E0D\u53EF\u7DE8\u8F2F');\r\n    }\r\n\r\n    // \u66F4\u65B0\u914D\u7F6E\r\n    return this.repository.update(existing.id, {\r\n      param_value: value,\r\n      last_modified_by_user_id: context?.user?.id\r\n    });\r\n  }\r\n}\r\n\r\nexport default SystemConfigService;\r\n\r\n", "/**\r\n * System Config API Handler\r\n * \u8655\u7406\u7CFB\u7D71\u914D\u7F6E\u76F8\u95DC\u7684 HTTP \u8ACB\u6C42\r\n */\r\n\r\nimport { SystemConfigService } from '../services/SystemConfigService.js';\r\nimport { success, list } from '../utils/response.util.js';\r\n\r\n/**\r\n * \u7372\u53D6\u6240\u6709\u914D\u7F6E\r\n * GET /api/system/config\r\n */\r\nexport async function getAllConfig(env, request) {\r\n  const service = new SystemConfigService(env.DB);\r\n  const config = await service.getAllConfig();\r\n\r\n  return list(config);\r\n}\r\n\r\n/**\r\n * \u7372\u53D6\u5206\u985E\u914D\u7F6E\r\n * GET /api/system/config/:category\r\n */\r\nexport async function getCategoryConfig(env, request) {\r\n  const category = request.params.category;\r\n\r\n  const service = new SystemConfigService(env.DB);\r\n  const config = await service.getByCategory(category);\r\n\r\n  return list(config);\r\n}\r\n\r\n/**\r\n * \u66F4\u65B0\u914D\u7F6E\r\n * PUT /api/system/config/:category/:key\r\n */\r\nexport async function updateConfig(env, request) {\r\n  const { category, key } = request.params;\r\n  const { value } = await request.json();\r\n  const user = request.user;\r\n\r\n  const service = new SystemConfigService(env.DB);\r\n  await service.updateValue(category, key, value, { user });\r\n\r\n  return success({ message: '\u914D\u7F6E\u66F4\u65B0\u6210\u529F' });\r\n}\r\n\r\nexport default {\r\n  getAllConfig,\r\n  getCategoryConfig,\r\n  updateConfig\r\n};\r\n\r\n", "/**\r\n * System Config Routes\r\n * \u8A3B\u518A\u7CFB\u7D71\u914D\u7F6E\u76F8\u95DC\u7684\u6240\u6709\u8DEF\u7531\r\n */\r\n\r\nimport {\r\n  getAllConfig,\r\n  getCategoryConfig,\r\n  updateConfig\r\n} from '../handlers/config.handler.js';\r\n\r\nimport { withAuth, withAdmin } from '../middleware/auth.middleware.js';\r\nimport { withErrorHandler } from '../middleware/error.middleware.js';\r\n\r\n/**\r\n * \u7D44\u5408\u4E2D\u9593\u4EF6\r\n */\r\nfunction compose(...middlewares) {\r\n  return (handler) => {\r\n    return middlewares.reduceRight(\r\n      (wrapped, middleware) => middleware(wrapped),\r\n      handler\r\n    );\r\n  };\r\n}\r\n\r\n/**\r\n * \u8A3B\u518A\u7CFB\u7D71\u914D\u7F6E\u8DEF\u7531\r\n * @param {Router} router - \u8DEF\u7531\u5668\u5BE6\u4F8B\r\n */\r\nexport function registerConfigRoutes(router) {\r\n  const authHandler = compose(withErrorHandler, withAuth);\r\n  const adminHandler = compose(withErrorHandler, withAdmin);\r\n\r\n  // GET /api/system/config - \u7372\u53D6\u6240\u6709\u914D\u7F6E\uFF08\u6240\u6709\u7528\u6236\uFF09\r\n  router.get('/api/system/config', authHandler(getAllConfig));\r\n\r\n  // GET /api/system/config/:category - \u7372\u53D6\u5206\u985E\u914D\u7F6E\uFF08\u6240\u6709\u7528\u6236\uFF09\r\n  router.get('/api/system/config/:category', authHandler(getCategoryConfig));\r\n\r\n  // PUT /api/system/config/:category/:key - \u66F4\u65B0\u914D\u7F6E\uFF08\u7BA1\u7406\u54E1\uFF09\r\n  router.put('/api/system/config/:category/:key', adminHandler(updateConfig));\r\n}\r\n\r\nexport default registerConfigRoutes;\r\n\r\n", "/**\r\n * System API Handler\r\n * \u8655\u7406\u7CFB\u7D71\u57FA\u790E\u6578\u64DA\u7684 HTTP \u8ACB\u6C42\r\n */\r\n\r\nimport { success, list } from '../utils/response.util.js';\r\nimport { TABLES } from '../config/constants.js';\r\n\r\n/**\r\n * \u7372\u53D6\u696D\u52D9\u985E\u578B\r\n * GET /api/business-types\r\n */\r\nexport async function getBusinessTypes(env, request) {\r\n  const result = await env.DB.prepare(`\r\n    SELECT * FROM ${TABLES.BUSINESS_TYPES}\r\n    WHERE is_active = 1\r\n    ORDER BY type_name\r\n  `).all();\r\n\r\n  return list(result.results || []);\r\n}\r\n\r\n/**\r\n * \u7372\u53D6\u8ACB\u5047\u985E\u578B\r\n * GET /api/leave-types\r\n */\r\nexport async function getLeaveTypes(env, request) {\r\n  const result = await env.DB.prepare(`\r\n    SELECT * FROM ${TABLES.LEAVE_TYPES}\r\n    WHERE is_active = 1\r\n    ORDER BY type_name\r\n  `).all();\r\n\r\n  return list(result.results || []);\r\n}\r\n\r\n/**\r\n * \u7372\u53D6\u5047\u65E5\u5217\u8868\r\n * GET /api/holidays\r\n */\r\nexport async function getHolidays(env, request) {\r\n  const url = new URL(request.url);\r\n  const year = url.searchParams.get('year') || new Date().getFullYear();\r\n\r\n  const result = await env.DB.prepare(`\r\n    SELECT * FROM ${TABLES.HOLIDAYS}\r\n    WHERE strftime('%Y', holiday_date) = ?\r\n    ORDER BY holiday_date\r\n  `).bind(year.toString()).all();\r\n\r\n  return list(result.results || []);\r\n}\r\n\r\n/**\r\n * \u7372\u53D6\u5DE5\u4F5C\u985E\u578B\uFF08\u5DE5\u6642\u7528\uFF09\r\n * GET /api/work-types\r\n */\r\nexport async function getWorkTypes(env, request) {\r\n  // \u8FD4\u56DE\u56FA\u5B9A\u7684\u5DE5\u4F5C\u985E\u578B\u5217\u8868\r\n  const workTypes = [\r\n    { id: 1, name: '\u6B63\u5E38\u5DE5\u6642', rate: 1.00 },\r\n    { id: 2, name: '\u5E73\u65E5\u52A0\u73ED(1.34)', rate: 1.34 },\r\n    { id: 3, name: '\u5E73\u65E5\u52A0\u73ED(1.67)', rate: 1.67 },\r\n    { id: 4, name: '\u4F11\u606F\u65E5\u52A0\u73ED(1.34)', rate: 1.34 },\r\n    { id: 5, name: '\u4F11\u606F\u65E5\u52A0\u73ED(1.67)', rate: 1.67 },\r\n    { id: 6, name: '\u4F11\u606F\u65E5\u52A0\u73ED(2.67)', rate: 2.67 },\r\n    { id: 7, name: '\u570B\u5B9A\u5047\u65E5\u52A0\u73ED', rate: 2.00 }\r\n  ];\r\n\r\n  return list(workTypes);\r\n}\r\n\r\nexport default {\r\n  getBusinessTypes,\r\n  getLeaveTypes,\r\n  getHolidays,\r\n  getWorkTypes\r\n};\r\n\r\n", "/**\r\n * System Routes\r\n * \u8A3B\u518A\u7CFB\u7D71\u57FA\u790E\u6578\u64DA\u7684\u6240\u6709\u8DEF\u7531\r\n */\r\n\r\nimport {\r\n  getBusinessTypes,\r\n  getLeaveTypes,\r\n  getHolidays,\r\n  getWorkTypes\r\n} from '../handlers/system.handler.js';\r\n\r\nimport { withAuth } from '../middleware/auth.middleware.js';\r\nimport { withErrorHandler } from '../middleware/error.middleware.js';\r\n\r\n/**\r\n * \u7D44\u5408\u4E2D\u9593\u4EF6\r\n */\r\nfunction compose(...middlewares) {\r\n  return (handler) => {\r\n    return middlewares.reduceRight(\r\n      (wrapped, middleware) => middleware(wrapped),\r\n      handler\r\n    );\r\n  };\r\n}\r\n\r\n/**\r\n * \u8A3B\u518A\u7CFB\u7D71\u8DEF\u7531\r\n * @param {Router} router - \u8DEF\u7531\u5668\u5BE6\u4F8B\r\n */\r\nexport function registerSystemRoutes(router) {\r\n  const authHandler = compose(withErrorHandler, withAuth);\r\n\r\n  // GET /api/business-types - \u7372\u53D6\u696D\u52D9\u985E\u578B\uFF08\u6240\u6709\u7528\u6236\uFF09\r\n  router.get('/api/business-types', authHandler(getBusinessTypes));\r\n\r\n  // GET /api/leave-types - \u7372\u53D6\u8ACB\u5047\u985E\u578B\uFF08\u6240\u6709\u7528\u6236\uFF09\r\n  router.get('/api/leave-types', authHandler(getLeaveTypes));\r\n\r\n  // GET /api/holidays - \u7372\u53D6\u5047\u65E5\u5217\u8868\uFF08\u6240\u6709\u7528\u6236\uFF09\r\n  router.get('/api/holidays', authHandler(getHolidays));\r\n\r\n  // GET /api/work-types - \u7372\u53D6\u5DE5\u4F5C\u985E\u578B\uFF08\u6240\u6709\u7528\u6236\uFF09\r\n  router.get('/api/work-types', authHandler(getWorkTypes));\r\n}\r\n\r\nexport default registerSystemRoutes;\r\n\r\n", "/**\r\n * Cloudflare Worker API - \u91CD\u69CB\u5F8C\u7684\u4E3B\u5165\u53E3\r\n * \u4F7F\u7528\u6A21\u7D44\u5316\u67B6\u69CB\uFF1ARouter + Middleware + Handler + Service + Repository\r\n * \r\n * \u7248\u672C: 3.0\r\n * \u5275\u5EFA\u65E5\u671F: 2025-10-26\r\n */\r\n\r\nimport { Router } from './routes/router.js';\r\nimport { registerAuthRoutes } from './routes/auth.routes.js';\r\nimport { registerClientRoutes } from './routes/clients.routes.js';\r\nimport { registerTaskRoutes } from './routes/tasks.routes.js';\r\nimport { registerEmployeeRoutes } from './routes/employees.routes.js';\r\nimport { registerReportRoutes } from './routes/reports.routes.js';\r\nimport { registerTimesheetRoutes } from './routes/timesheets.routes.js';\r\nimport { registerReminderRoutes } from './routes/reminders.routes.js';\r\nimport { registerSopRoutes } from './routes/sops.routes.js';\r\nimport { registerConfigRoutes } from './routes/config.routes.js';\r\nimport { registerSystemRoutes } from './routes/system.routes.js';\r\n\r\nimport { corsHeaders } from './utils.js';\r\n\r\n/**\r\n * \u8655\u7406 OPTIONS \u8ACB\u6C42\uFF08CORS \u9810\u6AA2\uFF09\r\n */\r\nfunction handleOptions(request) {\r\n  return new Response(null, {\r\n    headers: {\r\n      ...corsHeaders,\r\n      'Access-Control-Max-Age': '86400'\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * \u5275\u5EFA\u8DEF\u7531\u5668\u4E26\u8A3B\u518A\u6240\u6709\u8DEF\u7531\r\n */\r\nfunction createRouter() {\r\n  const router = new Router();\r\n\r\n  // \u6E2C\u8A66\u7AEF\u9EDE - \u9A57\u8B49\u90E8\u7F72\u7248\u672C\r\n  router.get('/api/version', async (env, request) => {\r\n    return new Response(JSON.stringify({\r\n      version: '3.0',\r\n      timestamp: new Date().toISOString(),\r\n      status: 'refactored',\r\n      modules: ['auth', 'clients', 'tasks']\r\n    }), {\r\n      headers: { 'Content-Type': 'application/json', ...corsHeaders }\r\n    });\r\n  });\r\n  \r\n  // \u6E2C\u8A66\u7AEF\u9EDE - \u6E2C\u8A66\u767B\u9304\uFF08\u4E0D\u9700\u8A8D\u8B49\uFF09\r\n  router.post('/api/test-login', async (env, request) => {\r\n    const { username, password } = await request.json();\r\n    return new Response(JSON.stringify({\r\n      success: true,\r\n      test: 'ok',\r\n      received: { username, password }\r\n    }), {\r\n      status: 200,\r\n      headers: { 'Content-Type': 'application/json', ...corsHeaders }\r\n    });\r\n  });\r\n\r\n  // \u8A3B\u518A\u5404\u6A21\u7D44\u7684\u8DEF\u7531\r\n  registerAuthRoutes(router);\r\n  registerClientRoutes(router);\r\n  registerTaskRoutes(router);\r\n  registerEmployeeRoutes(router);\r\n  registerReportRoutes(router);\r\n  registerTimesheetRoutes(router);\r\n  registerReminderRoutes(router);\r\n  registerSopRoutes(router);\r\n  registerConfigRoutes(router);\r\n  registerSystemRoutes(router);\r\n\r\n  return router;\r\n}\r\n\r\n/**\r\n * Worker \u4E3B\u5165\u53E3\r\n */\r\nexport default {\r\n  async fetch(request, env, ctx) {\r\n    // \u8655\u7406 OPTIONS \u8ACB\u6C42\r\n    if (request.method === 'OPTIONS') {\r\n      return handleOptions(request);\r\n    }\r\n\r\n    try {\r\n      // \u5275\u5EFA\u8DEF\u7531\u5668\r\n      const router = createRouter();\r\n      \r\n      // \u8655\u7406\u8ACB\u6C42\r\n      return await router.handle(request, env);\r\n    } catch (error) {\r\n      // \u5168\u5C40\u932F\u8AA4\u8655\u7406\uFF08\u6700\u5F8C\u9632\u7DDA\uFF09\r\n      console.error('[Global Error]', error);\r\n      \r\n      return new Response(JSON.stringify({\r\n        success: false,\r\n        error: {\r\n          code: 'INTERNAL_ERROR',\r\n          message: '\u670D\u52D9\u5668\u5167\u90E8\u932F\u8AA4'\r\n        }\r\n      }), {\r\n        status: 500,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          ...corsHeaders\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * \u4F7F\u7528\u8AAA\u660E\uFF1A\r\n * \r\n * 1. \u5275\u5EFA\u65B0\u529F\u80FD\u6642\uFF1A\r\n *    - \u5275\u5EFA Repository (repositories/XxxRepository.js)\r\n *    - \u5275\u5EFA Service (services/XxxService.js)\r\n *    - \u5275\u5EFA Handler (handlers/xxx.handler.js)\r\n *    - \u5275\u5EFA Routes (routes/xxx.routes.js)\r\n *    - \u5728\u6B64\u6587\u4EF6\u4E2D\u5C0E\u5165\u4E26\u8A3B\u518A\u8DEF\u7531\r\n * \r\n * 2. \u4E2D\u9593\u4EF6\u4F7F\u7528\uFF1A\r\n *    - withAuth: \u9700\u8981\u8A8D\u8B49\r\n *    - withAdmin: \u9700\u8981\u7BA1\u7406\u54E1\u6B0A\u9650\r\n *    - withErrorHandler: \u7D71\u4E00\u932F\u8AA4\u8655\u7406\uFF08\u6240\u6709\u8DEF\u7531\u5FC5\u9808\u4F7F\u7528\uFF09\r\n * \r\n * 3. \u97FF\u61C9\u683C\u5F0F\uFF1A\r\n *    - \u6210\u529F\uFF1Asuccess(data, meta)\r\n *    - \u5275\u5EFA\uFF1Acreated(data, message)\r\n *    - \u5206\u9801\uFF1Apaginated(data, total, page, pageSize)\r\n *    - \u7121\u5167\u5BB9\uFF1AnoContent()\r\n *    - \u932F\u8AA4\uFF1Aerror(message, code, status, details)\r\n * \r\n * 4. \u932F\u8AA4\u8655\u7406\uFF1A\r\n *    - \u4F7F\u7528\u81EA\u5B9A\u7FA9\u932F\u8AA4\u985E\uFF08ValidationError, NotFoundError \u7B49\uFF09\r\n *    - \u932F\u8AA4\u4E2D\u9593\u4EF6\u6703\u81EA\u52D5\u8F49\u63DB\u70BA\u6B63\u78BA\u7684 HTTP \u97FF\u61C9\r\n * \r\n * 5. \u8CC7\u6599\u5EAB\u64CD\u4F5C\uFF1A\r\n *    - \u7D71\u4E00\u4F7F\u7528 Repository \u5C64\r\n *    - \u4F7F\u7528 TABLES \u548C FIELDS \u5E38\u91CF\uFF08\u907F\u514D\u5B57\u7B26\u4E32\u786C\u7DE8\u78BC\uFF09\r\n *    - \u8907\u96DC\u67E5\u8A62\u653E\u5728 Repository \u4E2D\r\n */\r\n\r\n"],
  "mappings": "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",
  "names": ["handler", "compose", "compose", "compose", "compose", "compose", "compose", "compose", "compose", "compose"]
}
