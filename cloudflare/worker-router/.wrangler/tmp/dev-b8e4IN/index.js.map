{
  "version": 3,
  "sources": ["../../../src/index.js", "../../../../../../../AppData/Local/npm-cache/_npx/d77349f55c2be1c0/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../../../AppData/Local/npm-cache/_npx/d77349f55c2be1c0/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-tyxhaK/middleware-insertion-facade.js", "../../../../../../../AppData/Local/npm-cache/_npx/d77349f55c2be1c0/node_modules/wrangler/templates/middleware/common.ts", "../bundle-tyxhaK/middleware-loader.entry.ts"],
  "sourceRoot": "C:\\Users\\miama\\Desktop\\horgoscpa\\cloudflare\\worker-router\\.wrangler\\tmp\\dev-b8e4IN",
  "sourcesContent": ["// \u5DE5\u5177\uFF1AJSON \u56DE\u61C9\uFF08\u7B26\u5408 Envelope\uFF09\r\nfunction jsonResponse(status, body, extraHeaders = {}) {\r\n\treturn new Response(JSON.stringify(body), {\r\n\t\tstatus,\r\n\t\theaders: {\r\n\t\t\t\"Content-Type\": \"application/json; charset=utf-8\",\r\n\t\t\t...extraHeaders,\r\n\t\t},\r\n\t});\r\n}\r\n\r\n// \u5DE5\u5177\uFF1A\u751F\u6210 Request Id\uFF08\u7C21\u6613\uFF09\r\nfunction generateRequestId() {\r\n\tconst random = crypto.getRandomValues(new Uint8Array(8));\r\n\treturn (\r\n\t\t\"req_\" + Array.from(random).map((b) => b.toString(16).padStart(2, \"0\")).join(\"\")\r\n\t);\r\n}\r\n\r\n// \u5DE5\u5177\uFF1APBKDF2-SHA256 \u9A57\u8B49\uFF08\u5132\u5B58\u683C\u5F0F\uFF1Apbkdf2$<iterations>$<saltBase64>$<hashBase64>\uFF09\r\nasync function verifyPasswordPBKDF2(password, stored) {\r\n\tif (!stored || typeof stored !== \"string\") return false;\r\n\tconst parts = stored.split(\"$\");\r\n\tif (parts.length !== 4 || parts[0] !== \"pbkdf2\") return false;\r\n\tconst iterations = parseInt(parts[1], 10);\r\n\t// Cloudflare Workers \u9650\u5236\uFF1A\u8FED\u4EE3\u4E0A\u9650\u8F03\u4F4E\uFF1B\u653E\u5BEC\u4E0B\u9650\u81F3 100k\r\n\tif (!Number.isFinite(iterations) || iterations < 100000) return false;\r\n\tconst salt = Uint8Array.from(atob(parts[2]), (c) => c.charCodeAt(0));\r\n\tconst expected = Uint8Array.from(atob(parts[3]), (c) => c.charCodeAt(0));\r\n\r\n\tconst enc = new TextEncoder();\r\n\tconst keyMaterial = await crypto.subtle.importKey(\r\n\t\t\"raw\",\r\n\t\tenc.encode(password),\r\n\t\t{ name: \"PBKDF2\" },\r\n\t\tfalse,\r\n\t\t[\"deriveBits\"]\r\n\t);\r\n\tconst derivedBits = await crypto.subtle.deriveBits(\r\n\t\t{\r\n\t\t\tname: \"PBKDF2\",\r\n\t\t\thash: \"SHA-256\",\r\n\t\t\tsalt,\r\n\t\t\titerations,\r\n\t\t},\r\n\t\tkeyMaterial,\r\n\t\texpected.byteLength * 8\r\n\t);\r\n\tconst derived = new Uint8Array(derivedBits);\r\n\tif (derived.byteLength !== expected.byteLength) return false;\r\n\tlet diff = 0;\r\n\tfor (let i = 0; i < derived.byteLength; i++) diff |= derived[i] ^ expected[i];\r\n\treturn diff === 0;\r\n}\r\n\r\n// \u5DE5\u5177\uFF1A\u96A8\u6A5F Session Id\uFF0832 bytes base64\uFF09\r\nfunction generateSessionId() {\r\n\tconst bytes = crypto.getRandomValues(new Uint8Array(32));\r\n\treturn btoa(String.fromCharCode(...bytes)).replaceAll(\"=\", \"\").replaceAll(\"+\", \"-\").replaceAll(\"/\", \"_\");\r\n}\r\n\r\n// \u5DE5\u5177\uFF1APBKDF2-SHA256 \u7522\u751F\u96DC\u6E4A\uFF08\u5132\u5B58\u683C\u5F0F\uFF1Apbkdf2$<iterations>$<saltBase64>$<hashBase64>\uFF09\r\nasync function hashPasswordPBKDF2(password, iterations = 100000, keyLen = 32) {\r\n\tconst salt = crypto.getRandomValues(new Uint8Array(16));\r\n\tconst enc = new TextEncoder();\r\n\tconst keyMaterial = await crypto.subtle.importKey(\r\n\t\t\"raw\",\r\n\t\tenc.encode(password),\r\n\t\t{ name: \"PBKDF2\" },\r\n\t\tfalse,\r\n\t\t[\"deriveBits\"]\r\n\t);\r\n\tconst derivedBits = await crypto.subtle.deriveBits(\r\n\t\t{ name: \"PBKDF2\", hash: \"SHA-256\", salt, iterations },\r\n\t\tkeyMaterial,\r\n\t\tkeyLen * 8\r\n\t);\r\n\tconst derived = new Uint8Array(derivedBits);\r\n\tconst b64 = (u8) => btoa(String.fromCharCode(...u8));\r\n\treturn `pbkdf2${\"$\"}${iterations}${\"$\"}${b64(salt)}${\"$\"}${b64(derived)}`;\r\n}\r\n\r\nexport default {\r\n\tasync fetch(request, env) {\r\n\t\tconst url = new URL(request.url);\r\n\t\tconst path = url.pathname;\r\n\t\tconst method = request.method.toUpperCase();\r\n\t\tconst requestId = request.headers.get(\"X-Request-Id\") || generateRequestId();\r\n\r\n\t\tconst proxy = (host, newPath) => {\r\n\t\t\tconst target = new URL(request.url);\r\n\t\t\ttarget.protocol = \"https:\";\r\n\t\t\ttarget.hostname = host;\r\n\t\t\ttarget.pathname = newPath;\r\n\t\t\treturn fetch(new Request(target.toString(), request));\r\n\t\t};\r\n\r\n\t\t// \u767B\u5165 API\uFF08\u672C Worker \u76F4\u8655\u7406\uFF09\uFF1A/internal/api/v1/auth/login\r\n\t\tif (path === \"/internal/api/v1/auth/login\") {\r\n\t\t\tif (method !== \"POST\") {\r\n\t\t\t\treturn jsonResponse(405, { ok: false, code: \"METHOD_NOT_ALLOWED\", message: \"\u65B9\u6CD5\u4E0D\u5141\u8A31\", meta: { requestId } });\r\n\t\t\t}\r\n\t\t\tlet payload;\r\n\t\t\ttry {\r\n\t\t\t\tpayload = await request.json();\r\n\t\t\t} catch (_) {\r\n\t\t\t\treturn jsonResponse(400, { ok: false, code: \"BAD_REQUEST\", message: \"\u8ACB\u6C42\u683C\u5F0F\u932F\u8AA4\", meta: { requestId } });\r\n\t\t\t}\r\n\t\t\tconst username = (payload?.username || \"\").trim().toLowerCase();\r\n\t\t\tconst password = payload?.password || \"\";\r\n\t\t\tconst errors = [];\r\n\t\t\tif (!username) errors.push({ field: \"username\", message: \"\u5FC5\u586B\" });\r\n\t\t\tif (!password) errors.push({ field: \"password\", message: \"\u5FC5\u586B\" });\r\n\t\t\tif (errors.length > 0) {\r\n\t\t\t\treturn jsonResponse(422, { ok: false, code: \"VALIDATION_ERROR\", message: \"\u8F38\u5165\u6709\u8AA4\", errors, meta: { requestId } });\r\n\t\t\t}\r\n\r\n\t\t\tif (!env.DATABASE) {\r\n\t\t\t\treturn jsonResponse(500, { ok: false, code: \"INTERNAL_ERROR\", message: \"\u8CC7\u6599\u5EAB\u672A\u7D81\u5B9A\", meta: { requestId } });\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\t// \u8B80\u53D6\u4F7F\u7528\u8005\r\n\t\t\t\tconst userRow = await env.DATABASE.prepare(\r\n\t\t\t\t\t\"SELECT user_id, username, password_hash, name, email, is_admin, login_attempts, last_failed_login, is_deleted FROM Users WHERE LOWER(username) = ? LIMIT 1\"\r\n\t\t\t\t).bind(username).first();\r\n\r\n\t\t\t\t// \u907F\u514D\u6D29\u6F0F\u5E33\u865F\u5B58\u5728\u8207\u5426\r\n\t\t\t\tconst unauthorized = () => jsonResponse(401, { ok: false, code: \"UNAUTHORIZED\", message: \"\u5E33\u865F\u6216\u5BC6\u78BC\u932F\u8AA4\", meta: { requestId } });\r\n\r\n\t\t\t\tif (!userRow || userRow.is_deleted === 1) {\r\n\t\t\t\t\treturn unauthorized();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// \u9396\u5B9A\u6AA2\u67E5\uFF08\u9023\u7E8C\u5931\u6557 >=5 \u4E14 15 \u5206\u9418\u5167\uFF09\r\n\t\t\t\tconst attempts = Number(userRow.login_attempts || 0);\r\n\t\t\t\tif (attempts >= 5 && userRow.last_failed_login) {\r\n\t\t\t\t\tconst lastFailedAt = Date.parse(userRow.last_failed_login);\r\n\t\t\t\t\tif (!Number.isNaN(lastFailedAt)) {\r\n\t\t\t\t\t\tconst fifteenMinAgo = Date.now() - 15 * 60 * 1000;\r\n\t\t\t\t\t\tif (lastFailedAt > fifteenMinAgo) {\r\n\t\t\t\t\t\t\treturn jsonResponse(401, { ok: false, code: \"ACCOUNT_LOCKED\", message: \"\u5617\u8A66\u904E\u591A\uFF0C\u7A0D\u5F8C\u518D\u8A66\", meta: { requestId } });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// \u5BC6\u78BC\u9A57\u8B49\r\n\t\t\t\tconst hash = userRow.password_hash || \"\";\r\n\t\t\t\tconst passOk = await verifyPasswordPBKDF2(password, hash);\r\n\t\t\t\tif (!passOk) {\r\n\t\t\t\t\tawait env.DATABASE.prepare(\r\n\t\t\t\t\t\t\"UPDATE Users SET login_attempts = COALESCE(login_attempts,0) + 1, last_failed_login = ? WHERE user_id = ?\"\r\n\t\t\t\t\t).bind(new Date().toISOString(), userRow.user_id).run();\r\n\t\t\t\t\treturn unauthorized();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// \u6210\u529F\uFF1A\u91CD\u7F6E\u5617\u8A66\u6B21\u6578\u3001\u66F4\u65B0 last_login\r\n\t\t\t\tawait env.DATABASE.prepare(\r\n\t\t\t\t\t\"UPDATE Users SET login_attempts = 0, last_login = ? WHERE user_id = ?\"\r\n\t\t\t\t).bind(new Date().toISOString(), userRow.user_id).run();\r\n\r\n\t\t\t\t// \u5EFA\u7ACB\u6703\u8A71\r\n\t\t\t\tconst sessionId = generateSessionId();\r\n\t\t\t\tconst ttlSec = parseInt(env.SESSION_TTL_SECONDS || \"2592000\", 10);\r\n\t\t\t\tconst createdAt = new Date();\r\n\t\t\t\tconst expiresAt = new Date(createdAt.getTime() + ttlSec * 1000);\r\n\t\t\t\tawait env.DATABASE.prepare(\r\n\t\t\t\t\t\"INSERT INTO sessions (id, user_id, created_at, expires_at, meta_json) VALUES (?, ?, ?, ?, ?)\"\r\n\t\t\t\t).bind(sessionId, String(userRow.user_id), createdAt.toISOString(), expiresAt.toISOString(), JSON.stringify({ ua: request.headers.get(\"User-Agent\") || \"\" })).run();\r\n\r\n\t\t\t\t// \u8A2D\u5B9A Cookie\r\n\t\t\t\tconst cookieName = String(env.SESSION_COOKIE_NAME || \"session\");\r\n\t\t\t\tconst cookie = [\r\n\t\t\t\t\t`${cookieName}=${sessionId}`,\r\n\t\t\t\t\t\"Path=/\",\r\n\t\t\t\t\t\"HttpOnly\",\r\n\t\t\t\t\t\"Secure\",\r\n\t\t\t\t\t\"SameSite=Lax\",\r\n\t\t\t\t\t`Max-Age=${ttlSec}`,\r\n\t\t\t\t].join(\"; \");\r\n\r\n\t\t\t\tconst data = {\r\n\t\t\t\t\tuserId: String(userRow.user_id),\r\n\t\t\t\t\tusername: userRow.username,\r\n\t\t\t\t\tname: userRow.name,\r\n\t\t\t\t\temail: userRow.email,\r\n\t\t\t\t\tisAdmin: userRow.is_admin === 1,\r\n\t\t\t\t};\r\n\t\t\t\treturn jsonResponse(200, { ok: true, code: \"OK\", message: \"\u6210\u529F\", data, meta: { requestId } }, { \"Set-Cookie\": cookie });\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(JSON.stringify({ level: \"error\", requestId, path, err: String(err) }));\r\n\t\t\t\tconst body = { ok: false, code: \"INTERNAL_ERROR\", message: \"\u4F3A\u670D\u5668\u932F\u8AA4\", meta: { requestId } };\r\n\t\t\t\tif (env.APP_ENV && env.APP_ENV !== \"prod\") body.error = String(err);\r\n\t\t\t\treturn jsonResponse(500, body);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t\t// DEV \u5C08\u7528\uFF1A\u5EFA\u7ACB\u6E2C\u8A66\u7528\u6236\uFF08\u50C5\u975E prod \u74B0\u5883\u53EF\u7528\uFF09\r\n\t\t\tif (path === \"/internal/api/v1/admin/dev-seed-user\") {\r\n\t\t\t\tif (env.APP_ENV === \"prod\") {\r\n\t\t\t\t\treturn jsonResponse(404, { ok: false, code: \"NOT_FOUND\", message: \"\u4E0D\u5B58\u5728\", meta: { requestId } });\r\n\t\t\t\t}\r\n\t\t\t\tif (method !== \"POST\") {\r\n\t\t\t\t\treturn jsonResponse(405, { ok: false, code: \"METHOD_NOT_ALLOWED\", message: \"\u65B9\u6CD5\u4E0D\u5141\u8A31\", meta: { requestId } });\r\n\t\t\t\t}\r\n\t\t\t\tlet body;\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbody = await request.json();\r\n\t\t\t\t} catch (_) {\r\n\t\t\t\t\treturn jsonResponse(400, { ok: false, code: \"BAD_REQUEST\", message: \"\u8ACB\u6C42\u683C\u5F0F\u932F\u8AA4\", meta: { requestId } });\r\n\t\t\t\t}\r\n\t\t\t\tconst username = (body?.username || \"\").trim().toLowerCase();\r\n\t\t\t\tconst name = (body?.name || \"\u6E2C\u8A66\u7528\u6236\").trim();\r\n\t\t\t\tconst password = body?.password || \"changeme\";\r\n\t\t\t\tlet email = (body?.email || \"\").trim();\r\n\t\t\t\tif (!username || !password) {\r\n\t\t\t\t\treturn jsonResponse(422, { ok: false, code: \"VALIDATION_ERROR\", message: \"username/password \u5FC5\u586B\", meta: { requestId } });\r\n\t\t\t\t}\r\n\t\t\t\tif (!env.DATABASE) {\r\n\t\t\t\t\treturn jsonResponse(500, { ok: false, code: \"INTERNAL_ERROR\", message: \"\u8CC7\u6599\u5EAB\u672A\u7D81\u5B9A\", meta: { requestId } });\r\n\t\t\t\t}\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst exists = await env.DATABASE.prepare(\r\n\t\t\t\t\t\t\"SELECT user_id FROM Users WHERE LOWER(username) = ? LIMIT 1\"\r\n\t\t\t\t\t).bind(username).first();\r\n\t\t\t\t\tif (!email) email = `${username}@example.com`;\r\n\t\t\t\t\tconst passwordHash = await hashPasswordPBKDF2(password);\r\n\t\t\t\t\tif (exists) {\r\n\t\t\t\t\t\tawait env.DATABASE.prepare(\r\n\t\t\t\t\t\t\t\"UPDATE Users SET username = ?, name = ?, email = ?, password_hash = ?, updated_at = ? WHERE user_id = ?\"\r\n\t\t\t\t\t\t).bind(username, name, email, passwordHash, new Date().toISOString(), exists.user_id).run();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tawait env.DATABASE.prepare(\r\n\t\t\t\t\t\t\t\"INSERT INTO Users (username, password_hash, name, email, gender, start_date, created_at, updated_at) VALUES (?, ?, ?, ?, 'M', date('now'), datetime('now'), datetime('now'))\"\r\n\t\t\t\t\t\t).bind(username, passwordHash, name, email).run();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn jsonResponse(200, { ok: true, code: \"OK\", message: \"\u5DF2\u5EFA\u7ACB/\u66F4\u65B0\u6E2C\u8A66\u7528\u6236\", data: { username, email }, meta: { requestId } });\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tconsole.error(JSON.stringify({ level: \"error\", requestId, path, err: String(err) }));\r\n\t\t\t\t\tconst body = { ok: false, code: \"INTERNAL_ERROR\", message: \"\u4F3A\u670D\u5668\u932F\u8AA4\", meta: { requestId } };\r\n\t\t\t\t\tif (env.APP_ENV && env.APP_ENV !== \"prod\") body.error = String(err);\r\n\t\t\t\t\treturn jsonResponse(500, body);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t// API \u4EE3\u7406\uFF1A/internal/api/* \u2192 <INTERNAL_API_HOST>/api/*\r\n\t\tif (path.startsWith(\"/internal/api/\")) {\r\n\t\t\treturn proxy(env.INTERNAL_API_HOST, path.replace(\"/internal\", \"\"));\r\n\t\t}\r\n\r\n\t\t// \u767B\u5165\u9801\uFF1A/login \u2192 <INTERNAL_BASE_HOST>/login\r\n\t\tif (path === \"/login\" || path.startsWith(\"/login/\")) {\r\n\t\t\treturn proxy(env.INTERNAL_BASE_HOST, \"/login\");\r\n\t\t}\r\n\r\n\t\t// \u5176\u4ED6\u5167\u90E8\u9801\u9762\uFF1A/internal/* \u2192 <INTERNAL_BASE_HOST>/*\r\n\t\tif (path.startsWith(\"/internal/\")) {\r\n\t\t\treturn proxy(env.INTERNAL_BASE_HOST, path.replace(\"/internal\", \"\"));\r\n\t\t}\r\n\r\n\t\t// \u672A\u5339\u914D\u8DEF\u5F91\uFF08\u7406\u8AD6\u4E0A\u4E0D\u6703\u56E0\u70BA routes \u53EA\u7D81\u5B9A\u7279\u5B9A\u8DEF\u5F91\uFF09\r\n\t\treturn fetch(request);\r\n\t},\r\n};\r\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"C:\\\\Users\\\\miama\\\\Desktop\\\\horgoscpa\\\\cloudflare\\\\worker-router\\\\src\\\\index.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\Users\\\\miama\\\\AppData\\\\Local\\\\npm-cache\\\\_npx\\\\d77349f55c2be1c0\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"C:\\\\Users\\\\miama\\\\AppData\\\\Local\\\\npm-cache\\\\_npx\\\\d77349f55c2be1c0\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"C:\\\\Users\\\\miama\\\\Desktop\\\\horgoscpa\\\\cloudflare\\\\worker-router\\\\src\\\\index.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"C:\\\\Users\\\\miama\\\\Desktop\\\\horgoscpa\\\\cloudflare\\\\worker-router\\\\.wrangler\\\\tmp\\\\bundle-tyxhaK\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"C:\\\\Users\\\\miama\\\\AppData\\\\Local\\\\npm-cache\\\\_npx\\\\d77349f55c2be1c0\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"C:\\\\Users\\\\miama\\\\Desktop\\\\horgoscpa\\\\cloudflare\\\\worker-router\\\\.wrangler\\\\tmp\\\\bundle-tyxhaK\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"C:\\\\Users\\\\miama\\\\Desktop\\\\horgoscpa\\\\cloudflare\\\\worker-router\\\\.wrangler\\\\tmp\\\\bundle-tyxhaK\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["body"]
}
